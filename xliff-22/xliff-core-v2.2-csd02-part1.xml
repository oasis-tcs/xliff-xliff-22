<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbook/docbookx.dtd">
<article lang="en-US" status="Committee Specification Draft 02">
  <articleinfo>
    <title>XLIFF Version 2.2. Part 1: Core</title>

    <releaseinfo role="track">Standards Track Work Product</releaseinfo>

    <productname class="trade">xliff-core</productname>

    <productnumber>csd02</productnumber>

    <releaseinfo role="OASIS-specification-this-authoritative">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-core-v2.2-csd02-part1.html</releaseinfo>
    <releaseinfo role="OASIS-specification-this">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-core-v2.2-csd02-part1.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-this">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-core-v2.2-csd02-part1.xml</releaseinfo>

    <releaseinfo role="OASIS-specification-previous-authoritative">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd01/xliff-core-v2.2-csd01-part1.html</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd01/xliff-core-v2.2-csd01-part1.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd01/xliff-core-v2.2-csd01-part1.xml</releaseinfo>
    
    <releaseinfo role="OASIS-specification-latest-authoritative">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2-part1.html</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2-part1.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2-part1.xml</releaseinfo>

    <releaseinfo role="committee"><ulink url="https://www.oasis-open.org/committees/xliff/">OASIS
        XLIFF TC</ulink></releaseinfo>

    <authorgroup>
      <othercredit role="chair">
        <honorific>Dr</honorific>
        <firstname>Lucía</firstname>
        <surname>Morado Vázquez</surname>
        <affiliation>
          <orgname><ulink url="https://www.unige.ch/en/">University of Geneva</ulink></orgname>
          <address format="linespecific"><email>lucia.morado@unige.ch</email></address>
        </affiliation>
        <email>lucia.morado@unige.ch</email>
      </othercredit>
      <editor>
        <firstname>Rodolfo M.</firstname>
        <surname>Raya</surname>
        <affiliation>
          <orgname><ulink url="https://maxprograms.com">Maxprograms</ulink></orgname>
          <address format="linespecific"><email>rmraya@maxprograms.com</email></address>
        </affiliation>
        <email>rmraya@maxprograms.com</email>
      </editor>
      <editor>
        <honorific>Dr</honorific>
        <firstname>Lucía</firstname>
        <surname>Morado Vázquez</surname>
        <affiliation>
          <orgname><ulink url="https://www.unige.ch/en/">University of Geneva</ulink></orgname>
          <address format="linespecific"><email>lucia.morado@unige.ch</email></address>
        </affiliation>
        <email>lucia.morado@unige.ch</email>
      </editor>
    </authorgroup>

    <pubdate>12 November 2024</pubdate>

    <copyright>
      <year>2024</year>
      <holder>OASIS Open, Inc. All Rights Reserved.</holder>
    </copyright>

    <legalnotice role="additional">
      <title>Additional artifacts</title>

      <para>This prose specification is one component of a Work Product that also includes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para>XLIFF Version 2.2. Part 1: Core. (this document) <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-core-v2.2-csd02-part1.html">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-core-v2.2-csd02-part1.html</ulink></para>
        </listitem>
        <listitem>
          <para>XLIFF Version 2.2. Part 2: Extended. <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-extended-v2.2-csd02-part2.html">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-extended-v2.2-csd02-part2.html</ulink></para>
        </listitem>
        <listitem>
          <para>XML schemas: <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/</ulink>
          </para>
        </listitem>
      </itemizedlist>
    </legalnotice>

    <legalnotice role="related">
      <title>Related Work</title>

      <para>This specification replaces or supersedes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para><emphasis>XLIFF Version 2.1.</emphasis> 13 February 2018. OASIS Standard. Latest
            Stage: <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.1/xliff-core-v2.1.html">https://docs.oasis-open.org/xliff/xliff-core/v2.1/xliff-core-v2.1.html</ulink></para>
        </listitem>
      </itemizedlist>

    </legalnotice>

    <legalnotice role="namespaces">
      <title>Declared XML Namespaces</title>

      <itemizedlist spacing="compact">
        <listitem>
          <para>urn:oasis:names:tc:xliff:document:2.2</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:matches:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:glossary:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:fs:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:metadata:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:resourcedata:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:sizerestriction:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:validation:2.0</para>
        </listitem>
        <listitem>
          <para>http://www.w3.org/2005/11/its</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:itsm:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:pgs:1.0</para>
        </listitem>
      </itemizedlist>
    </legalnotice>

    <abstract>
      <para>This document is Part 1 of a multi-part specification which defines Version 2.2 of
        the XML Localisation Interchange File Format (XLIFF). The purpose of this vocabulary is to
        store localizable data and carry it from one step of the localization process to the other,
        while allowing interoperability between and among tools.</para>
    </abstract>

    <legalnotice role="status">
      <title>Status</title>

      <para>This document was last revised or approved by the XLIFF TC on the above date. The level
        of approval is also listed above. Check the "Latest stage" location noted above for possible
        later revisions of this document. Any other numbered Versions and other technical work
        produced by the Technical Committee (TC) are listed at <ulink url="https://groups.oasis-open.org/communities/tc-community-home2?CommunityKey=3d0f1f56-8477-4b53-9b14-018dc7d3eecf">https://groups.oasis-open.org/communities/tc-community-home2?CommunityKey=3d0f1f56-8477-4b53-9b14-018dc7d3eecf</ulink>.</para>

      <para>TC members should send comments on this document to the TC's email list. Others should
        send comments to the TC's public comment list, after subscribing to it by following the
        instructions at <ulink url="https://groups.oasis-open.org/communities/community-home?CommunityKey=f7b70a54-5dd7-4ea9-9d6f-018dce262ff9">https://groups.oasis-open.org/communities/community-home?CommunityKey=f7b70a54-5dd7-4ea9-9d6f-018dce262ff9</ulink></para>

      <para>This document is provided under the <ulink url="https:https://www.oasis-open.org/policies-guidelines/ipr/#RF-Rand">RF on RAND
          Terms</ulink> Mode of the <ulink url="https://www.oasis-open.org/policies-guidelines/ipr/">OASIS IPR Policy</ulink>, the mode chosen when the Technical Committee was established.
        For information on whether any patents have been disclosed that may be essential to
        implementing this document, and any offers of patent licensing terms, please refer to the
        Intellectual Property Rights section of the TC's web page (<ulink url="https://www.oasis-open.org/committees/xliff/ipr.php">https://www.oasis-open.org/committees/xliff/ipr.php</ulink>). </para>

      <para>Note that any machine-readable content (<ulink url="https://www.oasis-open.org/policies-guidelines/tc-process-2017-05-26/#wpComponentsCompLang">Computer Language Definitions</ulink>) declared Normative for this Work Product is
        provided in separate plain text files. In the event of a discrepancy between any such plain
        text file and display content in the Work Product's prose narrative document(s), the content
        in the separate plain text file prevails. Key words: </para>
    </legalnotice>

    <legalnotice role="keywords">
      <title>Key words</title>
      <para>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD
        NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
        interpreted as described in BCP 14 <link linkend="rfc2119">[RFC2119]</link> and <link linkend="rfc8174">[RFC8174]</link> when, and only when, they appear in all capitals, as
        shown here.</para>
    </legalnotice>

    <legalnotice role="citation">
      <title>Citation format</title>
      <para>When referencing this document, the following citation format should be used:</para>
      <para><emphasis role="strong">[XLIFF-2.2-part1]</emphasis></para>
      <para>XLIFF Version 2.2 Part 1:Core. Edited by Rodolfo M. Raya and Lucía Morado Vázquez
        12 November 2024. OASIS Committee Specification Draft 02. <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-v2.2-part1-core-csd02.htmls">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/xliff-v2.2-part1-core-csd02.html</ulink>.
        Latest stage <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-v2.2-part1-core.html">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-v2.2-part1-core.html</ulink>.
      </para>
    </legalnotice>


    <legalnotice role="notices">
      <title>Notices</title>

      <para>Copyright © OASIS Open 2024. All Rights Reserved.</para>

      <para>Distributed under the terms of the OASIS IPR Policy, [<ulink url="https://www.oasis-open.org/policies-guidelines/ipr/">https://www.oasis-open.org/policies-guidelines/ipr/</ulink>]. For complete copyright
        information please see the full Notices section in an Appendix below.</para>
    </legalnotice>
  </articleinfo>

  <section>
  <title>Introduction</title>

  <para>XLIFF is the <emphasis>XML Localization Interchange File Format</emphasis> designed by a
    group of multilingual content publishers, software providers, localization service providers,
    localization tools providers, and researchers. It is intended to give any multilingual content
    owner a single interchange file format that can be understood by any localization provider,
    using any conformant localization tool. While the primary focus is on being a lossless
    interchange format, usage of XLIFF as a processing format is neither encouraged nor discouraged
    or prohibited.</para>

  <para><emphasis>All text is normative unless otherwise labeled.</emphasis>
  </para>

  <section id="newSinceLast">
    <title>Changes from earlier Versions</title>
    <para>XLIFF 2.2 has two main significant differences from the previous version published (XLIFF
      2.1):</para>

    <orderedlist continuation="restarts" inheritnum="ignore">
      <listitem>
        <para> XLIFF 2.2 is presented in two separate documents:</para>
        <itemizedlist>
          <listitem>
            <para><emphasis>XLIFF Version 2.2. Part 1: Core</emphasis> presents the XLIFF core,
              which is the minimum set of XML elements and attributes required to create a valid
              XLIFF file.</para>
          </listitem>
          <listitem>
            <para><emphasis>XLIFF Version 2.2. Part 2: Extended</emphasis> presents the XLIFF core as
              well as the optional modules that were created to store information about specific
              processes. For example, the <remark>Translation Candidates Module</remark> was designed to store
              translation suggestions and their associated metadata.</para>
          </listitem>
        </itemizedlist>

        <para>In previous versions of XLIFF, the specification was always presented in a single
          document. This change in the presentation mode was introduced to produce a simplified
          version (<emphasis>Part 1: Core</emphasis>) of the specification that would be easier to
          use, especially for those agents who are not interested in implementing the optional
          modules.</para>
      </listitem>
      <listitem>
        <para>XLIFF 2.2 includes the new <remark>Plural, Gender, and Select Module</remark>, which
          was designed to store information needed to represent and process messages with variants.
          The new module description can be found in the document XLIFF Version 2.2. Part 2:
          Extended.</para>
      </listitem>
    </orderedlist>
    <para>For a detailed list of changes made between version 2.1 and the current version (2.2)
      please see the <link linkend="specChangeTracking">Specification Change Tracking</link> section in Appendix
      D.</para>
    <para>Note that all changes introduced in version 2.2 were designed to maintain compatibility
      with versions 2.0 and 2.1.</para>
  </section>

  <section id="definitions">
    <title>Definition of terms</title>

    <variablelist>

      <varlistentry>
        <term>Agent</term>

        <listitem>
          <para>any application or tool that generates (creates), reads, edits, writes, processes,
            stores, renders or otherwise handles XLIFF documents.</para>
          <para>Agent is the most general application conformance target that subsumes all other
            specialized user agents disregarding whether they are defined in this specification or
            not.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Enrich</term>
        <term>Enriching</term>
        <listitem>
          <para> the process of associating module and extension based metadata and resources with
            the Extracted XLIFF payload </para>
          <itemizedlist>
            <title>Processing Requirements</title>
            <listitem>
              <para>Enriching MAY happen at the time of Extraction. </para>
            </listitem>
          </itemizedlist>
          <note>
            <para>Extractor knowledge of the native format is not assumed while Enriching.</para>
          </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Enricher</term>
        <term>Enricher Agent</term>
        <listitem>
          <para>any Agent that performs the Enriching process </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Extract</term>
        <term>Extraction</term>
        <listitem>
          <para>the process of encoding localizable content from a native content or User Interface
            format as XLIFF payload, so that localizable parts of the content in the source language
            are available for translation into the target language along with the necessary context
            information </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Extractor</term>
        <term>Extractor Agent</term>

        <listitem>
          <para>any Agent that performs the Extraction process </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Merge</term>
        <term>Merging</term>

        <listitem>
          <para>the process of importing XLIFF payload back to the originating native format, based
            on the <emphasis>full knowledge</emphasis> of the Extraction mechanism, so that the
            localized content or User Interface strings replace the source language in the native
            format </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Merger</term>
        <term>Merger Agent</term>

        <listitem>
          <para>an Agent that performs the Merge process </para>

          <warning>
            <para> Unless specified otherwise, any Merger is deemed to have the same knowledge of
              the native format as the Extractor throughout the specification. </para>
            <para>Mergers independent of Extractors can succeed, but it is out of scope of this
              specification to specify interoperability for merging back without the full Extractor
              knowledge of the native format. </para>
          </warning>
        </listitem>

      </varlistentry>

      <varlistentry>
        <term>Modify</term>
        <term>Modification</term>
        <listitem>
          <para> the process of changing core and module XLIFF structural and inline elements that
            were previously created by other Writers </para>
          <itemizedlist>
            <title>Processing Requirements</title>
            <listitem>
              <para> XLIFF elements MAY be Modified and Enriched at the same time. </para>
            </listitem>
          </itemizedlist>
          <note>
            <para>Extractor or Enricher knowledge of the native format is not assumed while
              modifying.</para>
          </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Modifier</term>
        <term>Modifier Agent</term>

        <listitem>
          <para>an Agent that performs the Modification process </para>

        </listitem>

      </varlistentry>

      <varlistentry>
        <term>Translation</term>
        <term>Translate</term>

        <listitem>
          <para>a rendering of the meaning of the source text, expressed in the target
            language</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Writer</term>
        <term>Writer Agent</term>

        <listitem>
          <para>an Agent that creates, generates, or otherwise writes an XLIFF document for whatever
            purpose, including but not limited to Extractor, Modifier, and Enricher Agents. </para>

          <note>
            <para> Since XLIFF is intended as an exchange format rather than a processing format,
              many applications will need to generate XLIFF documents from their internal processing
              formats, even in cases when they are processing XLIFF documents created by another
              Extractor. </para>
          </note>
        </listitem>


      </varlistentry>
    </variablelist>
  </section>

  <section id="keyconcepts">
    <title>Key concepts</title>

    <variablelist>
      <varlistentry>
        <term>XLIFF Core</term>

        <listitem>
          <para>The core of XLIFF 2.2 consists of the minimum set of XML elements and
            attributes required to (a) prepare a document that contains text extracted from one or
            more files for localization, (b) allow it to be completed with the translation of the
            extracted text, and (c) allow the generation of translated versions of the original
            document.</para>

          <para>The XML namespace that corresponds to the core subset of XLIFF 2.2 is
              <code>"urn:oasis:names:tc:xliff:document:2.2"</code>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>XLIFF-defined (elements and attributes)</term>
        <listitem>
          <para>The following is the list of allowed schema URI prefixes for XLIFF-defined elements
            and attributes:</para>
          <simplelist type="vert">
            <member><code>urn:oasis:names:tc:xliff:</code></member>
            <member><code>http://www.w3.org/2005/11/its</code></member>
          </simplelist>

          <para>However, the following namespaces are NOT considered XLIFF-defined for the purposes
            of the XLIFF 2.2 specification:</para>
          <simplelist type="vert">
            <member><code>urn:oasis:names:tc:xliff:document:1.0</code></member>
            <member><code>urn:oasis:names:tc:xliff:document:1.1</code></member>
            <member><code>urn:oasis:names:tc:xliff:document:1.2</code></member>
          </simplelist>
          <para>Elements and attributes from other namespaces are not XLIFF-defined.</para>
        </listitem>


      </varlistentry>

      <varlistentry>
        <term>XLIFF Document</term>

        <listitem>
          <para>Any XML document that declares the namespace
              <code>"urn:oasis:names:tc:xliff:document:2.2"</code> as its main namespace, has
              <link linkend="xliff"><code>&lt;xliff></code></link> as the root element and complies with the XML
            Schemas and the declared Constraints that are part of this specification.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>XLIFF Module</term>

        <listitem>
          <para>A module is an OPTIONAL set of XML elements and attributes that stores information
            about a process applied to an XLIFF Document and the data incorporated into the document
            as result of that process.</para>

          <para>Each official module defined for XLIFF 2.2 has its grammar defined in an
            independent XML Schema with a separate namespace.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>


</section>
  <section id="fragid">
  <title>Fragment Identification</title>
  <para>Because XLIFF documents do not follow the usual behavior of XML documents when it comes to
    element identifiers, this specification defines how Agents MUST interpret the fragment
    identifiers in IRIs pointing to XLIFF documents.</para>
  <note>
    <para>Note that some identifiers may change during the localization process. For example <link linkend="data"><code>&lt;data></code></link>
      elements may be re-grouped or not depending on how tools treat identical original data.</para>
  </note>
  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>A fragment identifier MUST match the following format:</para>
      <programlisting format="linespecific">
&lt;expression>      ::= "#" ["/"] &lt;selector>
                      {&lt;selectorSeparator> &lt;selector>}
&lt;selector>        ::= [&lt;prefix> &lt;prefixSeparator>] &lt;id>
&lt;prefix>          ::= NMTOKEN
&lt;id>              ::= NMTOKEN
&lt;prefixSeparator> ::= "="
&lt;selectorSeparator>  ::= "/"</programlisting>
    </listitem>
    <listitem>
      <para>There MUST NOT be two identical prefixes in the expression.</para>
    </listitem>
    <listitem>
      <para>When used, the following selectors MUST be declared in this order: file selector, group
        selector and unit selector.</para>
    </listitem>
    <listitem>
      <para>The selectors for modules or extensions, <link linkend="note"><code>&lt;note></code></link>, <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> or source inline elements, target inline
        elements and <link linkend="data"><code>&lt;data></code></link> have the following constraints:</para>
      <itemizedlist>
        <listitem>
          <para>Only one of them MAY be used in the expression.</para>
        </listitem>
        <listitem>
          <para>The one used MUST be the last selector of the expression.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <warning>
    <para>Note that due to the above Constraints, referencing fragments using third party namespaces
      within Modules or extensions (including but not limited to XLIFF Core or the Metadata Module)
      is not possible. This is to restrict the complexity of the fragment identification mechanism,
      as it would otherwise have potentially unlimited depth.</para>
  </warning>
  <section>
    <title>Selectors for Core Elements</title>
    <itemizedlist>
      <listitem>
        <para>The prefix <code>f</code> indicates a <link linkend="file"><code>&lt;file></code></link> id and the value of that id is unique among all <link linkend="file"><code>&lt;file></code></link>
          <code>id</code> attribute values within the enclosing <link linkend="xliff"><code>&lt;xliff></code></link> element.</para>
      </listitem>

      <listitem>
        <para>The prefix <code>g</code> indicates a <link linkend="group"><code>&lt;group></code></link> id and the value of that id is unique among all
            <link linkend="group"><code>&lt;group></code></link>
          <code>id</code> attribute values within the enclosing <link linkend="file"><code>&lt;file></code></link> element.</para>
      </listitem>

      <listitem>
        <para>The prefix <code>u</code> indicates a <link linkend="unit"><code>&lt;unit></code></link> id and the value of that id is unique among all
            <link linkend="unit"><code>&lt;unit></code></link>
          <code>id</code> attribute values within the enclosing <link linkend="file"><code>&lt;file></code></link> element.</para>
      </listitem>

      <listitem>
        <para>The prefix <code>n</code> indicates a <link linkend="note"><code>&lt;note></code></link> id and the value of that id is unique among all
            <link linkend="note"><code>&lt;note></code></link>
          <code>id</code> attribute values within the immediate enclosing <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link>, or <link linkend="unit"><code>&lt;unit></code></link> element.</para>
      </listitem>

      <listitem>
        <para>The prefix <code>d</code> indicates a <link linkend="data"><code>&lt;data></code></link> id and the value of that id is unique among all <link linkend="data"><code>&lt;data></code></link>
          <code>id</code> attribute values within the enclosing <link linkend="unit"><code>&lt;unit></code></link> element.</para>
      </listitem>

      <listitem>
        <para>The prefix <code>t</code> indicates an id for an inline element in the <link linkend="target"><code>&lt;target></code></link> element and the value of that id is unique within
          the enclosing <link linkend="unit"><code>&lt;unit></code></link> element (with the exception of the matching inline
          elements in the <link linkend="source"><code>&lt;source></code></link>).</para>
      </listitem>

      <listitem>
        <para>No prefix indicates an id for a <link linkend="segment"><code>&lt;segment></code></link> or an <link linkend="ignorable"><code>&lt;ignorable></code></link> or an inline element in the <link linkend="source"><code>&lt;source></code></link> element and the value of that id is unique within
          the enclosing <link linkend="unit"><code>&lt;unit></code></link> element (with the exception of the matching inline
          elements in the <link linkend="target"><code>&lt;target></code></link>).</para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="fragid-modandext">
    <title>Selectors for Modules and Extensions</title>
    <para>A selector for a module or an extension uses a registered prefix and the value of that id
      is unique within the immediate enclosing <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link> or <link linkend="unit"><code>&lt;unit></code></link> element.</para>
    <itemizedlist>
      <title>Constraints</title>
      <listitem>
        <para>The prefix of a module or an extension MUST be an NMTOKEN longer than 1 character and
          MUST be defined in the module or extension specification.</para>
      </listitem>
      <listitem>
        <para>The prefix of a module or an extension MUST be registered with the XLIFF TC.</para>
      </listitem>
      <listitem>
        <para>A given module or extension namespace URI MUST be associated with a single
          prefix.</para>
      </listitem>
      <listitem>
        <para>A prefix MAY be associated with more than one namespace URI (to allow for example
          different versions of a given module or extension to use the same prefix).</para>
      </listitem>
    </itemizedlist>
    <para>See also the <link linkend="ext-constraints">constraints related to how IDs need to be specified in extensions</link> (which applies
      for modules as well).</para>
  </section>
  <section>
    <title>Relative References</title>
    <para>Fragment identifiers that do not start with a character <code>/</code> (U+002F) are
      relative to their location in the document, or to the document being processed.</para>
    <para>Any unit, group or file selector missing to resolve the relative reference is obtained
      from the immediate enclosing unit, group or file elements.</para>
  </section>
  <section id="fragid-example">
    <title>Examples</title>
    <para>Given the following XLIFF document:</para>
    <programlisting format="linespecific">
&lt;xliff xmlns="urn:oasis:names:tc:xliff:document:2.2" version="2.2"
    srcLang="en" trgLang="fr">
  &lt;file id="f1">
    &lt;notes>
      &lt;note id="n1">note for file.&lt;/note>
    &lt;/notes>
    &lt;unit id="u1">
      &lt;my:elem xmlns:my="myNamespaceURI" id="x1">data&lt;/my:elem>
      &lt;notes>
        &lt;note id="n1">note for unit&lt;/note>
      &lt;/notes>
      &lt;segment id="s1">
        &lt;source>&lt;pc id="1">Hello &lt;mrk id="m1" type="term">World&lt;/mrk>!&lt;/pc>
            &lt;/source>
        &lt;target>&lt;pc id="1">Bonjour le &lt;mrk id="m1" type="term">Monde&lt;/mrk>
            ! &lt;/pc>&lt;/target>
      &lt;/segment>
    &lt;/unit>
  &lt;/file>
&lt;/xliff>
</programlisting>
    <para>You can have the following fragment identifiers:</para>
    <itemizedlist>
      <listitem>
        <para><code>#f=f1/u=u1/1</code> refers to the element <code>&lt;pc id="1"></code> of the
          source content of the element <code>&lt;unit id="u1"></code>.</para>
      </listitem>
      <listitem>
        <para><code>#f=f1/u=u1/t=1</code> refers to the element <code>&lt;pc id="1"></code> of the
          target content of the element <code>&lt;unit id="u1"></code>.</para>
      </listitem>
      <listitem>
        <para><code>#f=f1/n=n1</code> refers to the element <code>&lt;note id="n1"></code> of the
          element <code>&lt;file id="f1"></code>.</para>
      </listitem>
      <listitem>
        <para><code>#f=f1/u=u1/n=n1</code> refers to the element <code>&lt;note id="n1"></code> of
          the element <code>&lt;unit id="u1"></code>.</para>
      </listitem>
      <listitem>
        <para><code>#f=f1/u=u1/s1</code> refers to the element <code>&lt;segment id="s1"></code> of
          the element <code>&lt;unit id="u1"></code>.</para>
      </listitem>
      <listitem>
        <para>Assuming the extension defined by the namespace URI <code>myNamespaceURI</code> has
          registered the prefix <code>myprefix</code>, the expression
            <code>#f=f1/u=u1/myprefix=x1</code> refers to the element <code>&lt;my:element
            id="x1"></code> of the element <code>&lt;unit id="u1"></code>.</para>
      </listitem>
    </itemizedlist>
  </section>

</section>

  <section id="core">
    <title>The Core Specification</title>

    <para>XLIFF is a bilingual document format designed for containing text that needs translation,
        its corresponding translations and auxiliary data that makes the translation process
        possible.</para>

    <para>At creation time, an XLIFF document MAY contain only text in the source language.
        Translations expressed in the target language MAY be added at a later time.</para>

    <para>The root element of an XLIFF document is <link linkend="xliff"><code>&lt;xliff></code></link>. It contains a collection of <link linkend="file"><code>&lt;file></code></link> elements. Typically, each <link linkend="file"><code>&lt;file></code></link> element contains a set of <link linkend="unit"><code>&lt;unit></code></link> elements that contain the text to be translated in
        the <link linkend="source"><code>&lt;source></code></link> child of one or more <link linkend="segment"><code>&lt;segment></code></link> elements. Translations are stored in the
            <link linkend="target"><code>&lt;target></code></link> child of each <link linkend="segment"><code>&lt;segment></code></link> element.</para>

    <section>
        <title>General Processing Requirements</title>


        <itemizedlist>
            <title/>

            <listitem>
                <para>An Agent processing a valid XLIFF Document that contains XLIFF-defined
                    elements and attributes that it cannot handle MUST preserve those elements and
                    attributes.</para>
            </listitem>
            <listitem>
                <para>An Agent processing a valid XLIFF Document that contains custom elements and
                    attributes that it cannot handle SHOULD preserve those elements and
                    attributes.</para>
            </listitem>

        </itemizedlist>
    </section>

    <section>
    <title>Elements</title>
    <para>This section contains a description of all elements used in XLIFF Core.</para>
    <section>
  <title>Tree Structure</title>
  <para>Legend:</para>
  <simplelist type="vert">
    <member>1 = one</member>
    <member>+ = one or more</member>
    <member>? = zero or one</member>
    <member>* = zero or more</member>
  </simplelist>
  <programlisting format="linespecific">
<link linkend="xliff"><code>&lt;xliff></code></link>
|
+---<link linkend="notes"><code>&lt;notes></code></link> ?
| |
| +---<link linkend="note"><code>&lt;note></code></link> +
|
+---<remark><code>&lt;mda:metadata></code></remark> ?
| |
| +---<remark><code>&lt;mda:metagroup></code></remark> +
|   |
|   +---At least one of (<remark><code>&lt;mda:metagroup></code></remark> OR <remark><code>&lt;mda:meta></code></remark>) 
|
+---<link linkend="file"><code>&lt;file></code></link> +
  |
  +---<link linkend="skeleton"><code>&lt;skeleton></code></link> ?
  | |
  | +---&lt;other> *
  |
  +---&lt;other> *
  |
  +---<link linkend="notes"><code>&lt;notes></code></link> ?
  | |
  | +---<link linkend="note"><code>&lt;note></code></link> +
  |
  +---At least one of (<link linkend="unit"><code>&lt;unit></code></link> OR <link linkend="group"><code>&lt;group></code></link>)
      | |
      | +---<link linkend="unit"><code>&lt;unit></code></link>
      |   |
      |   +---&lt;other> *
      |   |
      |   +---<link linkend="notes"><code>&lt;notes></code></link> ?
      |   | |
      |   | +---<link linkend="note"><code>&lt;note></code></link> +
      |   |
      |   +---<link linkend="originaldata"><code>&lt;originalData></code></link> ?
      |   | |
      |   | +---<link linkend="data"><code>&lt;data></code></link> +
      |   |
      |   +---At least one of (<link linkend="segment"><code>&lt;segment></code></link> OR <link linkend="ignorable"><code>&lt;ignorable></code></link>)
      |       | |
      |       | +---<link linkend="segment"><code>&lt;segment></code></link>
      |       |   |
      |       |   +---<link linkend="source"><code>&lt;source></code></link> 1
      |       |   |
      |       |   +---<link linkend="target"><code>&lt;target></code></link> ?
      |       |
      |       +---<link linkend="ignorable"><code>&lt;ignorable></code></link>
      |           |
      |           +---<link linkend="source"><code>&lt;source></code></link> 1
      |           |
      |           +---<link linkend="target"><code>&lt;target></code></link> ?
      |
      +---<link linkend="group"><code>&lt;group></code></link>
          |
          +---&lt;other> *
          |
          +---<link linkend="notes"><code>&lt;notes></code></link> ?
          | |
          | +---<link linkend="note"><code>&lt;note></code></link> +
          |
          +---At least one of (<link linkend="unit"><code>&lt;unit></code></link> OR <link linkend="group"><code>&lt;group></code></link>)


  </programlisting>
</section>
    <section id="structural">
    <title>Structural Elements</title>
    <para>The structural elements used in XLIFF Core are: <link linkend="xliff"><code>&lt;xliff></code></link>, <link linkend="file"><code>&lt;file></code></link>, <link linkend="skeleton"><code>&lt;skeleton></code></link>, <link linkend="group"><code>&lt;group></code></link>, <link linkend="unit"><code>&lt;unit></code></link>, <link linkend="segment"><code>&lt;segment></code></link>, <link linkend="ignorable"><code>&lt;ignorable></code></link>, <link linkend="notes"><code>&lt;notes></code></link>,
            <link linkend="note"><code>&lt;note></code></link>,
            <link linkend="originaldata"><code>&lt;originalData></code></link>, <link linkend="data"><code>&lt;data></code></link>, <link linkend="source"><code>&lt;source></code></link>
        and <link linkend="target"><code>&lt;target></code></link>. </para>

    <section id="xliff">
    <title>xliff</title>
    <para>Root element for XLIFF documents.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- Zero or one <link linkend="notes"><code>&lt;notes></code></link> element followed by</member>
        <member>- Zero or one <remark><code>&lt;mda:metadata></code></remark> element followed by</member>
        <member>- One or more <link linkend="file"><code>&lt;file></code></link> elements</member>
    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="version"><code>version</code></link>, REQUIRED</member>
        <member>- <link linkend="srcLang"><code>srcLang</code></link>, REQUIRED</member>
        <member>- <link linkend="trgLang"><code>trgLang</code></link>, OPTIONAL</member>
        <member>- <link linkend="xml_space"><code>xml:space</code></link>, OPTIONAL</member>
        <member>- attributes from other namespaces, OPTIONAL</member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>The <link linkend="trgLang"><code>trgLang</code></link> attribute is REQUIRED if and only if the XLIFF
                document contains <link linkend="target"><code>&lt;target></code></link> elements that are children of <link linkend="segment"><code>&lt;segment></code></link> or
                    <link linkend="ignorable"><code>&lt;ignorable></code></link>. </para>
        </listitem>
    </itemizedlist>
    <note>
        <para>The use of attributes from XLIFF modules MUST be in accordance with the constraints
            specified in the corresponding modules.</para>
    </note>
</section>

    <section id="file">
    <title>file</title>
    <para>Container for localization material extracted from an entire single document, or another
        high level self contained logical node in a content structure that cannot be described in
        the terms of documents.</para>
    <note>
        <para>Sub-document artifacts such as particular sheets, pages, chapters and similar are
            better mapped onto the <link linkend="group"><code>&lt;group></code></link> element. The <code>&lt;file></code> element is
            intended for the highest logical level. For instance a collection of papers would map to
            a single XLIFF Document, each paper will be represented with one <code>&lt;file></code>
            element, whereas chapters and subsections will map onto nested <link linkend="group"><code>&lt;group></code></link>
            elements.</para>
    </note>



    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- Zero or one <link linkend="skeleton"><code>&lt;skeleton></code></link> element followed by</member>
        <member>- elements from other namespaces, OPTIONAL</member>

        <member>- Zero or one <link linkend="notes"><code>&lt;notes></code></link> element followed by</member>


        <member>- One or more <link linkend="unit"><code>&lt;unit></code></link> or <link linkend="group"><code>&lt;group></code></link> elements in any order.</member>

    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="id"><code>id</code></link>,
            REQUIRED</member>
        <member>- <link linkend="canResegment"><code>canResegment</code></link>, OPTIONAL</member>
        <member>- <link linkend="original"><code>original</code></link>, OPTIONAL</member>
        <member>- <link linkend="translate"><code>translate</code></link>, OPTIONAL</member>
        <member>- <link linkend="srcdir"><code>srcDir</code></link>, OPTIONAL</member>
        <member>- <link linkend="trgdir"><code>trgDir</code></link>, OPTIONAL</member>
        <member>- <link linkend="xml_space"><code>xml:space</code></link>, OPTIONAL</member>
        <member>- attributes from other namespaces, OPTIONAL</member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>The following XLIFF Module elements are explicitly allowed by the wildcard
                    <code>other</code>:</para>
            <simplelist type="vert">
                <member>- Zero or one <remark><code>&lt;mda:metadata></code></remark>
                    elements</member>
                <member>- Zero or one <remark><code>&lt;res:resourceData></code></remark>
                    element</member>
                <member>- Zero or one <remark><code>&lt;slr:profiles></code></remark>
                    elements</member>
                <member>- Zero or one <remark><code>&lt;slr:data></code></remark> elements</member>
                <member>- Zero or one <remark><code>&lt;val:validation></code></remark>
                    elements</member>
                <member>- Zero, one, or more <remark><code>&lt;its:provenanceRecords></code></remark> elements</member>

            </simplelist>
        </listitem>
        <listitem>
            <para>Module and Extension elements MAY be used in any order.</para>
        </listitem>
    </itemizedlist>
    <note>
        <para>The use of attributes from XLIFF modules MUST be in accordance with the constraints
            specified in the corresponding modules.</para>
    </note>
</section>

    <section id="skeleton">
    <title>skeleton</title>
    <para>Container for non-translatable material pertaining to the parent <link linkend="file"><code>&lt;file></code></link> element.</para>
    <para><emphasis>Contains:</emphasis></para>
    <para>Either</para>
    <simplelist type="vert">
        <member>- Non-translatable text</member>
        <member>- elements from other namespaces</member>
    </simplelist>
    <para>or</para>
    <simplelist type="vert">
        <member>- is empty.</member>
    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="href"><code>href</code></link>, OPTIONAL</member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para> The attribute <link linkend="href"><code>href</code></link> is REQUIRED if and only if the <link linkend="skeleton"><code>&lt;skeleton></code></link> element is empty. </para>
        </listitem>
    </itemizedlist>
    <itemizedlist>
        <title>Processing Requirements</title>
        <listitem>
            <para>Modifiers and Enrichers processing an XLIFF document that contains a <link linkend="skeleton"><code>&lt;skeleton></code></link> element MUST NOT change
                that element, its attributes, or its content. </para>
        </listitem>
        <listitem>
            <para>Extractors creating an XLIFF document with a <link linkend="skeleton"><code>&lt;skeleton></code></link> element MUST leave the <link linkend="skeleton"><code>&lt;skeleton></code></link> element empty if and only
                if they specify the attribute <link linkend="href"><code>href</code></link>.</para>
        </listitem>
    </itemizedlist>
</section>

    <section id="group">
    <title>group</title>
    <para>Provides a way to organize units into a structured hierarchy.</para>
    <para>Note that this is especially useful for mirroring a source format's hierarchical
        structure.</para>

    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- elements from other namespaces, OPTIONAL</member>
        <member>- Zero or one <link linkend="notes"><code>&lt;notes></code></link> element followed by</member>
        <member>- Zero, one or more <link linkend="unit"><code>&lt;unit></code></link> or <link linkend="group"><code>&lt;group></code></link> elements in any order.</member>





    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="id"><code>id</code></link>,
            REQUIRED</member>
        <member>- <link linkend="name"><code>name</code></link>, OPTIONAL</member>
        <member>- <link linkend="canResegment"><code>canResegment</code></link>, OPTIONAL</member>
        <member>- <link linkend="translate"><code>translate</code></link>, OPTIONAL</member>
        <member>- <link linkend="srcdir"><code>srcDir</code></link>, OPTIONAL</member>
        <member>- <link linkend="trgdir"><code>trgDir</code></link>, OPTIONAL</member>
        <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>
        <member>- <link linkend="xml_space"><code>xml:space</code></link>, OPTIONAL</member>

        <member>- attributes from other namespaces, OPTIONAL</member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>The following XLIFF Module elements are explicitly allowed by the wildcard
                    <code>other</code>:</para>
            <simplelist type="vert">
                <member>- Zero or one <remark><code>&lt;mda:metadata></code></remark>
                    elements</member>
                <member>- Zero or one <remark><code>&lt;slr:data></code></remark> elements</member>
                <member>- Zero or one <remark><code>&lt;val:validation></code></remark>
                    elements</member>
                <member>- Zero, one, or more <remark><code>&lt;its:provenanceRecords></code></remark> elements</member>

            </simplelist>
        </listitem>
        <listitem>
            <para>Module and Extension elements MAY be used in any order.</para>
        </listitem>
    </itemizedlist>
    <note>
        <para>The use of attributes from XLIFF modules MUST be in accordance with the constraints
            specified in the corresponding modules.</para>
    </note>
</section>

    <section id="unit">
    <title>unit</title>
    <para>Static container for a dynamic structure of elements holding the extracted translatable
        source text, aligned with the translated text.</para>

    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- elements from other namespaces, OPTIONAL</member>
        <member>- Zero or one <link linkend="notes"><code>&lt;notes></code></link> elements followed by</member>
        <member>- Zero or one <link linkend="originaldata"><code>&lt;originalData></code></link> element followed by</member>
        <member>- One or more <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> elements in any
            order.</member>






    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="id"><code>id</code></link>,
            REQUIRED</member>
        <member>- <link linkend="name"><code>name</code></link>, OPTIONAL</member>
        <member>- <link linkend="canResegment"><code>canResegment</code></link>, OPTIONAL</member>
        <member>- <link linkend="translate"><code>translate</code></link>, OPTIONAL</member>
        <member>- <link linkend="srcdir"><code>srcDir</code></link>, OPTIONAL</member>
        <member>- <link linkend="trgdir"><code>trgDir</code></link>, OPTIONAL</member>
        <member>- <link linkend="xml_space"><code>xml:space</code></link>, OPTIONAL</member>

        <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>



        <member>- attributes from other namespaces, OPTIONAL</member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>A <link linkend="unit"><code>&lt;unit></code></link> MUST contain at least one
                    <link linkend="segment"><code>&lt;segment></code></link> element. </para>
        </listitem>
        <listitem>
            <para>The following XLIFF Module elements are explicitly allowed by the wildcard
                    <code>other</code>:</para>
            <simplelist type="vert">
                <member>- Zero or one <remark><code>&lt;mtc:matches></code></remark> elements</member>
                <member>- Zero or one <remark><code>&lt;gls:glossary></code></remark>
                    elements</member>
                <member>- Zero or one <remark><code>&lt;mda:metadata></code></remark>
                    elements</member>
                <member>- Zero or one <remark><code>&lt;res:resourceData></code></remark>
                    elements </member>
                <member>- Zero or one <remark><code>&lt;slr:data></code></remark> elements </member>
                <member>- Zero or one <remark><code>&lt;val:validation></code></remark> elements </member>
                <member>- Zero, one, or more <remark><code>&lt;its:locQualityIssues></code></remark> elements</member>
                <member>- Zero, one, or more <remark><code>&lt;its:provenanceRecords></code></remark> elements</member>

            </simplelist>
        </listitem>
        <listitem>
            <para>Module and Extension elements MAY be used in any order.</para>
        </listitem>
    </itemizedlist>
    <note>
        <para>The use of attributes from XLIFF modules MUST be in accordance with the constraints
            specified in the corresponding modules.</para>
    </note>
</section>

    <section id="segment">
  <title>segment</title>

  <para>This element is a container to hold in its aligned pair of children elements the minimum
    portion of translatable source text and its translation in the given <link linkend="segmentation">Segmentation</link>.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- One <link linkend="source"><code>&lt;source></code></link> element followed by</member>

    <member>- Zero or one <link linkend="target"><code>&lt;target></code></link> element</member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="id"><code>id</code></link>,
      OPTIONAL</member>

    <member>- <link linkend="canResegment"><code>canResegment</code></link>, OPTIONAL</member>
    <member>- <link linkend="state"><code>state</code></link>, OPTIONAL</member>
    <member>- <link linkend="substate"><code>subState</code></link>, OPTIONAL</member>

    <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:pgs:1.0</code>, OPTIONAL,
      provided that the Constraints specified in the <remark>Plural, Gender, and Select Module</remark> are
      met.</member>

  </simplelist>

</section>

    <section id="ignorable">
    <title>ignorable</title>
    <para>Part of the extracted content that is not included in a segment (and therefore not
        translatable). For example tools can use <code>&lt;ignorable></code> to store the white
        space and/or codes that are between two segments.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- One <link linkend="source"><code>&lt;source></code></link> element followed by</member>
        <member>- Zero or one <link linkend="target"><code>&lt;target></code></link> element</member>
    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="id"><code>id</code></link>,
            OPTIONAL</member>
    </simplelist>

</section>

    <section id="notes">
    <title>notes</title>
    <para>Collection of comments.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- One or more <link linkend="note"><code>&lt;note></code></link>
            elements</member>
    </simplelist>

</section>

    <section id="note">
    <title>note</title>
    <para>This is an XLIFF specific way how to present end user readable comments and annotations. A
        note can contain information about <link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link>, <link linkend="unit"><code>&lt;unit></code></link>, <link linkend="group"><code>&lt;group></code></link>, <link linkend="file"><code>&lt;file></code></link> or <link linkend="xliff"><code>&lt;xliff></code></link> elements.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- Text</member>
    </simplelist>
    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="id"><code>id</code></link>,
            OPTIONAL</member>
        <member>- <link linkend="appliesto"><code>appliesTo</code></link>, OPTIONAL</member>
        <member>- <link linkend="category"><code>category</code></link>, OPTIONAL</member>
        <member>- <link linkend="priority"><code>priority</code></link>, OPTIONAL</member>
        <member>- <link linkend="ref"><code>ref</code></link>, OPTIONAL</member>
        <member>- attributes from other namespaces, OPTIONAL</member>
    </simplelist>

    <para><emphasis>Example:</emphasis></para>

    <programlisting format="linespecific">
&lt;unit id="18">
  &lt;notes>
    &lt;note id="1" ref="#18-0">Change text to lower case&lt;/note>
  &lt;/notes>
  &lt;segment state="initial" id="18-0">
    &lt;source>Create Memories from Existing Translations&lt;/source>
  &lt;/segment>
&lt;/unit>        
    </programlisting>
    <note>
        <para>When the <link linkend="ref"><code>ref</code></link> attribute points to a <link linkend="segment"><code>&lt;segment></code></link> element, by default the <link linkend="note"><code>&lt;note></code></link> content applies to its <link linkend="source"><code>&lt;source></code></link> child, unless the optional <link linkend="appliesto">appliesTo</link> attribute is set
            to <code>target</code>.</para>
    </note>
    <note>
        <para>The use of attributes from XLIFF modules MUST be in accordance with the constraints
            specified in the corresponding modules.</para>
    </note>
</section>

    <section id="originaldata">
  <title>originalData</title>

  <para>Unit-level collection of original data for the inline codes.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- One or more <link linkend="data"><code>&lt;data></code></link> elements</member>
  </simplelist>


</section>

    <section id="data">
    <title>data</title>

    <para>Storage for the original data of an inline code.</para>

    <para><emphasis>Contains:</emphasis></para>

    <simplelist type="vert">
        <member>- Non-translatable text</member>

        <member>- Zero, one or more <link linkend="cp"><code>&lt;cp></code></link> elements.</member>
    </simplelist>

    <para>Non-translatable text and <link linkend="cp"><code>&lt;cp></code></link> elements MAY appear in any order.</para>

    <para><emphasis>Attributes:</emphasis></para>

    <simplelist type="vert">
        <member>- <link linkend="id"><code>id</code></link>,
            REQUIRED</member>

        <member>- <link linkend="dir"><code>dir</code></link>, OPTIONAL</member>

        <member>- <link linkend="xml_space"><code>xml:space</code></link>, OPTIONAL, the value is restricted to
                <code>preserve</code> on this element</member>



    </simplelist>

</section>

    <section id="source">
    <title>source</title>
    <para>Portion of text to be translated.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- Text</member>
        <member>- Zero, one or more <link linkend="cp"><code>&lt;cp></code></link> elements</member>
        <member>- Zero, one or more <link linkend="ph"><code>&lt;ph></code></link> elements</member>
        <member>- Zero, one or more <link linkend="pc"><code>&lt;pc></code></link> elements</member>
        <member>- Zero, one or more <link linkend="sc"><code>&lt;sc></code></link> elements</member>
        <member>- Zero, one or more <link linkend="ec"><code>&lt;ec></code></link> elements</member>
        <member>- Zero, one or more <link linkend="mrk"><code>&lt;mrk></code></link> elements</member>
        <member>- Zero, one or more <link linkend="sm"><code>&lt;sm></code></link> elements</member>
        <member>- Zero, one or more <link linkend="em"><code>&lt;em></code></link> elements</member>
    </simplelist>
    <para>Text and inline elements may appear in any order.</para>
    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <link linkend="xml_lang"><code>xml:lang</code></link>, OPTIONAL</member>
        <member>- <link linkend="xml_space"><code>xml:space</code></link>, OPTIONAL</member>
    </simplelist>

    <itemizedlist>

        <title>Constraints</title>
        <listitem>
            <para>When a <link linkend="source"><code>&lt;source></code></link> element is a child
                of <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link>, the explicit or
                inherited value of the OPTIONAL <link linkend="xml_lang"><code>xml:lang</code></link> attribute MUST be equal to
                the value of the <link linkend="srcLang"><code>srcLang</code></link> attribute of the enclosing <link linkend="xliff"><code>&lt;xliff></code></link>
                element.</para>
        </listitem>

    </itemizedlist>
</section>

    <section id="target">
  <title>target</title>
  <para>The translation of the sibling <link linkend="source"><code>&lt;source></code></link> element.</para>
  <para><emphasis>Contains:</emphasis></para>
  <simplelist type="vert">
    <member>- Text</member>
    <member>- Zero, one or more <link linkend="cp"><code>&lt;cp></code></link> elements</member>
    <member>- Zero, one or more <link linkend="ph"><code>&lt;ph></code></link> elements</member>
    <member>- Zero, one or more <link linkend="pc"><code>&lt;pc></code></link> elements</member>
    <member>- Zero, one or more <link linkend="sc"><code>&lt;sc></code></link> elements</member>
    <member>- Zero, one or more <link linkend="ec"><code>&lt;ec></code></link> elements</member>
    <member>- Zero, one or more <link linkend="mrk"><code>&lt;mrk></code></link> elements</member>
    <member>- Zero, one or more <link linkend="sm"><code>&lt;sm></code></link> elements</member>
    <member>- Zero, one or more <link linkend="em"><code>&lt;em></code></link> elements</member>
  </simplelist>
  <para>Text and inline elements may appear in any order.</para>
  <para><emphasis>Attributes:</emphasis></para>
  <simplelist type="vert">
    <member>- <link linkend="xml_lang"><code>xml:lang</code></link>, OPTIONAL</member>
    <member>- <link linkend="xml_space"><code>xml:space</code></link>, OPTIONAL</member>
    <member>- <link linkend="order"><code>order</code></link>, OPTIONAL</member>
  </simplelist>
  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>When a <link linkend="target"><code>&lt;target></code></link> element is a child of
          <link linkend="segment"><code>&lt;segment></code></link> or
          <link linkend="ignorable"><code>&lt;ignorable></code></link>, the explicit or inherited value of the OPTIONAL <link linkend="xml_lang"><code>xml:lang</code></link> MUST be equal to the value of the <link linkend="trgLang"><code>trgLang</code></link>
        attribute of the enclosing <link linkend="xliff"><code>&lt;xliff></code></link> element.</para>
    </listitem>
  </itemizedlist>

</section>

</section>
    <section id="inlineelements">
  <title>Inline Elements</title>

    <para>The XLIFF Core inline elements at the <link linkend="source"><code>&lt;source></code></link> or <link linkend="target"><code>&lt;target></code></link> level are: <link linkend="cp"><code>&lt;cp></code></link>, <link linkend="ph"><code>&lt;ph></code></link>, <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>, <link linkend="mrk"><code>&lt;mrk></code></link>, <link linkend="sm"><code>&lt;sm></code></link> and <link linkend="em"><code>&lt;em></code></link>.</para>

    <para>The elements at the <link linkend="unit"><code>&lt;unit></code></link> level directly related
    to inline elements are: <link linkend="originaldata"><code>&lt;originalData></code></link> and
    <link linkend="data"><code>&lt;data></code></link>.</para>

    <section id="cp">
  <title>cp</title>

  <para>Represents a Unicode character that is invalid in XML.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><link linkend="data"><code>&lt;data></code></link>, <link linkend="mrk"><code>&lt;mrk></code></link>, <link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link> and
        <link linkend="pc"><code>&lt;pc></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="hex"><code>hex</code></link>,
      REQUIRED</member>


  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Ctrl+C=&lt;cp hex="0003"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows a character U+0003 (Control C) as it has to be represented in
    XLIFF.</para>

  <itemizedlist>
    <title>Processing Requirements</title>

    <listitem>
      <para>Writers MUST encode all invalid XML characters of the content using <link linkend="cp"><code>&lt;cp></code></link>.</para>
    </listitem>

    <listitem>
      <para>Writers MUST NOT encode valid XML characters of the content using <link linkend="cp"><code>&lt;cp></code></link>.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="ph">
  <title>ph</title>

  <para>Represents a standalone code of the original format.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link>, <link linkend="pc"><code>&lt;pc></code></link> and <link linkend="mrk"><code>&lt;mrk></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="cancopy"><code>canCopy</code></link>, OPTIONAL</member>

    <member>- <link linkend="cancopy"><code>canDelete</code></link>, OPTIONAL</member>

    <member>- <link linkend="canreorder"><code>canReorder</code></link>, OPTIONAL</member>

    <member>- <link linkend="copyof"><code>copyOf</code></link>, OPTIONAL</member>

    <member>- <link linkend="disp"><code>disp</code></link>, OPTIONAL</member>

    <member>- <link linkend="equiv"><code>equiv</code></link>, OPTIONAL</member>

    <member>- <link linkend="id"><code>id</code></link>,
      REQUIRED.</member>

    <member>- <link linkend="dataref"><code>dataRef</code></link>, OPTIONAL</member>

    <member>- <link linkend="subflows"><code>subFlows</code></link>, OPTIONAL</member>

    <member>- <link linkend="subtype"><code>subType</code></link>, OPTIONAL</member>

    <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>
    <member>- attributes from other namespaces, OPTIONAL</member>


  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">%d&lt;/data>
    &lt;data id="d2">&amp;lt;br/>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Number of entries: &lt;ph id="1" dataRef="d1" />&lt;ph id="2"
        dataRef="d2"/>(These entries are only the ones matching the
        current filter settings)&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The following XLIFF Module attributes are explicitly allowed by the wildcard
          <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>Format Style Module</remark> are
          met.</member>
        <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>, OPTIONAL, provided that the
          Constraints specified in the <remark>Size and Length Restriction Module</remark> are
          met.</member>
        
      </simplelist>
    </listitem>
    <listitem>
      <para>No other attributes MUST be used.</para>
    </listitem>

  </itemizedlist>
  <itemizedlist>
    <title>Processing Requirements</title>
    <listitem>
      <para>Extractors MUST NOT use the <link linkend="ph"><code>&lt;ph></code></link> element to
        represent spanning codes.</para>
      <para><emphasis>Rationale:</emphasis> Using a standalone placeholder code for a spanning code
        does not allow for controlling the span (for instance tag order and data integrity) when
        modifying inline content and is in <emphasis>direct contradiction</emphasis> to the business
        logic described in <link linkend="representingcodes">Representation of the codes</link> and normative statements included in <link linkend="spanningcodeusage">Usage of &lt;pc> and          &lt;sc>/&lt;ec></link>
      </para>
    </listitem>
  </itemizedlist>
  <note>
    <para>It is possible although not advised to use <link linkend="ph">&lt;ph></link> to mask non
      translatable inline content. The preferred way of protecting portions of inline content from
      translation is the Core <link linkend="translateAnnotation">Translate Annotation</link>.
      See also discussion in the <remark>ITS Module section on        representing translatability inline</remark>. </para>
  </note>
</section>

    <section id="pc">
  <title>pc</title>

  <para>Represents a well-formed spanning original code.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- Text</member>

    <member>- Zero, one or more <link linkend="cp"><code>&lt;cp></code></link> elements</member>

    <member>- Zero, one or more <link linkend="ph"><code>&lt;ph></code></link> elements</member>

    <member>- Zero, one or more <link linkend="pc"><code>&lt;pc></code></link> elements</member>

    <member>- Zero, one or more <link linkend="sc"><code>&lt;sc></code></link> elements</member>

    <member>- Zero, one or more <link linkend="ec"><code>&lt;ec></code></link> elements</member>

    <member>- Zero, one or more <link linkend="mrk"><code>&lt;mrk></code></link> elements</member>

    <member>- Zero, one or more <link linkend="sm"><code>&lt;sm></code></link> elements</member>

    <member>- Zero, one or more <link linkend="em"><code>&lt;em></code></link> elements</member>
  </simplelist>

  <para>Text and inline elements may appear in any order.</para>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="source"><code>&lt;source></code></link></member>
    <member>- <link linkend="target"><code>&lt;target></code></link></member>
    <member>- <link linkend="pc"><code>&lt;pc></code></link></member>
    <member>-<link linkend="mrk"><code>&lt;mrk></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="cancopy"><code>canCopy</code></link>, OPTIONAL</member>

    <member>- <link linkend="cancopy"><code>canDelete</code></link>, OPTIONAL</member>

    <member>- <link linkend="canoverlap"><code>canOverlap</code></link>, OPTIONAL</member>

    <member>- <link linkend="canreorder"><code>canReorder</code></link>, OPTIONAL</member>

    <member>- <link linkend="copyof"><code>copyOf</code></link>, OPTIONAL</member>

    <member>- <link linkend="dispend"><code>dispEnd</code></link>, OPTIONAL</member>

    <member>- <link linkend="dispstart"><code>dispStart</code></link>, OPTIONAL</member>

    <member>- <link linkend="equivend"><code>equivEnd</code></link>, OPTIONAL</member>

    <member>- <link linkend="equivstart"><code>equivStart</code></link>, OPTIONAL</member>

    <member>- <link linkend="id"><code>id</code></link>,
      REQUIRED</member>

    <member>- <link linkend="datarefend"><code>dataRefEnd</code></link>, OPTIONAL</member>

    <member>- <link linkend="datarefstart"><code>dataRefStart</code></link>, OPTIONAL</member>

    <member>- <link linkend="subflowsend"><code>subFlowsEnd</code></link>, OPTIONAL</member>

    <member>- <link linkend="subflowsstart"><code>subFlowsStart</code></link>, OPTIONAL</member>

    <member>- <link linkend="subtype"><code>subType</code></link>, OPTIONAL</member>

    <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>

    <member>- <link linkend="dir"><code>dir</code></link>,
      OPTIONAL</member>
    <member>- attributes from other namespaces, OPTIONAL</member>




  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="1">&amp;lt;B&amp;gt;&lt;/data>
    &lt;data id="2">&amp;lt;/B&amp;gt;&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>&lt;pc id="1" dataRefStart="1" dataRefEnd="2">Important&lt;/pc>
      text&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The following XLIFF Module attributes are explicitly allowed by the wildcard
          <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>Format Style Module</remark> are
          met.</member>
        <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>, OPTIONAL, provided that the
          Constraints specified in the <remark>Size and Length Restriction Module</remark> are
          met.</member>
        
      </simplelist>
    </listitem>
    <listitem>
      <para>No other attributes MUST be used.</para>
    </listitem>

  </itemizedlist>

  <itemizedlist>
    <title>Processing Requirements</title>

    <listitem>
      <para>Extractors MUST NOT use the <link linkend="pc"><code>&lt;pc></code></link> element to represent standalone codes.</para>
      <para>Rationale: Using a spanning code for a standalone code can easily result in having text
        inside a span where the original format does not allow it.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="sc">
  <title>sc</title>

  <para>Start of a spanning original code.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link>, <link linkend="pc"><code>&lt;pc></code></link> and <link linkend="mrk"><code>&lt;mrk></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="cancopy"><code>canCopy</code></link>, OPTIONAL</member>

    <member>- <link linkend="cancopy"><code>canDelete</code></link>, OPTIONAL</member>

    <member>- <link linkend="canoverlap"><code>canOverlap</code></link>, OPTIONAL</member>

    <member>- <link linkend="canreorder"><code>canReorder</code></link>, OPTIONAL</member>

    <member>- <link linkend="copyof"><code>copyOf</code></link>, OPTIONAL</member>

    <member>- <link linkend="dataref"><code>dataRef</code></link>, OPTIONAL</member>

    <member>- <link linkend="dir"><code>dir</code></link>,
      OPTIONAL</member>

    <member>- <link linkend="disp"><code>disp</code></link>, OPTIONAL</member>

    <member>- <link linkend="equiv"><code>equiv</code></link>, OPTIONAL</member>

    <member>- <link linkend="id"><code>id</code></link>,
      REQUIRED</member>

    <member>- <link linkend="isolated"><code>isolated</code></link>, OPTIONAL</member>


    <member>- <link linkend="subflows"><code>subFlows</code></link>, OPTIONAL</member>

    <member>- <link linkend="subtype"><code>subType</code></link>, OPTIONAL</member>

    <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>



    <member>- attributes from other namespaces, OPTIONAL</member>




  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>&lt;sc id="1" type="fmt" subType="xlf:b"/>
        First sentence. &lt;/source>
  &lt;/segment>
  &lt;segment>
    &lt;source>Second sentence.&lt;ec startRef="1" type="fmt"
        subType="xlf:b"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>

    <listitem>
      <para>The following XLIFF Module attributes are explicitly allowed by the wildcard
          <code>other</code>:</para>

      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>Format Style Module</remark> are
          met.</member>
        <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>, OPTIONAL, provided that the
          Constraints specified in the <remark>Size and Length Restriction Module</remark> are
          met.</member>
      </simplelist>

    </listitem>
    <listitem>
      <para>No other attributes MUST be used.</para>
    </listitem>

    <listitem>
      <para>The values of the attributes <link linkend="cancopy"><code>canCopy</code></link>, <link linkend="candelete"><code>canDelete</code></link>, <link linkend="canreorder"><code>canReorder</code></link> and <link linkend="canoverlap"><code>canOverlap</code></link> MUST be the same as the values the ones in the <link linkend="ec"><code>&lt;ec></code></link> element
        corresponding to this start code.</para>
    </listitem>

    <listitem>

      <para>If the OPTIONAL attribute <link linkend="isolated"><code>isolated</code></link> is present, its value MUST be set to
          <code>yes</code> when the <link linkend="ec"><code>&lt;ec></code></link> element corresponding to this start marker is not in
        the same <link linkend="unit"><code>&lt;unit></code></link>. When the corresponding <link linkend="ec"><code>&lt;ec></code></link> element is
        present in the same <link linkend="unit"><code>&lt;unit></code></link>, the attribute value MUST be set to
        <code>no</code>.</para>
    </listitem>
  </itemizedlist>
  <itemizedlist>

    <title>Processing Requirements</title>

    <listitem>
      <para>Extractors MUST NOT use the <link linkend="sc"><code>&lt;sc></code></link> / <link linkend="ec"><code>&lt;ec></code></link> pair to represent standalone codes.</para>
      <para>Rationale: Using a spanning code for a standalone code can easily result in having text
        inside a span where the original format does not allow it.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="ec">
  <title>ec</title>

  <para>End of a spanning original code.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link>, <link linkend="pc"><code>&lt;pc></code></link> and <link linkend="mrk"><code>&lt;mrk></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="cancopy"><code>canCopy</code></link>, OPTIONAL</member>

    <member>- <link linkend="cancopy"><code>canDelete</code></link>, OPTIONAL</member>

    <member>- <link linkend="canoverlap"><code>canOverlap</code></link>, OPTIONAL</member>

    <member>- <link linkend="canreorder"><code>canReorder</code></link>, OPTIONAL</member>

    <member>- <link linkend="copyof"><code>copyOf</code></link>, OPTIONAL</member>

    <member>- <link linkend="dataref"><code>dataRef</code></link>, OPTIONAL</member>
    <member>- <link linkend="dir"><code>dir</code></link>, OPTIONAL</member>

    <member>- <link linkend="disp"><code>disp</code></link>, OPTIONAL</member>

    <member>- <link linkend="equiv"><code>equiv</code></link>, OPTIONAL</member>

    <member>- <link linkend="id"><code>id</code></link>,
      OPTIONAL</member>

    <member>- <link linkend="isolated"><code>isolated</code></link>, OPTIONAL</member>


    <member>- <link linkend="startref"><code>startRef</code></link>, OPTIONAL</member>

    <member>- <link linkend="subflows"><code>subFlows</code></link>, OPTIONAL</member>

    <member>- <link linkend="subtype"><code>subType</code></link>, OPTIONAL</member>

    <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>

    <member>- attributes from other namespaces, OPTIONAL</member>


  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\b &lt;/data>
    &lt;data id="d2">\i &lt;/data>
    &lt;data id="d3">\b0 &lt;/data>
    &lt;data id="d4">\i0 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Text in &lt;sc id="1" dataRef="d1"/>bold &lt;sc id="2"
        dataRef="d2"/> and&lt;ec startRef="1" dataRef="d3"/>
         italics&lt;ec startRef="2" dataRef="d4"/>. &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The following XLIFF Module attributes are explicitly allowed by the wildcard
          <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>Format Style Module</remark> are
          met.</member>
        <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>, OPTIONAL, provided that the
          Constraints specified in the <remark>Size and Length Restriction Module</remark> are
          met.</member>
        
      </simplelist>
    </listitem>
    <listitem>
      <para>No other attributes MUST be used.</para>
    </listitem>



    <listitem>
      <para>The values of the attributes <link linkend="cancopy"><code>canCopy</code></link>, <link linkend="candelete"><code>canDelete</code></link> and <link linkend="canoverlap"><code>canOverlap</code></link> MUST be the same as the values the
        ones in the <link linkend="sc"><code>&lt;sc></code></link> element corresponding to this end code.</para>
    </listitem>

    <listitem>
      <para>The value of the attribute <link linkend="canreorder"><code>canReorder</code></link> MUST be <code>no</code> if the
        value of <link linkend="canreorder"><code>canReorder</code></link> is <code>firstNo</code> in the <link linkend="sc"><code>&lt;sc></code></link> element
        corresponding to this end code.</para>
    </listitem>

    <listitem>
      <para>The attribute <link linkend="isolated"><code>isolated</code></link> MUST be set to <code>yes</code> if and only if the <link linkend="sc"><code>&lt;sc></code></link> element
        corresponding to this end code is not in the same <link linkend="unit"><code>&lt;unit></code></link> and set to <code>no</code> otherwise.</para>
    </listitem>

    <listitem id="ecIFF">
      <para>If and only if the attribute <link linkend="isolated"><code>isolated</code></link> is set to <code>yes</code>, the
        attribute <link linkend="id"><code>id</code></link>
        MUST be used instead of the attribute <link linkend="startref"><code>startRef</code></link> that MUST be used otherwise.</para>
    </listitem>
    <listitem>
      <para> If and only if the attribute <link linkend="isolated"><code>isolated</code></link> is set to <code>yes</code>, the attribute <link linkend="dir"><code>dir</code></link> MAY be used,
        otherwise the attribute <link linkend="dir"><code>dir</code></link> MUST NOT be used on the <link linkend="ec"><code>&lt;ec></code></link> element. </para>
    </listitem>
  </itemizedlist>
  <itemizedlist>
    <title>Processing Requirements</title>

    <listitem>
      <para>Extractors MUST NOT use the <link linkend="sc"><code>&lt;sc></code></link> / <link linkend="ec"><code>&lt;ec></code></link> pair to represent standalone codes.</para>
      <para>Rationale: Using a spanning code for a standalone code can easily result in having text
        inside a span where the original format does not allow it.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="mrk">
  <title>mrk</title>

  <para>Represents an annotation pertaining to the marked span.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- Text</member>

    <member>- Zero, one or more <link linkend="cp"><code>&lt;cp></code></link> elements</member>

    <member>- Zero, one or more <link linkend="ph"><code>&lt;ph></code></link> elements</member>

    <member>- Zero, one or more <link linkend="pc"><code>&lt;pc></code></link> elements</member>

    <member>- Zero, one or more <link linkend="sc"><code>&lt;sc></code></link> elements</member>

    <member>- Zero, one or more <link linkend="ec"><code>&lt;ec></code></link> elements</member>

    <member>- Zero, one or more <link linkend="mrk"><code>&lt;mrk></code></link> elements</member>
    <member>- Zero, one or more <link linkend="sm"><code>&lt;sm></code></link> elements</member>
    <member>- Zero, one or more <link linkend="em"><code>&lt;em></code></link> elements</member>
  </simplelist>

  <para>Text and inline elements may appear in any order.</para>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link>, <link linkend="pc"><code>&lt;pc></code></link> and <link linkend="mrk"><code>&lt;mrk></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="id"><code>id</code></link>,
      REQUIRED</member>

    <member>- <link linkend="translate"><code>translate</code></link>, OPTIONAL</member>

    <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>

    <member>- <link linkend="ref"><code>ref</code></link>,
      OPTIONAL</member>

    <member>- <link linkend="value"><code>value</code></link>, OPTIONAL</member>


    <member>- attributes from other namespaces, OPTIONAL</member>

  </simplelist>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The <link linkend="xml_namespace">[XML          namespace]</link> MUST NOT be used at this extension point.</para>
    </listitem>
    <listitem>
      <para>The following XLIFF Module attributes are explicitly allowed by the wildcard
          <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>Format Style Module</remark> are
          met.</member>
        <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>, OPTIONAL, provided that the
          Constraints specified in the <remark>Size and Length Restriction Module</remark> are
          met.</member>
        <member>- attributes from the namespace <code>http://www.w3.org/2005/11/its</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>ITS Module</remark> are
          met.</member>
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:itsm:2.1</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>ITS            Module</remark> are met.</member>
      </simplelist>
    </listitem>


  </itemizedlist>

  <para>See the <link linkend="annotations">Annotations      section</link> for more details and examples on how to use the <link linkend="mrk"><code>&lt;mrk></code></link> element.</para>
</section>
    <section id="sm">
  <title>sm</title>

  <para>Start marker of an annotation where the spanning marker cannot be used for well-formedness
    reasons.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link>, <link linkend="pc"><code>&lt;pc></code></link> and <link linkend="mrk"><code>&lt;mrk></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="id"><code>id</code></link>,
      REQUIRED</member>

    <member>- <link linkend="translate"><code>translate</code></link>, OPTIONAL</member>

    <member>- <link linkend="type"><code>type</code></link>, OPTIONAL</member>

    <member>- <link linkend="ref"><code>ref</code></link>,
      OPTIONAL</member>

    <member>- <link linkend="value"><code>value</code></link>, OPTIONAL</member>


    <member>- attributes from other namespaces, OPTIONAL</member>

  </simplelist>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The <link linkend="xml_namespace">[XML          namespace]</link> MUST NOT be used at this extension point.</para>
    </listitem>
    <listitem>
      <para>The following XLIFF Module attributes are explicitly allowed by the wildcard
          <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>Format Style Module</remark> are
          met.</member>
        <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>, OPTIONAL, provided that the
          Constraints specified in the <remark>Size and Length Restriction Module</remark> are
          met.</member>
        <member>- attributes from the namespace <code>http://www.w3.org/2005/11/its</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>ITS Module</remark> are
          met.</member>
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:itsm:2.1</code>,
          OPTIONAL, provided that the Constraints specified in the <remark>ITS            Module</remark> are met.</member>
      </simplelist>
    </listitem>


  </itemizedlist>

  <para>See the <link linkend="annotations">Annotations      section</link> for more details and examples on how to use the <link linkend="sm"><code>&lt;sm></code></link> element.</para>
</section>
    <section id="em">
  <title>em</title>

  <para>End marker of an annotation where the spanning marker cannot be used for well-formedness
    reasons.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link>, <link linkend="pc"><code>&lt;pc></code></link> and <link linkend="mrk"><code>&lt;mrk></code></link></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <link linkend="startref"><code>startRef</code></link>, REQUIRED</member>
  </simplelist>

  <para>See the <link linkend="annotations">Annotations      section</link> for more details and examples on how to use the <link linkend="em"><code>&lt;em></code></link> element.</para>
</section>
 </section>
</section>
    <section>
  <title>Attributes</title>

  <para>This section lists all the various attributes used in XLIFF core elements.</para>

  <section>
    <title>XLIFF Attributes</title>

    <para>The attributes defined in XLIFF 2.2 are: 
      <link linkend="appliesto"><code>appliesTo</code></link>,
      
      <link linkend="cancopy"><code>canCopy</code></link>,
      <link linkend="candelete"><code>canDelete</code></link>,
      <link linkend="canoverlap"><code>canOverlap</code></link>,
      <link linkend="canreorder"><code>canReorder</code></link>,
      <link linkend="canResegment"><code>canResegment</code></link>,
      <link linkend="category"><code>category</code></link>,
      <link linkend="copyof"><code>copyOf</code></link>,

      <link linkend="dataref"><code>dataRef</code></link>,
      <link linkend="datarefend"><code>dataRefEnd</code></link>,
      <link linkend="datarefstart"><code>dataRefStart</code></link>,
      <link linkend="dir"><code>dir</code></link>,
      <link linkend="disp"><code>disp</code></link>,
      <link linkend="dispend"><code>dispEnd</code></link>,
      <link linkend="dispstart"><code>dispStart</code></link>,
      <link linkend="equiv"><code>equiv</code></link>,
      <link linkend="equivend"><code>equivEnd</code></link>,
      <link linkend="equivstart"><code>equivStart</code></link>,
      <link linkend="hex"><code>hex</code></link>,
      <link linkend="href"><code>href</code></link>,
      <link linkend="id"><code>id</code></link>,
      <link linkend="isolated"><code>isolated</code></link>,
      <link linkend="name"><code>name</code></link>,
      <link linkend="order"><code>order</code></link>,
      <link linkend="original"><code>original</code></link>,
      <link linkend="priority"><code>priority</code></link>,
      <link linkend="ref"><code>ref</code></link>,


      <link linkend="srcdir"><code>srcDir</code></link>,
      <link linkend="srcLang"><code>srcLang</code></link>,

      <link linkend="startref"><code>startRef</code></link>,

      <link linkend="state"><code>state</code></link>,

      <link linkend="subflows"><code>subFlows</code></link>,
      <link linkend="subflowsend"><code>subFlowsEnd</code></link>,
      <link linkend="subflowsstart"><code>subFlowsStart</code></link>,

      <link linkend="substate"><code>subState</code></link>,

      <link linkend="subtype"><code>subType</code></link>,


      <link linkend="trgLang"><code>trgLang</code></link>,
      <link linkend="translate"><code>translate</code></link>,
      <link linkend="trgdir"><code>trgDir</code></link>,
      <link linkend="type"><code>type</code></link>,
      <link linkend="value"><code>value</code></link>
      and <link linkend="version"><code>version</code></link>.</para>

    

    <section id="appliesto">
    <title>appliesTo</title>
    
    <para>Comment target - indicates the element to what the content of the note applies.</para>
    
    <para><emphasis>Value description:</emphasis> <code>source</code> or <code>target</code>.</para>
    
    <para><emphasis>Default value:</emphasis> undefined.</para>
    
    <para><emphasis>Used in:</emphasis> <link linkend="note"><code>&lt;note></code></link>.</para>
    
</section>

    <section id="cancopy">
    <title>canCopy</title>
    
    <para>Replication editing hint - indicates whether or not the inline code can be copied.</para>
    
    <para><emphasis>Value description:</emphasis>
        <code>yes</code> if the code can be copied, <code>no</code> if the code is not intended to
        be copied.</para>
    
    <para><emphasis>Default value:</emphasis> <code>yes</code>.</para>
    
    <para><emphasis>Used in:</emphasis>
     <link linkend="pc"><code>&lt;pc></code></link>,
     <link linkend="sc"><code>&lt;sc></code></link>,
     <link linkend="ec"><code>&lt;ec></code></link>,
     <link linkend="ph"><code>&lt;ph></code></link>.</para>
    
</section>

    <section id="candelete">
    <title>canDelete</title>
    
    <para>Deletion editing hint - indicates whether or not the inline code can be deleted.</para>
    
    <para><emphasis>Value description:</emphasis>
        <code>yes</code> if the code can be deleted, <code>no</code> if the code is not allowed to
        be deleted.</para>
    
    <para><emphasis>Default value:</emphasis> <code>yes</code>.</para>
    
    <para><emphasis>Used in:</emphasis>
     <link linkend="pc"><code>&lt;pc></code></link>,
     <link linkend="sc"><code>&lt;sc></code></link>,
     <link linkend="ec"><code>&lt;ec></code></link>,
     <link linkend="ph"><code>&lt;ph></code></link>.</para>
    
</section>

    <section id="canoverlap">
  <title>canOverlap</title>

  <para>Code can overlap - indicates whether or not the spanning code where this attribute is used
    can enclose partial spanning codes (i.e. a start code without its corresponding end code, or an
    end code without its corresponding start code).</para>

  <para><emphasis>Value description:</emphasis> <code>yes</code> or
  <code>no</code>.</para>

  <para><emphasis>Default value:</emphasis> default values for this
  attribute depend on the element in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in <link linkend="pc"><code>&lt;pc></code></link>: <code>no</code>.</para>
    </listitem>

    <listitem>
      <para>When used in <link linkend="sc"><code>&lt;sc></code></link> or <link linkend="ec"><code>&lt;ec></code></link>: <code>yes</code>.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link> and <link linkend="ec"><code>&lt;ec></code></link></para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="1">\i1 &lt;/data>
    &lt;data id="2">\i0 &lt;/data>
    &lt;data id="3">{\b &lt;/data>
    &lt;data id="4">}&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>&lt;pc id="1" dataRefStart="3" dataRefEnd="4" canOverlap="no">
        Bold, &lt;sc id="2" dataRef="1" canOverlap="yes"/>both&lt;/pc>,
         italics&lt;ec startRef="2" dataRef="2"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>
</section>

    <section id="canreorder">
  <title>canReorder</title>

  <para>Re-ordering editing hint - indicates whether or not the inline code can be re-ordered. See
      <link linkend="editinghints">Editing Hints section</link>
    for more details.</para>

  <para><emphasis>Value description:</emphasis>
    <code>yes</code> in case the code can be re-ordered, <code>firstNo</code> when the code is the
    first element of a sequence that cannot be re-ordered, <code>no</code> when it is another
    element of such a sequence.</para>

  <para><emphasis>Default value:</emphasis> <code>yes</code>.</para>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>, <link linkend="ph"><code>&lt;ph></code></link>.</para>
  
  <para>For the normative Usage Description see Constraints and Processing Requirements in the <link linkend="editinghints">Editing Hints</link> section.</para>
</section>

    <section id="canResegment">
    <title>canResegment</title>
    
    <para>Can resegment - indicates whether or not the source text in the scope of the given
            <code>canResegment</code> flag can be reorganized into a different structure of <link linkend="segment"><code>&lt;segment></code></link> elements within the same parent <link linkend="unit"><code>&lt;unit></code></link>.</para>
    
    <para><emphasis>Value description:</emphasis> <code>yes</code> or <code>no</code>.</para>
        
    <para><emphasis>Default value:</emphasis> default values for this attribute
        depend on the element in which it is used:</para>
    
    <itemizedlist>
        <listitem>
            <para>When used in <link linkend="file"><code>&lt;file></code></link>:</para>
            
            <para>The value <code>yes</code>.</para>
        </listitem>
        <listitem>
            <para>When used in any other element:</para>
            <para>The value of the <link linkend="canResegment"><code>canResegment</code></link> attribute of its parent element.
            </para>   
                
        </listitem>
        
        
        
    </itemizedlist>
    
    
    <para><emphasis>Used in:</emphasis>
        <link linkend="file"><code>&lt;file></code></link>
        <link linkend="group"><code>&lt;group></code></link>
        <link linkend="unit"><code>&lt;unit></code></link>, and
        <link linkend="segment"><code>&lt;segment></code></link>.    
    </para>
    
</section>

    <section id="category">
    <title>category</title>
    
    <para>Category - provides a way to categorize notes.</para>
    
    <para><emphasis>Value description:</emphasis> Text.</para>
    
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <link linkend="note"><code>&lt;note></code></link>.</para>
    
</section>

    <section id="copyof">
  <title>copyOf</title>

  <para>Reference to base code - holds the <link linkend="id"><code>id</code></link> of the base code of a copied code.</para>

  <para><emphasis>Value description:</emphasis> NMTOKEN. The <link linkend="id"><code>id</code></link> value of the base
  code of which this code is a copy.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="ph"><code>&lt;ph></code></link>, <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Äter &lt;pc id="1">katter möss&lt;/pc>?&lt;/source>
    &lt;target>Do &lt;pc id="1">cats&lt;/pc> eat &lt;pc id="2" copyOf="1">
        mice&lt;/pc>? &lt;/target>
  &lt;/segment>
&lt;/unit>
 </programlisting>
</section>


    <section id="dataref">
  <title>dataRef</title>

  <para>Original data reference - holds the identifier of the <link linkend="data"><code>&lt;data></code></link>
    element that contains the original data for a given inline code.</para>

  <para><emphasis>Value description:</emphasis> An <link linkend="XMLSchema2">[XML Schema Datatypes]</link> NMTOKEN that MUST be the value of the
      <link linkend="id"><code>id</code></link> attribute of one of the
      <link linkend="data"><code>&lt;data></code></link> element listed in the same <link linkend="unit"><code>&lt;unit></code></link>
    element.</para>

  <para><emphasis>Default value:</emphasis> undefined.</para>

  <para><emphasis>Used in:</emphasis>
    <link linkend="ph"><code>&lt;ph></code></link>,
      <link linkend="sc"><code>&lt;sc></code></link>,
      <link linkend="ec"><code>&lt;ec></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">{0}&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Error in '&lt;ph id="1" dataRef="d1"/>'.&lt;/source>
    &lt;target>Erreur dans '&lt;ph id="1" dataRef="d1"/>'.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows a <link linkend="ph"><code>&lt;ph></code></link> element that has its original data stored outside the
    content, in a <link linkend="data"><code>&lt;data></code></link> element.</para>

</section>

    <section id="datarefend">
  <title>dataRefEnd</title>

  <para>Original data reference - holds the identifier of the <link linkend="data"><code>&lt;data></code></link>
    element that contains the original data for the end marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> An <link linkend="XMLSchema2">[XML Schema Datatypes]</link> NMTOKEN that MUST be the value of the
      <link linkend="id"><code>id</code></link> attribute of one of the
      <link linkend="data"><code>&lt;data></code></link> element listed in the same <link linkend="unit"><code>&lt;unit></code></link>
    element.</para>

  <para><emphasis>Default value:</emphasis> undefined.</para>

  <para><emphasis>Used in:</emphasis>
    <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;EM>&lt;/data>
    &lt;data id="d2">&amp;lt;/EM>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficiency&lt;/pc> is the operative word here.&lt;/source>
    &lt;target>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficacité&lt;/pc> est le mot clé ici.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows two <link linkend="pc"><code>&lt;pc></code></link> elements with their original data stored outside the
    content, in two <link linkend="data"><code>&lt;data></code></link> elements.</para>
</section>

    <section id="datarefstart">
  <title>dataRefStart</title>

  <para>Original data reference - holds the identifier of the <link linkend="data"><code>&lt;data></code></link>
    element that contains the original data for the start marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> An <link linkend="XMLSchema2">[XML Schema Datatypes]</link> NMTOKEN that MUST be the value of the
      <link linkend="id"><code>id</code></link> attribute of one of the
      <link linkend="data"><code>&lt;data></code></link> element listed in the same <link linkend="unit"><code>&lt;unit></code></link>
    element.</para>

  <para><emphasis>Default value:</emphasis> undefined.</para>

  <para><emphasis>Used in:</emphasis>
    <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;EM>&lt;/data>
    &lt;data id="d2">&amp;lt;/EM>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficiency&lt;/pc> is the operative word here.&lt;/source>
    &lt;target>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficacité&lt;/pc> est le mot clé ici.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows two <link linkend="pc"><code>&lt;pc></code></link> elements with their original data stored outside the
    content, in two <link linkend="data"><code>&lt;data></code></link> elements.</para>
</section>


    <section id="dir">
  <title>dir</title>

  <para>Directionality - indicates the directionality of content.</para>

  <para><emphasis>Value description:</emphasis>
    <code>ltr</code> (Left-To-Right), <code>rtl</code> (Right-To-Left), or <code>auto</code>
    (determined heuristically, based on the first strong directional character in scope, see <link linkend="uax9">[UAX #9]</link>).</para>

  <para><emphasis>Default value:</emphasis> default values for this attribute
  depend on the element in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, or <link linkend="ec"><code>&lt;ec></code></link>
        element that has a <link linkend="source"><code>&lt;source></code></link> element as its parent:</para>

      <para>The value of the <link linkend="srcdir"><code>srcDir</code></link> attribute of the <link linkend="unit"><code>&lt;unit></code></link> element, in which the elements are located.</para>
    </listitem>

    <listitem>
      <para>When used in a <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, or <link linkend="ec"><code>&lt;ec></code></link>
        element that has a <link linkend="target"><code>&lt;target></code></link> element as its parent: </para>

      <para>The value of the <link linkend="trgdir"><code>trgDir</code></link> attribute of the <link linkend="unit"><code>&lt;unit></code></link> element, in which the elements are located.</para>
    </listitem>

    <listitem>
      <para>When used in a <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, or <link linkend="ec"><code>&lt;ec></code></link>
        element that has a <link linkend="pc"><code>&lt;pc></code></link> element as its parent:</para>

      <para>The value of the <link linkend="dir"><code>dir</code></link>
        attribute of the parent <link linkend="pc"><code>&lt;pc></code></link> element.</para>
    </listitem>

    <listitem>
      <para>When used in <link linkend="data"><code>&lt;data></code></link>:</para>

      <para>The value <code>auto</code>.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis> 
     <link linkend="data"><code>&lt;data></code></link>, <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, and <link linkend="ec"><code>&lt;ec></code></link>.</para>
</section>

    <section id="disp">
  <title>disp</title>

  <para>Display text - holds an alternative user-friendly display representation of the original
    data of the inline code.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="ph"><code>&lt;ph></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">{1}&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Welcome back &lt;ph id="1" disp="[UserName]" dataRef="d1"/>!
        &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <note>
    <para>To provide a plain text equivalent of the code, use the <link linkend="equiv"><code>equiv</code></link>
    attribute.</para>
  </note>
</section>

    <section id="dispend">
  <title>dispEnd</title>

  <para>Display text - holds an alternative user-friendly display representation of the original
    data of the end marker of an inline code.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\cf1\ul\b\f1\fs24 &lt;/data>
    &lt;data id="d2">\cf0\ulnone\b0\f0\fs22 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Example of &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2"
        dispStart="&amp;lt;span>" dispEnd="&amp;lt;/span>">
        formatted text&lt;/pc>.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>In the example above, the <link linkend="dispstart"><code>dispStart</code></link> and <link linkend="dispend"><code>dispEnd</code></link>
  attributes provide a more user-friendly representation of the original
  formatting codes.</para>

  <note>
    <para>To provide a plain text equivalent of the code, use the <link linkend="equivend"><code>equivEnd</code></link> attribute.</para>
  </note>
</section>

    <section id="dispstart">
  <title>dispStart</title>

  <para>Display text - holds an alternative user-friendly display representation of the original
    data of the start marker of an inline code.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\cf1\ul\b\f1\fs24 &lt;/data>
    &lt;data id="d2">\cf0\ulnone\b0\f0\fs22 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Example of &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2"
        dispStart="&amp;lt;span>" dispEnd="&amp;lt;/span>">
        formatted text&lt;/pc>.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>In the example above, the <link linkend="dispstart"><code>dispStart</code></link> and <link linkend="dispend"><code>dispEnd</code></link>
  attributes provide a more user-friendly representation of the original
  formatting codes.</para>

  <note>
    <para>To provide a plain text equivalent of the code, use the <link linkend="equivstart"><code>equivStart</code></link> attribute.</para>
  </note>
</section>

    <section id="equiv">
  <title>equiv</title>

  <para>Equivalent text - holds a plain text representation of the original data of the inline code
    that can be used when generating a plain text representation of the content.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> an empty string.</para>

  <para><emphasis>Used in:</emphasis> <link linkend="ph"><code>&lt;ph></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;amp;&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Open &lt;ph id="1" equiv="" dataRef="d1"/>File&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>In this example the <link linkend="equiv"><code>equiv</code></link> attribute of the <link linkend="ph"><code>&lt;ph></code></link> element is used to indicate
  that the original data of the code can be ignored in the text representation
  of the string. This could, for instance, help a spell-checker tool to
  process the content as "Open File".</para>

  <note>
    <para>To provide a user-friendly representation, use the <link linkend="disp"><code>disp</code></link>
    attribute.</para>
  </note>
</section>

    <section id="equivend">
  <title>equivEnd</title>

  <para>Equivalent text - holds a plain text representation of the original data of the end marker
    of an inline code that can be used when generating a plain text representation of the
    content.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> an empty string</para>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;span class="link" onclick="linkTo('dbId5345')">
        &lt;/data>
    &lt;data id="d2">&amp;lt;/span>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>The jam made of &lt;pc id="1" dataRefStart="d1" equivStart=""
        dataRefEnd="d2" equivEnd="">lingonberries&lt;/pc> is quite
        tasty.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <note>
    <para>To provide a user-friendly representation, use the <link linkend="dispend"><code>dispEnd</code></link>
    attribute.</para>
  </note>
</section>

    <section id="equivstart">
  <title>equivStart</title>

  <para>Equivalent text - holds a plain text representation of the original data of the start marker
    of an inline code that can be used when generating a plain text representation of the
    content.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> an empty string</para>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;span class="link" onclick="linkTo('dbId5345')">
        &lt;/data>
    &lt;data id="d2">&amp;lt;/span>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>The jam made of &lt;pc id="1" dataRefStart="d1" equivStart=""
        dataRefEnd="d2" equivEnd="">lingonberries&lt;/pc> is quite
        tasty.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <note>
    <para>To provide a user-friendly representation, use the <link linkend="dispstart"><code>dispStart</code></link> attribute.</para>
  </note>
</section>

    <section id="hex">
  <title>hex</title>

  <para>Hexadecimal code point - holds the value of a Unicode code point that is invalid in
    XML.</para>

  <para><emphasis>Value description:</emphasis> A canonical representation of
    the hexBinary <link linkend="XMLSchema2">[XML Schema Datatypes]</link> data type: Two hexadecimal digits to represent each octet
  of the Unicode code point. The allowed values are any of the values
  representing code points invalid in XML, between hexadecimal 0000 and 10FFFF
  (both included).</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="cp"><code>&lt;cp></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;cp hex="001A"/>&lt;cp hex="0003"/></programlisting>

  <para>The example above shows a character U+001A and a character U+0003 as they have to be
    represented in XLIFF.</para>
</section>

    <section id="href">
    <title>href</title>
    
    <para>Hyperlink reference - a pointer to the location of an external skeleton file pertaining to
        the enclosing <link linkend="file"><code>&lt;file></code></link> element.</para>
    
    <para><emphasis>Value description:</emphasis> IRI.</para>
        
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <link linkend="skeleton"><code>&lt;skeleton></code></link>.</para>
    
</section>

    <section id="id">
  <title>id</title>

  <para>Identifier - a character string used to identify an element.</para>

  <para><emphasis>Value description:</emphasis> NMTOKEN. The scope of the values for this attribute
    depends on the element, in which it is used.</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <link linkend="file"><code>&lt;file></code></link> element:</para>
      <para>The value MUST be unique among all <link linkend="file"><code>&lt;file></code></link>
        <code>id</code> attribute values within the enclosing <link linkend="xliff"><code>&lt;xliff></code></link> element.</para>
    </listitem>

    <listitem>
      <para>When used in <link linkend="group"><code>&lt;group></code></link> elements:</para>
      <para>The value MUST be unique among all <link linkend="group"><code>&lt;group></code></link>
        <code>id</code> attribute values within the enclosing <link linkend="file"><code>&lt;file></code></link> element.</para>
    </listitem>

    <listitem>
      <para>When used in <link linkend="unit"><code>&lt;unit></code></link> elements:</para>
      <para>The value MUST be unique among all <link linkend="unit"><code>&lt;unit></code></link>
        <code>id</code> attribute values within the enclosing <link linkend="file"><code>&lt;file></code></link> element.</para>
    </listitem>

    <listitem>
      <para>When used in <link linkend="note"><code>&lt;note></code></link> elements:</para>
      <para>The value MUST be unique among all <link linkend="note"><code>&lt;note></code></link>
        <code>id</code> attribute values within the immediate enclosing <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link>, or <link linkend="unit"><code>&lt;unit></code></link> element.</para>
    </listitem>

    <listitem>
      <para>When used in <link linkend="data"><code>&lt;data></code></link> elements:</para>
      <para>The value MUST be unique among all <link linkend="data"><code>&lt;data></code></link>
        <code>id</code> attribute values within the enclosing <link linkend="unit"><code>&lt;unit></code></link> element.</para>
    </listitem>

    <listitem>
      <para>When used in <link linkend="segment"><code>&lt;segment></code></link>, <link linkend="ignorable"><code>&lt;ignorable></code></link>, <link linkend="mrk"><code>&lt;mrk></code></link>, <link linkend="sm"><code>&lt;sm></code></link>,
          <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>, or
          <link linkend="ph"><code>&lt;ph></code></link> elements:</para>
      <itemizedlist>
        <listitem>
          <para>The inline elements enclosed by a <link linkend="target"><code>&lt;target></code></link> element MUST use the duplicate <code>id</code>
            values of their corresponding inline elements enclosed within the sibling <link linkend="source"><code>&lt;source></code></link> element if and only if those corresponding
            elements exist.</para>
        </listitem>
        <listitem>
          <para>Except for the above exception, the value MUST be unique among all of the above
            within the enclosing <link linkend="unit"><code>&lt;unit></code></link> element.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <note>
    <para>All of the above defined uniqueness scopes ignore Module and Extension data. It would be
      impossible to impose those uniqueness requirements onto Module or Extension data. As Core only
      Modifiers could inadvertently cause conflicts with Modules or Extensions based data they
      cannot access. Modules and Extensions reusing Core need to specify their own uniqueness scopes
      for the <link linkend="id">xlf:id</link>. In general, Modules and Extensions are advised to
      mimic the Core uniqueness requirement within their specific wrapper
      elements enclosing the reused Core elements or attributes, yet Module
      or Extensions are free to set wider uniqueness scopes if it makes
      business sense.</para>
  </note>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis>
    <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link>, <link linkend="unit"><code>&lt;unit></code></link>, <link linkend="note"><code>&lt;note></code></link>, <link linkend="segment"><code>&lt;segment></code></link>, <link linkend="ignorable"><code>&lt;ignorable></code></link>, <link linkend="data"><code>&lt;data></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>, <link linkend="ph"><code>&lt;ph></code></link>, <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="mrk"><code>&lt;mrk></code></link> and
      <link linkend="sm"><code>&lt;sm></code></link>.</para>
</section>

    <section id="isolated">
  <title>isolated</title>

  <para>Orphan code flag - indicates if the start or end marker of a spanning inline code is not in
    the same <link linkend="unit"><code>&lt;unit></code></link> as its corresponding end or start code.</para>

  <para><emphasis>Value description:</emphasis>
    <code>yes</code> if this start or end code is not in the same <link linkend="unit"><code>&lt;unit></code></link>
    as its corresponding end or start code, <code>no</code> if both codes are in the same <link linkend="unit"><code>&lt;unit></code></link>.</para>

  <para><emphasis>Default value:</emphasis> <code>no</code>.</para>

  <para><emphasis>Used in:</emphasis> <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">

&lt;file id="f2" xmlns:abc="urn:abc">
  &lt;unit id="1">
    &lt;mtc:matches>
      &lt;mtc:match id="tc01" ref="seg2">
        &lt;source>&lt;sc id="1" isolated="yes"/>Warning:&lt;/source>
        &lt;target>&lt;sc id="1" isolated="yes"/>Attention :&lt;/target>
      &lt;/mtc:match>
    &lt;/mtc:matches>
    &lt;segment id="seg2">
      &lt;source>&lt;pc id="1">Warning: File not found.&lt;/pc>&lt;/source>
    &lt;/segment>
  &lt;/unit>
&lt;/file>
</programlisting>

  <para>In the example above the <link linkend="sc"><code>&lt;sc></code></link> elements have their <link linkend="isolated"><code>isolated</code></link>
  attribute set to <code>yes</code> because they do not have their
  corresponding <link linkend="ec"><code>&lt;ec></code></link> elements.</para>
</section>

    <section id="name">
    <title>name</title>

    <para>Resource name - the original identifier of the resource corresponding to the
            extracted
        <link linkend="unit"><code>&lt;unit></code></link> or <link linkend="unit"><code>&lt;group></code></link>.</para>
    <para>For example: the key in the key/value
        pair in a Java properties file, the ID of a string in a Windows string table, the index
        value of an entry in a database table, etc.</para>

    <para><emphasis>Value description:</emphasis> Text.</para>

    <para><emphasis>Default value:</emphasis> undefined.</para>

    <para><emphasis>Used in:</emphasis> <link linkend="unit"><code>&lt;unit></code></link> and <link linkend="unit"><code>&lt;group></code></link>.</para>

</section>


    <section id="order">
    <title>order</title>

    <para>target order - indicates the order, in which to compose the target content parts.</para>

    <para><emphasis>Value description:</emphasis> A positive integer.</para>

    <para><emphasis>Default value:</emphasis> implicit, see below</para>
    <para>When order is not explicitly set, the <link linkend="target"><code>&lt;target></code></link>
        <link linkend="order"><code>order</code></link> corresponds to its sibling <link linkend="source"><code>&lt;source></code></link>, i.e. it is not being moved anywhere when
        composing target content of the enclosing <link linkend="unit"><code>&lt;unit></code></link> and the implicit <link linkend="order"><code>order</code></link> value is of that position within the <link linkend="unit"><code>&lt;unit></code></link>. </para>

    <para><emphasis>Used in:</emphasis>
        <link linkend="target"><code>&lt;target></code></link>.</para>
    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>The value of the <link linkend="order"><code>order</code></link> attribute MUST be
                unique within the enclosing <link linkend="unit"><code>&lt;unit></code></link> element.</para>
        </listitem>
        <listitem>
            <para>The value of each of the <link linkend="order"><code>order</code></link>
                attributes used within a <link linkend="unit"><code>&lt;unit></code></link> element MUST NOT be higher than
                N, where N is the number of all current <link linkend="segment"><code>&lt;segment></code></link> and <link linkend="ignorable"><code>&lt;ignorable></code></link> children of the said <link linkend="unit"><code>&lt;unit></code></link> element.</para>
        </listitem>
    </itemizedlist>
    <para>See the <link linkend="segorder">Segments            Order</link> section for the normative usage description.</para>
</section>

    <section id="original">
    <title>original</title>
    
    <para>Original file - a pointer to the location of the original document from which the content
        of the enclosing <link linkend="file"><code>&lt;file></code></link> element is extracted.</para>
    
    <para><emphasis>Value description:</emphasis> IRI.</para>
        
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <link linkend="file"><code>&lt;file></code></link>.</para>
    
</section>

    <section id="priority">
    <title>priority</title>

    <para>Priority - provides a way to prioritize notes.</para>

    <para><emphasis>Value description:</emphasis> Integer 1-10.</para>

    <para><emphasis>Default value:</emphasis> <code>1</code></para>

    <para><emphasis>Used in:</emphasis> <link linkend="note"><code>&lt;note></code></link>.</para>

    <note><para>Note that 1 is the highest priority that can be interpreted as an alert, e.g. an <link linkend="ITS20">[ITS]</link>
            <ulink url="http://www.w3.org/TR/its20/#locNote-datacat">Localization Note</ulink> of
            the type alert. The best practice is to use only one alert per an annotated element, and
            the full scale of 2-10 can be used for prioritizing notes of lesser importance than the
            alert.</para></note>
</section>

    <section id="ref">
  <title>ref</title>

  <para>Reference - holds a reference for the associated element.</para>

  <para><emphasis>Value description:</emphasis> A value of the <link linkend="XMLSchema2">[XML Schema Datatypes]</link> type anyURI. The semantics of the value
    depends on where the attribute is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <link linkend="note">&lt;note></link> element, the URI value is referring to a <link linkend="segment"><code>&lt;segment></code></link>, <link linkend="source"><code>&lt;source></code></link> or <link linkend="target"><code>&lt;target></code></link> element within the same enclosing <link linkend="unit"><code>&lt;unit></code></link>.</para>
      <para>When used in a <link linkend="termAnnotation">term          annotation</link>, the URI value is referring to a resource providing information about
        the term.</para>
    </listitem>

    <listitem>
      <para>When used in a <remark>translation candidates annotation</remark>, the URI value is referring to an external
        resource providing information about the translation candidate.</para>
    </listitem>

    <listitem>
      <para>When used in a <link linkend="commentAnnotation">comment annotation</link>, the value is referring to a <link linkend="note"><code>&lt;note></code></link> element within the same enclosing <link linkend="unit"><code>&lt;unit></code></link>.</para>
    </listitem>

    <listitem>
      <para>When used in a <link linkend="customAnnotation">custom annotation</link>, the value is defined by each custom annotation.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis>
    <link linkend="note"><code>&lt;note></code></link>, <link linkend="mrk"><code>&lt;mrk></code></link> and <link linkend="sm"><code>&lt;sm></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>The &lt;pc id="1">ref&lt;/pc> attribute of a term
        annotation holds a &lt;mrk id="m1" type="term"
        ref="http://dbpedia.org/page/Uniform_Resource_Identifier">
        URI&lt;/mrk> pointing to more information about the given
        term.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>


</section>



    

    <section id="srcdir">
  <title>srcDir</title>

  <para>Source directionality - indicates the directionality of the source content.</para>

  <para><emphasis>Value description:</emphasis>
    <code>ltr</code> (Left-To-Right), <code>rtl</code> (Right-To-Left), , or <code>auto</code>
    (determined heuristically, based on the first strong directional character in scope, see <link linkend="uax9">[UAX #9]</link>).</para>

  <para><emphasis>Default value:</emphasis> default values for this attribute depend on the element
    in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in <link linkend="file"><code>&lt;file></code></link>:</para>

      <para>The value <code>auto</code>.</para>
    </listitem>

    <listitem>
      <para>When used in any other element:</para>

      <para>The value of the <link linkend="srcdir"><code>srcDir</code></link> attribute of its parent element.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis>
    <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link>, and <link linkend="unit"><code>&lt;unit></code></link>. </para>
</section>

    <section id="srcLang">
    <title>srcLang</title>

    <para>Source language - the code of the language, in which the text to be translated is
        expressed.</para>

    <para><emphasis>Value description:</emphasis> A language code as described in <link linkend="bcp47">[BCP 47]</link>.</para>

    <para><emphasis>Default value:</emphasis> undefined</para>

    <para><emphasis>Used in:</emphasis>
        <link linkend="xliff"><code>&lt;xliff></code></link>.</para>
</section>

    <section id="startref">
  <title>startRef</title>

  <para>Start code or marker reference - The <link linkend="id"><code>id</code></link> of the <link linkend="sc"><code>&lt;sc></code></link> element or the <link linkend="sm"><code>&lt;sm></code></link> element a given <link linkend="ec"><code>&lt;ec></code></link> element
    or <link linkend="em"><code>&lt;em></code></link>
    element corresponds.</para>

  <para><emphasis>Value description:</emphasis> NMTOKEN.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="ec"><code>&lt;ec></code></link>, <link linkend="em"><code>&lt;em></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>&lt;sc id="1"/>Bold, &lt;sc id="2"/>both
        &lt;ec startRef="1"/>, italics&lt;ec startRef="2"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>
</section>
    <section id="state">
    <title>state</title>

    <para>State - indicates the state of the translation of a segment.</para>

    <para><emphasis>Value description:</emphasis> The value MUST be set to one of the following
        values:</para>

    <simplelist type="vert">
        <member><code>initial</code> - indicates the segment is in its initial state.</member>
        <member><code>translated</code> - indicates the segment has been translated.</member>
        <member><code>reviewed</code> - indicates the segment has been reviewed.</member>
        <member><code>final</code> - indicates the segment is finalized and ready to be
            used.</member>
    </simplelist>
    <para>The 4 defined states constitute a simple linear state machine that advances in the above
        given order. No particular workflow or process is prescribed, except that the three states
        more advanced than the default <code>initial</code> assume the existence of a translation
        within the segment. One can further specify the state of the translation using the <link linkend="substate"><code>subState</code></link>
        attribute.</para>

    <para><emphasis>Default value:</emphasis>
        <code>initial</code></para>

    <para><emphasis>Used in:</emphasis>
        <link linkend="segment"><code>&lt;segment></code></link></para>

    <itemizedlist>
        <title>Processing Requirements</title>
        <listitem>
            <para>When the optional <link linkend="state"><code>state</code></link> attribute is
                added to a <link linkend="segment"><code>&lt;segment></code></link> element, its value MUST be set to
                    <code>initial</code> if the element doesn't have a <link linkend="target"><code>&lt;target></code></link> child. All valid values MAY be used when a
                    <link linkend="target"><code>&lt;target></code></link> child is present. </para>
        </listitem>
        <listitem>
            <para>Writers updating the attribute <link linkend="state"><code>state</code></link>
                MUST also update or delete <link linkend="substate"><code>subState</code></link>.</para>
        </listitem>
    </itemizedlist>

    <note>
        <para><link linkend="state"><code>state</code></link> is an OPTIONAL attribute of segments
            with a default value and segmentation can change as the XLIFF roundtrip progresses,
            hence implementers don't have to make explicit use of the attribute. However setting of
            the attribute is advantageous if a workflow needs to make use of Advanced Validation
            methods.</para>
    </note>
</section>


    <section id="subflows">
  <title>subFlows</title>

  <para>Sub-flows list - holds a list of <link linkend="id"><code>id</code></link> attributes corresponding to the <link linkend="unit"><code>&lt;unit></code></link>
    elements that contain the sub-flows for a given inline code.</para>

  <para><emphasis>Value description:</emphasis> A list of NMTOKEN values
  separated by spaces. Each value corresponds to the <link linkend="id"><code>id</code></link> attribute of a <link linkend="unit"><code>&lt;unit></code></link> element.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="ph"><code>&lt;ph></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <para>See the example in the <link linkend="subflowsdesc">Sub-Flows section</link>.</para>
</section>

    <section id="subflowsend">
  <title>subFlowsEnd</title>

  <para>Sub-flows list - holds a list of <link linkend="id"><code>id</code></link> attributes corresponding to the <link linkend="unit"><code>&lt;unit></code></link>
    elements that contain the sub-flows for the end marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> A list of NMTOKEN values
  separated by spaces. Each value corresponds to the <link linkend="id"><code>id</code></link> attribute of a <link linkend="unit"><code>&lt;unit></code></link> element.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <para>See the example in the <link linkend="subflowsdesc">Sub-Flows section</link>.</para>
</section>

    <section id="subflowsstart">
  <title>subFlowsStart</title>

  <para>Sub-flows list - holds a list of <link linkend="id"><code>id</code></link> attributes corresponding to the <link linkend="unit"><code>&lt;unit></code></link>
    elements that contain the sub-flows for the start marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> A list of NMTOKEN values
  separated by spaces. Each value corresponds to the <link linkend="id"><code>id</code></link> attribute of a <link linkend="unit"><code>&lt;unit></code></link> element.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="pc"><code>&lt;pc></code></link>.</para>

  <para><emphasis>Example:</emphasis></para>

  <para>See the example in the <link linkend="subflowsdesc">Sub-Flows section</link>.</para>
</section>

    <section id="substate">
  <title>subState</title>

  <para>subState - indicates a user-defined status for the <link linkend="segment"><code>&lt;segment></code></link> element.</para>

  <para><emphasis>Value description:</emphasis></para>

  <para>The value is composed of a prefix and a sub-value separated by a character <code>:</code>
    (U+003A).</para>

  <para>The prefix is a string uniquely identifying a collection of values for a specific authority.
    The sub-value is any string value defined by an authority.</para>

  <para>The prefix <code>xlf</code> is reserved for this specification.</para>

  <para>Other prefixes and sub-values MAY be defined by the users.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis>
    <link linkend="segment"><code>&lt;segment></code></link></para>

  <itemizedlist>
    <title>Constraints</title>

    <listitem>
      <para>If the attribute <link linkend="substate"><code>subState</code></link> is used, the attribute <link linkend="state"><code>state</code></link> MUST be explicitly set.</para>
    </listitem>
  </itemizedlist>
  <itemizedlist>
    <title>Processing Requirements</title>


    <listitem>
      <para>Writers updating the attribute <link linkend="state"><code>state</code></link> MUST also update or delete <link linkend="substate"><code>subState</code></link>.</para>
    </listitem>
  </itemizedlist>
</section>
    <section id="subtype">
  <title>subType</title>

  <para>subType - indicates the secondary level type of an inline code.</para>

  <para><emphasis>Value description:</emphasis></para>

  <para>The value is composed of a prefix and a sub-value separated by a character <code>:</code>
    (U+003A).</para>

  <para>The prefix is a string uniquely identifying a collection of sub-values for a specific
    authority. The sub-value is any string value defined by the authority.</para>

  <para>The prefix <code>xlf</code> is reserved for this specification, and the following sub-values
    are defined:</para>

  <simplelist type="vert">
    <member><code>xlf:lb</code> - Line break</member>

    <member><code>xlf:pb</code> - Page break</member>

    <member><code>xlf:b</code> - Bold</member>

    <member><code>xlf:i</code> - Italics</member>

    <member><code>xlf:u</code> - Underlined</member>

    <member><code>xlf:var</code> - Variable</member>
  </simplelist>

  <para>Other prefixes and sub-values MAY be defined by the users.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis>
    <link linkend="pc"><code>&lt;pc></code></link>,
      <link linkend="sc"><code>&lt;sc></code></link>,
      <link linkend="ec"><code>&lt;ec></code></link>
    and <link linkend="ph"><code>&lt;ph></code></link></para>

  <itemizedlist>
    <title>Constraints</title>

    <listitem>
      <para>If the attribute <link linkend="subtype"><code>subType</code></link> is used, the attribute <link linkend="type"><code>type</code></link> MUST be specified as well.</para>
    </listitem>
    <listitem>
      <para>The reserved <code>xlf:</code> prefixed values map onto the <link linkend="type"><code>type</code></link> attribute values as follows:</para>
      <simplelist type="vert">
        <member> For <code>xlf:b</code>, <code>xlf:i</code>, <code>xlf:u</code>,
          <code>xlf:lb</code>, and <code>xlf:pb</code>, the REQUIRED value of the <link linkend="type"><code>type</code></link> attribute is
            <code>fmt</code>.</member>
        <member> For <code>xlf:var</code>, the REQUIRED value of the <link linkend="type"><code>type</code></link> attribute is <code>ui</code>.</member>
      </simplelist>
    </listitem>
  </itemizedlist>
  <itemizedlist>
    <title>Processing Requirements</title>


    <listitem>
      <para>Modifiers updating the attribute <link linkend="type"><code>type</code></link> MUST also update or delete <link linkend="subtype"><code>subType</code></link>.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="trgLang">
    <title>trgLang</title>

    <para>Target language - the code of the language, in which the translated text is
        expressed.</para>

    <para><emphasis>Value description:</emphasis> A language code as described in <link linkend="bcp47">[BCP 47]</link>.</para>

    <para><emphasis>Default value:</emphasis> undefined</para>

    <para><emphasis>Used in:</emphasis>
        <link linkend="xliff"><code>&lt;xliff></code></link>.</para>
</section>

    <section id="translate">
    <title>translate</title>

    <para>Translate - indicates whether or not the source text in the scope of the given <code>translate</code> flag is intended
        for translation.</para>

    <para><emphasis>Value description:</emphasis> <code>yes</code> or <code>no</code>.</para>

    <para><emphasis>Default value:</emphasis> default values for this attribute
        depend on the element in which it is used:</para>

    <itemizedlist>
        <listitem>
            <para>When used in <link linkend="file"><code>&lt;file></code></link>:</para>

            <para>The value <code>yes</code>.</para>
        </listitem>
        <listitem>
            <para>When used in any other admissible structural element (<link linkend="group"><code>&lt;group></code></link> or <link linkend="unit"><code>&lt;unit></code></link>):</para>
            <para>The value of the <link linkend="translate"><code>translate</code></link> attribute of its parent element.
            </para>

        </listitem>
        <listitem>
            <para>When used in annotations markers
                <link linkend="mrk"><code>&lt;mrk></code></link> or
                <link linkend="sm"><code>&lt;sm></code></link>:</para>


            <para>The value of the <link linkend="translate"><code>translate</code></link> attribute of the innermost <link linkend="mrk"><code>&lt;mrk></code></link> or <link linkend="unit"><code>&lt;unit></code></link> element, in which the marker in question is located.
            </para>

        </listitem>

        
    </itemizedlist>


    <para><emphasis>Used in:</emphasis>
        <link linkend="file"><code>&lt;file></code></link>
        <link linkend="group"><code>&lt;group></code></link>
        <link linkend="unit"><code>&lt;unit></code></link>,
        <link linkend="mrk"><code>&lt;mrk></code></link> and
        <link linkend="sm"><code>&lt;sm></code></link>.
    </para>

</section>

    <section id="trgdir">
  <title>trgDir</title>

  <para>Target directionality - indicates the directionality of the target content.</para>

  <para><emphasis>Value description:</emphasis>
    <code>ltr</code> (Left-To-Right), <code>rtl</code> (Right-To-Left), or <code>auto</code>
    (determined heuristically, based on the first strong directional character in scope, see <link linkend="uax9">[UAX #9]</link>).</para>

  <para><emphasis>Default value:</emphasis> default values for this attribute
  depend on the element in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in <link linkend="file"><code>&lt;file></code></link>:</para>

      <para>The value <code>auto</code>.</para>
    </listitem>

    <listitem>
      <para>When used in any other element:</para>

      <para>The value of the <link linkend="trgdir"><code>trgDir</code></link> attribute of its parent element.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis>
    <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link>, and <link linkend="unit"><code>&lt;unit></code></link>. </para>
</section>

    <section id="type">
  <title>type</title>
  <para>Type - indicates the type of an element.</para>
  <para><emphasis>Value description:</emphasis> Allowed values for this attribute depend on the
    element in which it is used.</para>
  <itemizedlist>
    <listitem>
      <para>When used in <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link> or
          <link linkend="ph"><code>&lt;ph></code></link>:</para>
      <para>The value MUST be set to one of the following values:</para>
      <simplelist type="vert">
        <member><code>fmt</code> - Formatting (e.g. a &lt;b> element in HTML)</member>
        <member><code>ui</code> - User interface element</member>
        <member><code>quote</code> - Inline quotation (as opposed to a block citation)</member>
        <member><code>link</code> - Link (e.g. an &lt;a> element in HTML)</member>
        <member><code>image</code> - Image or graphic</member>
        <member><code>other</code> - Type of element not covered by any of the other top-level
          types.</member>
      </simplelist>
      <para><emphasis>Example:</emphasis>
        <programlisting format="linespecific">
&lt;segment>
  &lt;source>&lt;pc id="q1" type="quote"><foreignphrase lang="cs">Blázen,
      chce dobýt točnu v takovém počasí&lt;/pc>, dodal slovy svého
      oblíbeného imaginárního autora.</foreignphrase>&lt;/source>
  &lt;target>&lt;pc id="q1" type="quote">Madman, he wants to conquer the
      pole in this weather&lt;/pc>, offered he the words of his
      favourite imaginary playwright.&lt;/target>
&lt;/segment>
</programlisting>
      </para>
      <para>One can further specify the type of a code using the <link linkend="subtype"><code>subType</code></link> attribute.</para>
      <para><emphasis>Default value:</emphasis> undefined</para>
    </listitem>
    <listitem>
      <para>When used in <link linkend="mrk"><code>&lt;mrk></code></link> or <link linkend="sm"><code>&lt;sm></code></link>:</para>
      <para>One of the following values: <code>generic</code>, <code>comment</code>,
          <code>term</code>, or a user-defined value that is composed of a prefix and a sub-value
        separated by a character <code>:</code> (U+003A).</para>
      <para>The prefix is a string uniquely identifying a collection of sub-values for a specific
        authority. The sub-value is any string value defined by the authority.</para>
      <para><emphasis>Default value:</emphasis>
        <code>generic</code></para>
    </listitem>
    <listitem>
      <para>When used in <link linkend="group"><code>&lt;group></code></link> or <link linkend="unit"><code>&lt;unit></code></link>:</para>
      <para>A value that is composed of a prefix and a sub-value separated by a character
          <code>:</code> (U+003A).</para>
      <para>The prefix is a string uniquely identifying a collection of sub-values for a specific
        authority. The sub-value is any string value defined by the authority. The prefix
          <code>xlf</code> is reserved.</para>
      <para><emphasis>Default value:</emphasis> undefined</para>
    </listitem>
  </itemizedlist>
  <para><emphasis>Used in:</emphasis>
    <link linkend="group"><code>&lt;group></code></link>, <link linkend="unit"><code>&lt;unit></code></link>, <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>, <link linkend="mrk"><code>&lt;mrk></code></link>,
      <link linkend="ph"><code>&lt;ph></code></link>
    and <link linkend="sm"><code>&lt;sm></code></link>.</para>
  <itemizedlist>
    <title>Processing Requirements</title>
    <listitem>
      <para>Modifiers updating the attribute <link linkend="type"><code>type</code></link> on <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, <link linkend="ec"><code>&lt;ec></code></link>, or
          <link linkend="ph"><code>&lt;ph></code></link> MUST also update or delete <link linkend="subtype"><code>subType</code></link>.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="value">
  <title>value</title>

  <para>Value - holds a value for the associated annotation.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <link linkend="termAnnotation">term annotation</link>, the value is a
      definition of the term.</para>
    </listitem>

    <listitem>
      <para>When used in a <link linkend="commentAnnotation">comment annotation</link>, the value is
      the text of the comment.</para>
    </listitem>

    <listitem>
      <para>When used in a <link linkend="customAnnotation">custom annotation</link>, the value is
      defined by each custom annotation.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <link linkend="mrk"><code>&lt;mrk></code></link> and <link linkend="sm"><code>&lt;sm></code></link>.</para>
</section>

    <section id="version">
    <title>version</title>

    <para>XLIFF Version - is used to specify the version of the XLIFF Document. This corresponds to
        the version number of the XLIFF specification that the XLIFF document adheres to. For this
        specification, the version is <emphasis>2.2</emphasis>.</para>

    <para><emphasis>Value description:</emphasis> 2.0, 2.1 or 2.2</para>

    <para><emphasis>Used in:</emphasis>
        <link linkend="xliff"><code>&lt;xliff></code></link>.</para>

</section>
  </section>

  <section>
    <title>XML namespace</title>

    <para>The attributes from XML namespace used in XLIFF 2.2 are: <link linkend="xml_lang">xml:lang</link> and <link linkend="xml_space">xml:space</link>.</para>

    <section id="xml_lang">
    <title>xml:lang</title>

    <para>Language - the xml:lang attribute specifies the language variant of the text of a given
        element. For example: <code>xml:lang="fr-FR"</code> indicates the French language as spoken
        in France.</para>

    <para><emphasis>Value description:</emphasis> A language code as described in <link linkend="bcp47">[BCP 47]</link>.</para>

    <para><emphasis>Default value:</emphasis> default values for this attribute depend on the
        element in which it is used:</para>

    <itemizedlist>
        <listitem>
            <para>When used in a <link linkend="source"><code>&lt;source></code></link> element:</para>

            <para>The value set in the <link linkend="srcLang"><code>srcLang</code></link> attribute of the enclosing <link linkend="xliff"><code>&lt;xliff></code></link> element.</para>
        </listitem>
        <listitem>
            <para>When used in a <link linkend="target"><code>&lt;target></code></link> element:</para>

            <para>The value set in the <link linkend="trgLang"><code>trgLang</code></link> attribute of the enclosing <link linkend="xliff"><code>&lt;xliff></code></link> element.</para>
        </listitem>
        <listitem>
            <para>When used in any other element:</para>
            <para>The value of the <code>xml:lang</code> attribute of its parent element. </para>
        </listitem>

    </itemizedlist>

    <para><emphasis>Used in:</emphasis>
        <link linkend="source"><code>&lt;source></code></link>, <link linkend="target"><code>&lt;target></code></link> and where extension attributes are allowed.</para>

</section>

    <section id="xml_space">
    <title>xml:space</title>
    
    <para>White spaces - the xml:space attribute specifies how white spaces (ASCII spaces, tabs and
        line-breaks) are to be treated.</para>
    
    
    <para><emphasis>Value description:</emphasis>
        <code>default</code> or <code>preserve</code>. The value <code>default</code> signals that
        an application's default white-space processing modes are acceptable for this element; the
        value <code>preserve</code> indicates the intent that applications preserve all the white
        space. This declared intent is considered to apply to all elements within the content of the
        element where it is specified, unless overridden with another instance of the xml:space
        attribute. For more information see <ulink url="http://www.w3.org/TR/REC-xml/#sec-white-space">the section on xml:space</ulink> in the <link linkend="bib_XML">[XML]</link> specification. </para>
    
    <para><emphasis>Default value:</emphasis>  default values for this attribute
        depend on the element in which it is used:</para>
    
    <itemizedlist>
        <listitem>
            <para>When used in <link linkend="data"><code>&lt;data></code></link>:</para>
            
            <para>The value <code>preserve</code>.</para>
        </listitem>
        <listitem>
            <para>When used in <link linkend="xliff"><code>&lt;xliff></code></link>:</para>
            
            <para>The value <code>default</code>.</para>
        </listitem>
        <listitem>
            <para>When used in any other element:</para>
            <para>The value of the <code>xml:space</code> attribute of its parent element.
            </para>   
        </listitem>
    </itemizedlist>
    
    <para><emphasis>Used in:</emphasis> <link linkend="xliff"><code>&lt;xliff></code></link>, 
        <link linkend="file"><code>&lt;file></code></link>,
        <link linkend="group"><code>&lt;group></code></link>,
        <link linkend="unit"><code>&lt;unit></code></link>,
        <link linkend="source"><code>&lt;source></code></link>,
        <link linkend="target"><code>&lt;target></code></link>,
        and <link linkend="data"><code>&lt;data></code></link>.
    </para>
</section>
  </section>
</section>

    <section>
        <title>CDATA sections</title>

        <para>CDATA sections (<code>&lt;![CDATA[...]]&gt;</code>) are allowed in XLIFF content, but
            on output they MAY be changed into normal escaped content.</para>

        <para>Note that avoiding CDATA sections is considered a best practice from the
            internationalization viewpoint <link linkend="biblio_xmli18nbp">[XML I18N BP]</link> .</para>

        <itemizedlist>
            <title>Processing Requirements</title>

            <listitem>
                <para>Agents MUST process CDATA sections.</para>
            </listitem>

            <listitem>
                <para>Writers MAY preserve the original CDATA sections.</para>
            </listitem>
        </itemizedlist>
    </section>

    <section>
        <title>XML Comments</title>

        <para>XML comments (<code>&lt;!--...--!></code>) are allowed in XLIFF content, but they
            are ignored in the parsed content.</para>

        <para>For example:</para>

        <programlisting format="linespecific">
&lt;source>Text content &lt;!--IMPORTANT-->that is important&lt;/source>
</programlisting>

        <para>and</para>

        <programlisting format="linespecific">
&lt;source>Text content that is important&lt;/source>
</programlisting>

        <para>are identical after parsing and correspond to the same following parsed
            content:</para>

        <programlisting format="linespecific">
Text content that is important</programlisting>

        <para>To annotate a section of the content with a comment that is recognized and preserved
            by XLIFF user agents, use the <link linkend="note"><code>&lt;note></code></link> element, or the <link linkend="commentAnnotation"><code>&lt;mrk></code></link> element.</para>

        <itemizedlist>
            <title>Processing Requirements</title>

            <listitem>
                <para>Agents MUST ignore XML comments. That is the XLIFF
                    parsed content is the same whether or not there is an XML comment in the
                    document.</para>
            </listitem>

            <listitem>
                <para>Writers MAY preserve XML comments on output.</para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>XML Processing Instructions</title>

        <para>XML Processing Instructions <link linkend="bib_XML">[XML]</link> (see specifically <ulink url="http://www.w3.org/TR/REC-xml/#sec-pi">http://www.w3.org/TR/REC-xml/#sec-pi</ulink>) are an XML mechanism to "allow
            documents to contain instructions for applications." XML Processing Instructions are
            allowed in XLIFF content but they are ignored in the parsed content in the same sense as
            XML Comments.</para>
        <itemizedlist>
            <title>Processing Requirements</title>
            <listitem>
                <para>Agents MUST NOT use Processing Instructions as a means
                    to implement a feature already specified in XLIFF Core or
                        Modules.</para>
            </listitem>
            <listitem>
                <para>Writers SHOULD preserve XML Processing Instructions in
                    an XLIFF document.</para>
            </listitem>
        </itemizedlist>

        <warning>
            <para>Note that Agents using Processing Instructions to implement
                    XLIFF Core or Module features are
                not compliant XLIFF applications disregarding whether they are otherwise conformant.
            </para>
        </warning>
        <warning>
            <para>Although this specification encourages XLIFF Agents to
                preserve XML Processing Instructions, it is not and cannot be, for valid processing
                reasons, an absolute protection and it is for instance highly unlikely that
                Processing Instructions could survive an XLIFF roundtrip at the <link linkend="segment"><code>&lt;segment></code></link> level or lower. Hence implementers are
                discouraged from using XML Processing Instructions at the <link linkend="segment"><code>&lt;segment></code></link> and lower levels.</para>
        </warning>

    </section>

    <section id="inline">
  <title>Inline Content</title>

  <para>The XLIFF inline content defines how to encode the content extracted from the original
    source. The content includes the following types of data:</para>

  <itemizedlist>
    <listitem>
      <para><link linkend="text">Text</link> -- Textual content.</para>
    </listitem>

    <listitem>
      <para><link linkend="inlineCodes">Inline codes</link> -- Sequences of content that are not
        linguistic text, such as formatting codes, variable placeholders, etc.</para>

      <para>For example: the element <code>&lt;b></code> in HTML, or the placeholder
          <code>{0}</code> in a Java string.</para>
    </listitem>

    <listitem>
      <para><link linkend="annotations">Annotations</link> -- Markers that delimit a span of the
        content and carry or point to information about the specified content.</para>

      <para>For example: a flag indicating that a given section of text is not intended for
        translation, or an element indicating that a given expression in the text is a term
        associated with a definition.</para>
    </listitem>
  </itemizedlist>

  <para>There are two elements that contain inline markup in XLIFF: <link linkend="source"><code>&lt;source></code></link> and <link linkend="target"><code>&lt;target></code></link>.</para>

  <para>In some cases, data directly associated with inline elements MAY also be stored at the
      <link linkend="unit"><code>&lt;unit></code></link> level in an <link linkend="originaldata"><code>&lt;originalData></code></link> element.</para>

  <section id="text">
    <title>Text</title>

    <para>The XLIFF inline markup does not prescribe how to represent normal text, besides that it
      MUST be valid XML.</para>

    <section>
      <title>Characters invalid in XML</title>

      <para>Because the content represented in XLIFF can be extracted from anywhere, including
        software resources and other material that can contain control characters, XLIFF needs to be
        able to represent all Unicode code points <link linkend="Unicode">[Unicode]</link>.</para>

      <para>However, XML does not have the capability to represent all Unicode code points <link linkend="Unicode">[Unicode]</link>, and does not provide any
        official mechanism to escape the forbidden code points.</para>

      <para>To remedy this, the inline markup provides the <link linkend="cp"><code>&lt;cp></code></link>
        element.</para>

      <para>The syntax and semantic of <link linkend="cp"><code>&lt;cp></code></link> in XLIFF are similar to the ones of
          <code>&lt;cp></code> in the Unicode Locale Data Markup Language <link linkend="biblio_ldml">[LDML]</link>.</para>
    </section>
  </section>

  <section id="inlineCodes">
    <title>Inline Codes</title>

    <para>The specification takes into account two types of codes:</para>

    <variablelist>
      <varlistentry id="originalCode">
        <term>Original code</term>

        <listitem>
          <para>An <emphasis>original code</emphasis> is a code that exists in the original document
            being extracted into XLIFF.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="addedCode">
        <term>Added code</term>

        <listitem>
          <para>An <emphasis>added code</emphasis> is a code that does not exist in the original
            document, but has been added to the content at some point after extraction.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Any code (original or added) belongs to one of the two following categories:</para>

    <variablelist>
      <varlistentry id="standalone">
        <term>Standalone</term>

        <listitem>
          <para>A <emphasis>standalone</emphasis> code is a code that corresponds to a single
            position in the content. An example of such code is the <code>&lt;br/></code> element
            in HTML.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="spanLike">
        <term>Spanning</term>

        <listitem>
          <para>A <emphasis>spanning</emphasis> code is a code that encloses a section of the
            content using a start and an end marker. There are two kinds of spanning codes:</para>

          <itemizedlist>
            <listitem>
              <para>Codes that can overlap, that is: they can enclose a non-closing or a non-opening
                spanning code. Such codes do not have an XML-like behavior. For example the RTF code
                  <code>\b1...\b0</code> is a spanning code that is allowed to overlap.</para>
            </listitem>

            <listitem>
              <para>Codes that cannot overlap, that is: they cannot enclose a partial spanning code
                and have an XML-like behavior at the same time. An example of such code is the
                  <code>&lt;emphasis>...&lt;/emphasis></code> element in DocBook.</para>
            </listitem>
          </itemizedlist>

          <para>When the opening or closing marker of a spanning code does not have its
            corresponding closing or opening marker in the same unit, it is an <emphasis>orphan
              code</emphasis>.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="representingcodes">
      <title>Representation of the codes</title>

      <para>Spanning codes present a set of challenges in XLIFF:</para>

      <para>First, because the code format of the original data extracted to XLIFF does not need to
        be XML, spanning codes can overlap.</para>

      <para>For example, in the following RTF content, the format markers are in a sequence: start
        bold, start italics, end bold, end italics. This does not translate into a well-formed
        mapping.</para>

      <programlisting format="linespecific">
Text in \b bold \i and\b0  italics\i0</programlisting>

      <para>Another challenge is the possible effect of segmentation: A spanning code can start in
        one segment and end in another.</para>

      <para>For example, in the following HTML content, the segmentation splits the text
        independently of the codes so the starting and ending tags of the
          <code>&lt;B>...&lt;/B></code> element end up in different parts of the <link linkend="unit"><code>&lt;unit></code></link> element:</para>

      <programlisting format="linespecific">
[Sentence &lt;B>one. ][Sentence two.][ ][Sentence&lt;/B> three.]</programlisting>

      <para>Finally, a third potential cause of complication is that the start or the end markers of
        a spanning code can become orphans if their segment is used outside of its original <link linkend="unit"><code>&lt;unit></code></link>.</para>

      <para>For example, an entry with bold text can be broken down into two segments:</para>

      <programlisting format="linespecific">
Segment 1 = "&lt;b>Warning found: "
Segment 2 = "The file is read-only&lt;/b>"</programlisting>

      <para>And later, one of the segments can be re-used outside its original <link linkend="unit"><code>&lt;unit></code></link>, for instance as a translation candidate:</para>

      <programlisting format="linespecific">
New segment = "&lt;b>Warning found - see log&lt;/b>"
Fuzzy match = "&lt;b>Warning found: "</programlisting>

      <para>Because of these use cases, the representation of a spanning code cannot always be
        mapped to a similar spanning element in XLIFF.</para>

      <para>When taking into account these issues, the possible use cases and their corresponding
        XLIFF representations are as follow:</para>

      <table>
        <title>Inline code use cases</title>

        <tgroup cols="2">
          <thead>
            <row>
              <entry>Use Case</entry>

              <entry>Example of Representation</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Standalone code</entry>

              <entry><link linkend="ph"><code>&lt;ph
                    id='1'/></code></link></entry>
            </row>

            <row>
              <entry>Well-formed spanning code</entry>

              <entry><link linkend="pc"><code>&lt;pc
                    id='1'>text&lt;/pc></code></link></entry>
            </row>

            <row>
              <entry>Start marker of spanning code</entry>

              <entry><link linkend="sc"><code>&lt;sc
                    id='1'/></code></link></entry>
            </row>

            <row>
              <entry>End marker of spanning code</entry>

              <entry><link linkend="ec"><code>&lt;ec
                    startRef='1'/></code></link></entry>
            </row>

            <row>
              <entry>Orphan start marker of spanning code</entry>

              <entry><link linkend="sc"><code>&lt;sc id='1'
                    isolated='yes'/></code></link></entry>
            </row>

            <row>
              <entry>Orphan end marker of spanning code</entry>

              <entry><link linkend="ec"><code>&lt;ec id='1'
                    isolated='yes'/></code></link></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>

    <section id="spanningcodeusage">
      <title>Usage of &lt;pc> and &lt;sc>/&lt;ec></title>

      <para>A spanning code MUST be represented using a <link linkend="sc"><code>&lt;sc></code></link> element and a <link linkend="ec"><code>&lt;ec></code></link>
        element if the code is not well-formed or orphan.</para>

      <para>For example, the following RTF content has two spans of formatting:</para>

      <programlisting format="linespecific">
Text in \b bold \i and\b0  italics\i0</programlisting>

      <para>They can only be represented using two pairs of <link linkend="sc"><code>&lt;sc></code></link> and
          <link linkend="ec"><code>&lt;ec></code></link> elements:</para>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\b &lt;/data>
    &lt;data id="d2">\i &lt;/data>
    &lt;data id="d3">\b0 &lt;/data>
    &lt;data id="d4">\i0 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Text in &lt;sc id="1" dataRef="d1"/>bold &lt;sc id="2"
      dataRef="d2"/> and&lt;ec startRef="1" dataRef="d3"/>
       italics&lt;ec startRef="2" dataRef="d4"/>. &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

      <para>If the spanning code is well-formed it MAY be represented using either a single <link linkend="pc"><code>&lt;pc></code></link>
        element or using a pair of <link linkend="sc"><code>&lt;sc></code></link> and a <link linkend="ec"><code>&lt;ec></code></link> elements.</para>

      <para>For example, the following RTF content has a single span of formatting:</para>

      <programlisting format="linespecific">
Text in \b bold\b0 .</programlisting>

      <para>It can be represented using either notations:</para>

      <programlisting format="linespecific">
Text in &lt;pc id="1" canOverlap="yes" dataRefStart="c1" dataRefEnd="c2">
bold&lt;/pc>.</programlisting>

      <programlisting format="linespecific">
Text in &lt;sc id="1" dataRef="c1"/>bold&lt;ec startRef="1" dataRef="c2"/>.</programlisting>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para>When both the <link linkend="pc"><code>&lt;pc></code></link> and the <link linkend="sc"><code>&lt;sc></code></link>/<link linkend="ec"><code>&lt;ec></code></link> representations are possible,
            Extractors and Modifiers MAY use either one as long as all the information of the inline
            code (e.g. original data, sub-flow indicators, etc.) are preserved.</para>
        </listitem>

        <listitem>
          <para>When converting representation between a pair of <link linkend="sc"><code>&lt;sc></code></link>
            and <link linkend="ec"><code>&lt;ec></code></link> elements and a <link linkend="pc"><code>&lt;pc></code></link>
            element or vice-versa, Modifiers MUST map their attributes as shown in the following
            table:</para>

          <table>
            <title>Mapping between attributes</title>

            <tgroup cols="3">
              <tbody>
                <row>
                  <entry><link linkend="pc"><code>&lt;pc></code></link> attributes</entry>

                  <entry><link linkend="sc"><code>&lt;sc></code></link> attributes</entry>

                  <entry><link linkend="ec"><code>&lt;ec></code></link> attributes</entry>
                </row>

                <row>
                  <entry>id</entry>

                  <entry>id</entry>

                  <entry>startRef / id (see <link linkend="ecIFF"><code>&lt;ec></code></link>)</entry>
                </row>

                <row>
                  <entry>type</entry>

                  <entry>type</entry>

                  <entry>type</entry>
                </row>

                <row>
                  <entry>subType</entry>

                  <entry>subType</entry>

                  <entry>subType</entry>
                </row>

                <row>
                  <entry>dispStart</entry>

                  <entry>disp</entry>

                  <entry/>
                </row>

                <row>
                  <entry>dispEnd</entry>

                  <entry/>

                  <entry>disp</entry>
                </row>

                <row>
                  <entry>equivStart</entry>

                  <entry>equiv</entry>

                  <entry/>
                </row>

                <row>
                  <entry>equivEnd</entry>

                  <entry/>

                  <entry>equiv</entry>
                </row>

                <row>
                  <entry>subFlowsStart</entry>

                  <entry>subFlows</entry>

                  <entry/>
                </row>

                <row>
                  <entry>subFlowsEnd</entry>

                  <entry/>

                  <entry>subFlows</entry>
                </row>

                <row>
                  <entry>dataRefStart</entry>

                  <entry>dataRef</entry>

                  <entry/>
                </row>

                <row>
                  <entry>dataRefEnd</entry>

                  <entry/>

                  <entry>dataRef</entry>
                </row>

                <row>
                  <entry/>

                  <entry>isolated</entry>

                  <entry>isolated</entry>
                </row>

                <row>
                  <entry>canCopy</entry>

                  <entry>canCopy</entry>

                  <entry>canCopy</entry>
                </row>

                <row>
                  <entry>canDelete</entry>

                  <entry>canDelete</entry>

                  <entry>canDelete</entry>
                </row>

                <row>
                  <entry>canReorder</entry>

                  <entry>canReorder</entry>

                  <entry>canReorder</entry>
                </row>

                <row>
                  <entry>copyOf</entry>

                  <entry>copyOf</entry>

                  <entry>copyOf</entry>
                </row>

                <row>
                  <entry>canOverlap</entry>

                  <entry>canOverlap</entry>

                  <entry>canOverlap</entry>
                </row>

                <row>
                  <entry>dir</entry>

                  <entry>dir</entry>

                  <entry>dir</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </listitem>

        <listitem>
          <para>Agents MUST be able to handle any of the above two types of inline code
            representation.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Storage of the original data</title>

      <para>Most of the time, inline codes correspond to an original construct in the format from
        which the content was extracted. This is the <emphasis>original data</emphasis>.</para>

      <para>XLIFF tries to abstract and normalize as much as possible the extracted content because
        this allows a better re-use of the material across projects. Some tools require access to
        the original data in order to create the translated document back into its original format.
        Others do not.</para>

      <section>
        <title>No storage of the original data</title>

        <para>In this option, the original data of the inline code is not preserved inside the XLIFF
          document.</para>

        <para>The tool that created the initial XLIFF document is responsible for providing a way to
          re-create the original format properly when merging back the content.</para>

        <para>For example, for the following HTML content:</para>

        <programlisting format="linespecific">
This &lt;B>naked mole rat&lt;/B> is &lt;B>pretty ugly&lt;/B>.</programlisting>

        <para>one possible XLIFF representation is the following:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>This &lt;pc id="1">naked mole rat&lt;/pc> is 
        &lt;pc id="2">pretty ugly&lt;/pc>.&lt;/source>
    &lt;target>Cet &lt;pc id="1">hétérocéphale&lt;/pc> est 
        &lt;pc id="2">plutôt laid&lt;/pc>.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>
      </section>

      <section>
        <title>Storage of the original data</title>

        <para>In this option, the original data of the inline code is stored in a structure that
          resides outside the content (i.e. outside <link linkend="source"><code>&lt;source></code></link> or <link linkend="target"><code>&lt;target></code></link>) but still inside the <link linkend="unit"><code>&lt;unit></code></link> element.</para>

        <para>The structure is an element <link linkend="originaldata"><code>&lt;originalData></code></link> that contains a list
          of <link linkend="data"><code>&lt;data></code></link> entries uniquely identified within the <link linkend="unit"><code>&lt;unit></code></link> by an <link linkend="id"><code>id</code></link> attribute. In the content, each inline code using
          this mechanism includes a <link linkend="dataref"><code>dataRef</code></link> attribute that points to a <code><link linkend="data"><code>&lt;data></code></link></code> element where its corresponding original
          data is stored.</para>

        <para>For example, for the following HTML content:</para>

        <programlisting format="linespecific">
This &lt;B>naked mole rat&lt;/B> is &lt;B>pretty ugly&lt;/B>.</programlisting>

        <para>The following XLIFF representation stores the original data:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;B>&lt;/data>
    &lt;data id="d2">&amp;lt;/B>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>This &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2"> naked
        mole rat&lt;/pc> is &lt;pc id="2" dataRefStart="d1"
        dataRefEnd="d2"> pretty ugly&lt;/pc>.&lt;/source>
    &lt;target>Cet &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        hétérocéphale&lt;/pc> est &lt;pc id="2" dataRefStart="d1"
        dataRefEnd="d2"> plutôt laid&lt;/pc>.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <note>
          <para>This mechanism allows to re-use identical original data by pointing to the same
              <link linkend="data"><code>&lt;data></code></link> element.</para>
        </note>
      </section>
    </section>

    <section id="addingcodes">
      <title>Adding Codes</title>

      <para>When processing content, there are possible cases when new inline codes need to be
        added.</para>

      <para>For example, in the following HTML help content, the text has the name of a button in
        bold:</para>

      <programlisting format="linespecific">
Press the &lt;b>Emergency Stop&lt;/b> button
to interrupt the count-down sequence.</programlisting>

      <para>In the translated version, the original label needs to remain in English because the
        user interface, unlike the help, is not translated. However, for convenience, a translation
        is also provided and emphasized using another style. That new formatting needs to be
        added:</para>

      <programlisting format="linespecific">
Appuyez sur le bouton &lt;b>Emergency Stop&lt;/b> (&lt;i>Arrêt d'urgence&lt;/i>)
pour interrompre le compte à rebours.</programlisting>

      <para>Having to split a single formatted span of text into several separate parts during
        translation, can serve as another example. For instance, the following sentence in Swedish
        uses bold on the names of two animals:</para>

      <programlisting format="linespecific">
Äter &lt;b>katter möss&lt;/b>?</programlisting>

      <para>But the English translation separates the two names and therefore needs to duplicate the
        bold codes.</para>

      <programlisting format="linespecific">
Do &lt;b>cats&lt;/b> eat &lt;b>mice&lt;/b>?</programlisting>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para>Modifiers MAY add inline codes.</para>
        </listitem>

        <listitem>
          <para>The <link linkend="id"><code>id</code></link>
            value of the added code MUST be different from all <link linkend="id"><code>id</code></link> values in both
            source and target content of the unit where the new code is added.</para>
        </listitem>

        <listitem>
          <para>Mergers MAY ignore added inline codes when merging the translated content back into
            the original format.</para>
        </listitem>
      </itemizedlist>

      <para>There are several ways to add codes:</para>

      <section id="duplicatingexistingcode">
        <title>Duplicating an existing code</title>

        <para>One way to create a new code is to duplicate an existing one (called the
            <emphasis>base code</emphasis>).</para>

        <para>If the base code is associated with some original data: the new code simply uses the
          same data.</para>

        <para>For example, the translation in the following unit, the second inline code is a
          duplicate of the first one:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;b>&lt;/data>
    &lt;data id="d2">&amp;lt;/b>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Äter &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">katter
        möss&lt;/pc>?&lt;/source>
    &lt;target>Do &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        cats&lt;/pc> eat &lt;pc id="2" dataRefStart="d1"
        dataRefEnd="d2">mice&lt;/pc>?&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <para>If the base code has no associated data, the new code MUST use the <link linkend="copyof"><code>copyOf</code></link>
          attribute to indicate the <code>id</code> of the base code. This allows the merging tool
          to know what original data to re-use.</para>

        <para>For example, the translation in the following unit, the second inline code is a
          duplicate of the first one:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Esznek &lt;pc id="1">a magyarok svéd húsgombócot
        &lt;/pc>?&lt;/source>
    &lt;target>Do &lt;pc id="1">Hungarians&lt;/pc> eat &lt;pc id="2"
        copyOf="1">Swedish meatballs&lt;/pc>?&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <itemizedlist>
          <title>Processing Requirements</title>

          <listitem>
            <para>Modifiers MUST NOT clone a code that has its <link linkend="cancopy"><code>canCopy</code></link> attribute is set to <code>no</code>.</para>
          </listitem>

          <listitem>
            <para>The <link linkend="copyof"><code>copyOf</code></link> attribute MUST be used when, and only when, the base
              code has no associated original data.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Creating a brand-new code</title>

        <para>Another way to add a code is to create it from scratch. For example, this can happen
          when the translated text requires additional formatting.</para>

        <para>For example, in the following unit, the UI text needs to stay in English, and is also
          translated into French as a hint for the French user. The French translation for the UI
          text is formatted in italics:</para>

        <para><programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;b>&lt;/data>
    &lt;data id="d2">&amp;lt;/b>&lt;/data>
    &lt;data id="n1">&amp;lt;i>&lt;/data>
    &lt;data id="n2">&amp;lt;/i>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Press the &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Emergency Stop&lt;/pc> button to interrupt the count-down
        sequence. &lt;/source>
    &lt;target>Appuyez sur le bouton &lt;pc id="1" dataRefStart="d1"
        dataRefEnd="d2">Emergency Stop&lt;/pc> (&lt;pc id="2"
        dataRefStart="n1" dataRefEnd="n2">Arrêt d'urgence
        &lt;/pc>) pour interrompre le compte à rebours. &lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting></para>
      </section>

      <section>
        <title>Converting text into a code</title>

        <para>Another way to add a code is to convert part of the extracted text into code. In some
          cases the inline code can be created after extraction, using part of the text content.
          This can be done, for instance, to get better matches from an existing Translation Memory,
          or better candidates from a Machine Translation system.</para>

        <para>For example, it can happen that a tool extracting a Java properties file to XLIFF is
          not sophisticated enough to treat HTML or XML snippets inside the extracted text as inline
          code:</para>

        <programlisting format="linespecific">
# text property for the widget 'next'
nextText: Click &lt;ui>Next&lt;/ui></programlisting>

        <para>Resulting XLIFF content:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Click &amp;lt;ui>Next&amp;lt;/ui>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <para>But another tool, later in the process, can be used to process the initial XLIFF
          document and detect additional inline codes. For instance here the XML elements such as
            <code>&lt;ui></code>.</para>

        <para>The original data of the new code is the part of the text content that is converted as
          inline code.</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;ui>&lt;/data>
    &lt;data id="d2">&amp;lt;/ui>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Click &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Next&lt;/pc>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <warning>
          <para>Converting XLIFF text content into original data for inline code might need a
            tool-specific process as the tool which did the initial extraction could have applied
            some conversion to the original content to create the XLIFF content (e.g. un-escape
            special characters).</para>
        </warning>
      </section>
    </section>

    <section id="removingcodes">
      <title>Removing Codes</title>

      <para>When processing content, there are some possible cases when existing inline codes need
        to be removed.</para>

      <para>For an example the translation of a sentence can result in grouping of several formatted
        parts into a single one. For instance, the following sentence in English uses bold on the
        names of two animals:</para>

      <programlisting format="linespecific">
Do &lt;b>cats&lt;/b> eat &lt;b>mice&lt;/b>?</programlisting>

      <para>But the Swedish translation group the two names and therefore needs only a single bolded
        part.</para>

      <programlisting format="linespecific">
Äter &lt;b>katter möss&lt;/b>?</programlisting>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para>User agents MAY remove a given inline code only if its <link linkend="candelete"><code>canDelete</code></link> attribute is set to <code>yes</code>.</para>
        </listitem>

        <listitem>
          <para>When removing a given inline code, the user agents MUST remove its associated
            original data, except if the original data is shared with another inline code that
            remains in the unit.</para>
          <para>Note that having to delete the original data is unlikely because such original data
            is likely to be associated to an inline code in the source content.</para>
        </listitem>
      </itemizedlist>

      <para>There are several ways to remove codes:</para>

      <section>
        <title>Deleting a code</title>

        <para>One way to remove a code is to delete it from the extracted content. For example, in
          the following unit, the translated text does not use the italics formatting. It is removed
          from the target content, but the original data are preserved because they are still used
          in the source content.</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;i>&lt;/data>
    &lt;data id="d2">&amp;lt;/i>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>I read &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">Little
        House on the Prairie&lt;/pc> to my children.&lt;/source>
    &lt;target><foreignphrase lang="ja">子供に「大草原の小さな家」を読みました。</foreignphrase>&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>
      </section>

      <section>
        <title>Converting a code into text</title>

        <para>Another way to remove an inline code is to convert it into text content. This is
          likely to be a rare use case. It is equivalent to deleting the code, with the addition to
          place the original data for the given code into the content, as text. This can be done,
          for example, to get better matches from an existing Translation Memory, or better
          candidates from a Machine Translation system.</para>

        <para>For instance, the following unit has an inline code corresponding to a variable
          place-holder. A tool can temporarily treat this variable as text to get better matches
          from an existing Translation Memory.</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">%s&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Cannot find '&lt;ph id="1" dataRef="d1"/>'.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <para>The modified unit would end up like as shown below. Note that because the original
          data was not associated with other inline code it has been removed from the unit:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Cannot find '%s'.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <warning>
          <para>Converting the original data of an inline code into text content might need a
            tool-specific process as the tool which did the initial extraction could have applied
            some conversion to the original content.</para>
        </warning>
      </section>
    </section>

    <section id="editinghints">
      <title>Editing Hints</title>

      <para>XLIFF provides some information about what editing operations are applicable to inline
        codes:</para>

      <itemizedlist>
        <listitem>
          <para>A code can be deleted: That is, the code element as well as its original data (if
            any are attached) are removed from the document. This hint is represented with the
              <link linkend="candelete"><code>canDelete</code></link> attribute. The default value is <code>yes</code>:
            deletion is allowed.</para>

          <para>For example, the following extracted C string has the code <link linkend="ph"><code>&lt;ph
              id='1'/></code></link> set to be not deletable because removing the original data
            (the variable placeholder <code>%s</code>) from the string would result in an error when
            running the application:</para>
        </listitem>

        <listitem>
          <para>A code can be copied: That is, the code is used as a <emphasis>base code</emphasis>
            for adding another inline code. See <xref linkend="duplicatingexistingcode"/> for more
            details. This hint is represented with the <link linkend="cancopy"><code>canCopy</code></link> attribute. The default value is
              <code>yes</code>: copy is allowed.</para>
        </listitem>

        <listitem>
          <para>A code can be re-ordered: That is, a given code can be moved before or after another
            inline code. This hint is represented with the <link linkend="canreorder"><code>canReorder</code></link> attribute. The default value is <code>yes</code>:
            re-ordering is allowed.</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>Note that often those properties are related and appear together. For example, the
          code in the first unit shown below is a variable placeholder that has to be preserved and
          cannot be duplicated, and when several of such variables are present, as in the second
          unit, they cannot be re-ordered:</para>
      </note>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">%s&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Can't open '&lt;ph id="1" dataRef="d1" canCopy="no"
        canDelete="no"/>'.&lt;/source>
  &lt;/segment>
&lt;/unit>
&lt;unit id="2">
  &lt;originalData>
    &lt;data id="d1">%s&lt;/data>
    &lt;data id="d2">%d&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Number of &lt;ph id="1" dataRef="d1" canCopy="no"
        canDelete="no" canReorder="firstNo"/>: &lt;ph id="2" dataRef="d2"
        canCopy="no" canDelete="no" canReorder="no"/>. &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

      <para>See the <link linkend="contentmodification">Target Content Modification section</link>
        for additional details on editing.</para>

      <itemizedlist>
        <title>Constraints</title>
        <listitem>
          <para>When the attribute <link linkend="canreorder"><code>canReorder</code></link> is set to <code>no</code> or
              <code>firstNo</code>, the attributes <link linkend="cancopy"><code>canCopy</code></link> and <link linkend="candelete"><code>canDelete</code></link> MUST also be set to <code>no</code>.</para>
        </listitem>
        <listitem>
          <para>Inline codes re-ordering within a source or target content MAY be limited by
            defining non-reorderable sequences. Such sequence is made of a first inline code with
            the attribute <link linkend="canreorder"><code>canReorder</code></link> set to <code>firstNo</code> and zero or more
            following codes with <link linkend="canreorder"><code>canReorder</code></link> set to <code>no</code>.</para>
        </listitem>
        <listitem>
          <para>A non-reorderable sequence of codes MUST NOT start with a code with the attribute
              <link linkend="canreorder"><code>canReorder</code></link> set to <code>No</code> and zero or more following
            codes with <link linkend="canreorder"><code>canReorder</code></link> set to <code>no</code></para>
          <note>
            <para>A non-reorderable sequence made of a single code with <link linkend="canreorder"><code>canReorder</code></link> set to <code>firstNo</code> are allowed just for
              extraction convenience and are equivalent to a code with the attribute <link linkend="canreorder"><code>canReorder</code></link> set to <code>yes</code>.</para>
          </note>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <title>Processing Requirements</title>
        <listitem>
          <para>Extractors SHOULD set the <link linkend="candelete"><code>canDelete</code></link>, <link linkend="cancopy"><code>canCopy</code></link>
            and <link linkend="canreorder"><code>canReorder</code></link> attributes for the codes that need to be treated
            differently than with the default settings.</para>
        </listitem>
        <listitem>
          <para>Modifiers MUST NOT change the number and order of the inline codes making up a
            non-reorderable sequence.</para>
        </listitem>
        <listitem>
          <para>Modifiers MAY move a whole non-reorderable sequence before or after another
            non-reorderable sequence.</para>
        </listitem>
        <listitem>
          <para>When a non-reorderable sequence is made of a single non-reorderable code, Modifiers
            MAY remove the <link linkend="canreorder"><code>canReorder</code></link> attribute of that code or change its value to
              <code>yes</code>.</para>
        </listitem>
        <listitem>
          <para>Modifiers MUST NOT delete inline codes that have their attribute <link linkend="candelete"><code>canDelete</code></link> set to <code>no</code>.</para>
        </listitem>

        <listitem>
          <para>Modifiers MUST NOT replicate inline codes that have their attribute <link linkend="cancopy"><code>canCopy</code></link>
            set to <code>no</code>.</para>
        </listitem>


      </itemizedlist>
      <note>
        <para>Conformance of codes to <link linkend="editinghints">Editing Hints</link> Processing
          Requirements within translations can only be checked on existing <link linkend="target"><code>&lt;target></code></link> elements, i.e. non-conformance is not reported on
            <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> elements without <link linkend="target"><code>&lt;target></code></link> children.</para>
      </note>

    </section>
  </section>

  <section id="annotations">
    <title>Annotations</title>

    <para>An annotation is an element that associates a section of the content with some metadata
      information.</para>

    <para>Annotations MAY be created by an Extractor that generated the initial XLIFF document, or
      by any other Modifier or Enricher later in the process. For example, after an Extractor
      creates the document, an Enricher can annotate the source content with terminological
      information.</para>

    <para>Annotations are represented using either the <link linkend="mrk"><code>&lt;mrk></code></link> element, or the pair of <link linkend="sm"><code>&lt;sm></code></link> and
        <link linkend="em"><code>&lt;em></code></link>
      elements.</para>

    <section id="annotationTypes">
      <title>Type of Annotations</title>

      <para>There are several pre-defined types of annotation and definition of <link linkend="customAnnotation">custom types</link> is also allowed.</para>

      <section id="translateAnnotation">
        <title>Translate Annotation</title>

        <para>This annotation is used to indicate whether a span of content is translatable or
          not.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <link linkend="id"><code>id</code></link> attribute is REQUIRED</para>
          </listitem>

          <listitem>
            <para>The <link linkend="translate"><code>translate</code></link> attribute is REQUIRED and set to <code>yes</code>
              or <code>no</code></para>
          </listitem>

          <listitem>
            <para>The <link linkend="type"><code>type</code></link> attribute is OPTIONAL and set to <code>generic</code>
              (this is the default value)</para>
          </listitem>
        </itemizedlist>

        <para>For example:</para>

        <programlisting format="linespecific">
He saw his &lt;mrk id="m1" translate="no">doppelgänger&lt;/mrk>.</programlisting>

        <note>
          <para>This annotation overrides the <link linkend="translate"><code>translate</code></link> attribute set or inherited at the
              <link linkend="unit"><code>&lt;unit></code></link> level.</para>
        </note>

        <note>
          <para>The <link linkend="translate"><code>translate</code></link> attribute can also be used at the same time as
            another type of annotation. For example:</para>

          <programlisting format="linespecific">
He saw his &lt;mrk id="m1" translate="no" type="term">doppelgänger
&lt;/mrk>.</programlisting>
        </note>
      </section>

      <section id="termAnnotation">
        <title>Term Annotation</title>

        <para>This annotation is used to mark up a term in the content, and possibly associate
          information to it.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <link linkend="id"><code>id</code></link> attribute is REQUIRED</para>
          </listitem>

          <listitem>
            <para>The <link linkend="type"><code>type</code></link> attribute is REQUIRED and set to
              <code>term</code></para>
          </listitem>

          <listitem>
            <para>The <link linkend="value"><code>value</code></link> attribute is OPTIONAL and contains a short definition
              of the term</para>
          </listitem>

          <listitem>
            <para>The <link linkend="ref"><code>ref</code></link> attribute is OPTIONAL and contains a URI pointing to
              information on the term</para>
          </listitem>

          <listitem>
            <para>The <link linkend="translate"><code>translate</code></link> attribute is OPTIONAL and set to <code>yes</code>
              or <code>no</code></para>
          </listitem>
        </itemizedlist>


        <para>For example:</para>

        <programlisting format="linespecific">
&lt;file id="f-t_a">
  &lt;unit id="1">
    &lt;segment>
      &lt;source>He is my &lt;mrk id="m1" type="term"
          ref="http://dbpedia.org/page/Doppelgänger">
          doppelgänger&lt;/mrk>. &lt;/source>
    &lt;/segment>
  &lt;/unit>
&lt;/file>
 </programlisting>
      </section>


      <section id="commentAnnotation">
        <title>Comment Annotation</title>

        <para>This annotation is used to associate a span of content with a comment.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <link linkend="id"><code>id</code></link> attribute is REQUIRED</para>
          </listitem>

          <listitem>
            <para>The <link linkend="type"><code>type</code></link> attribute is REQUIRED and set to
              <code>comment</code></para>
          </listitem>

          <listitem>
            <para>If the <link linkend="value"><code>value</code></link> attribute is present it contains the text of the
              comment. If and only if the <link linkend="value"><code>value</code></link> attribute is not present, the <link linkend="ref"><code>ref</code></link>
              attribute MUST be present and contain the URI of a <link linkend="note"><code>&lt;note></code></link> element within the same enclosing <link linkend="unit"><code>&lt;unit></code></link> element that holds the comment.</para>
          </listitem>

          <listitem>
            <para>The <link linkend="translate"><code>translate</code></link> attribute is OPTIONAL and set to <code>yes</code>
              or <code>no</code></para>
          </listitem>
        </itemizedlist>

        <para>For example, here with the <code><link linkend="value"><code>value</code></link></code> attribute:</para>

        <programlisting format="linespecific">
The &lt;mrk id="m1" type="comment"
 value="Possible values: Printer or Stacker">&lt;ph id="1" dataRef="d1"/>
&lt;/mrk>
has been enabled.</programlisting>

        <para>And here using the <link linkend="ref"><code>ref</code></link> attribute:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;notes>
    &lt;note id="n1" appliesTo="target">Please check the translation for
        'namespace'. One also can use 'espace de nom', but I think most
        technical manuals use the English term.&lt;/note>
  &lt;/notes>
  &lt;segment>
    &lt;source>You use your own namespace.&lt;/source>
    &lt;target>Vous pouvez utiliser votre propre &lt;mrk id="m1"
        type="comment" ref="#n=n1">namespace&lt;/mrk>.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>
      </section>

      <section id="customAnnotation">
        <title>Custom Annotation</title>

        <para>The <link linkend="mrk"><code>&lt;mrk></code></link> element can be used to implement custom
          annotations.</para>

        <para>A custom annotation MUST NOT provide the same functionality as a pre-defined
          annotation.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <link linkend="id"><code>id</code></link> attribute is REQUIRED</para>
          </listitem>

          <listitem>
            <para>The <link linkend="type"><code>type</code></link> attribute is REQUIRED and set to a unique user-defined
              value.</para>
          </listitem>

          <listitem>
            <para>The <link linkend="translate"><code>translate</code></link> attribute is OPTIONAL and set to <code>yes</code>
              or <code>no</code></para>
          </listitem>

          <listitem>
            <para>The use and semantics of the <link linkend="value"><code>value</code></link> and <link linkend="ref"><code>ref</code></link>
              attributes are user-defined.</para>
          </listitem>
        </itemizedlist>

        <para>For example:</para>

        <programlisting format="linespecific">
One of the earliest surviving works of literature is
&lt;mrk id="m1" type="myCorp:isbn" value="978-0-14-44919-8">The 
Epic of Gilgamesh&lt;/mrk>.</programlisting>
      </section>
    </section>

    <section id="splittingAnnotations">
      <title>Splitting Annotations</title>

      <para>Annotations can overlap spanning inline codes or other annotations. They also can be
        split by segmentation. Because of this, a single annotation span can be represented using a
        pair of <link linkend="sm"><code>&lt;sm></code></link> and <link linkend="em"><code>&lt;em></code></link> elements instead of a single <link linkend="mrk"><code>&lt;mrk></code></link>
        element.</para>

      <para>For example, one can have the following content:</para>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Sentence A. &lt;mrk id="m1" type="comment" value="Comment for B
        and C">Sentence B. Sentence C.&lt;/mrk>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

      <para>After a user agent performs segmentation, the annotation element <link linkend="mrk"><code>&lt;mrk></code></link> is
        changed to a pair of <link linkend="sm"><code>&lt;sm></code></link> and <link linkend="em"><code>&lt;em></code></link> elements:</para>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Sentence A. &lt;/source>
  &lt;/segment>
  &lt;segment>
    &lt;source>&lt;sm id="m1" type="comment" value="Comment for B and C"/>
        Sentence B. &lt;/source>
  &lt;/segment>
  &lt;segment>
    &lt;source>Sentence C.&lt;em startRef="m1"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>
    </section>
  </section>

  <section id="subflowsdesc">
    <title>Sub-Flows</title>

    <para>A sub-flow is a section of text embedded inside an inline code, or inside another section
      of text.</para>

    <para>For example, the following HTML content includes two sub-flows: The first one is the value
      of the <code>title</code> attribute ("<code>Start button</code>"), and the second one is the
      value of the <code>alt</code> attribute ("<code>Click here to start!</code>"):</para>

    <programlisting format="linespecific">
Click to start: &lt;img title="Start button"
 src="btnStart.png" alt="Click here to start!"/></programlisting>

    <para>Another example is the following DITA content where the footnote "<code>A Palouse horse is
        the same as an Appaloosa.</code>" is defined at the middle of a sentence:</para>

    <programlisting format="linespecific">
Palouse horses&lt;fn>A Palouse horse is the same as
 an Appaloosa.&lt;/fn> have spotted coats.</programlisting>

    <para>In XLIFF, each sub-flow is stored in its own <link linkend="unit"><code>&lt;unit></code></link> element, and the <code><link linkend="subflows"><code>subFlows</code></link></code> attribute is used to indicate the location of the
      embedded content.</para>

    <para>Therefore the HTML content of the example above can be represented like below:</para>

    <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Start button&lt;/source>
  &lt;/segment>
&lt;/unit>
&lt;unit id="2">
  &lt;segment>
    &lt;source>Click here to start!&lt;/source>
  &lt;/segment>
&lt;/unit>
&lt;unit id="3">
  &lt;segment>
    &lt;source>Click to start: &lt;ph id="1" subFlows="1 2"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
 </programlisting>

    <itemizedlist>
      <title>Constraints</title>
      <listitem>
        <para>An inline code containing or delimiting one or more sub-flows MUST have an attribute
            <link linkend="subflows"><code>subFlows</code></link> that holds a list of the identifiers of the <link linkend="unit"><code>&lt;unit></code></link> elements where the sub-flows are stored.</para>
      </listitem>
      <listitem>
        <para>Sub-flows MUST be in the same <link linkend="file"><code>&lt;file></code></link> element as the <link linkend="unit"><code>&lt;unit></code></link> element from which they are referenced.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <title>Processing Requirements</title>

      <listitem>
        <para>Extractors SHOULD store each sub-flow in its own <link linkend="unit"><code>&lt;unit></code></link> element.</para>
      </listitem>



      <listitem>
        <para>Extractors MAY order the <link linkend="unit"><code>&lt;unit></code></link> elements of the sub-flows and the
            <link linkend="unit"><code>&lt;unit></code></link> element, from where the sub-flows are referenced,
          as they see fit. </para>
      </listitem>
    </itemizedlist>
    <note>
      <para>Note that the static structure encoded by <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link>, and <link linkend="unit"><code>&lt;unit></code></link> elements is principally immutable in XLIFF Documents
        and hence the unit order initially set by the Extractor will be preserved throughout the
        roundtrip even in the special case of sub-flows.</para>
    </note>
  </section>

  <section>
    <title>White Spaces</title>

    <para>While white spaces can be significant or insignificant in the original format, they are
      always treated as significant when stored as original data in XLIFF. See the definition of the
        <link linkend="data"><code>&lt;data></code></link> element.</para>

    <itemizedlist>
      <title>Processing Requirements</title>

      

      <listitem>
        <para>For the inline content and all non empty inline elements: The white spaces MUST be
          preserved if the value for <code>xml:space</code> set or inherited at the enclosing <link linkend="unit"><code>&lt;unit></code></link> level is <code>preserve</code>, and they MAY be
          preserved if the value is <code>default</code>.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="BiDi">
    <title>Bidirectional Text</title>

    <para>Text directionality in XLIFF content is defined by inheritance. Source and target content
      can have different directionality.</para>

    <para>The initial directionality for both the source and the target content is defined in the
        <link linkend="file"><code>&lt;file></code></link> element, using the OPTIONAL attributes <link linkend="srcdir"><code>srcDir</code></link> for
      the source and <link linkend="trgdir"><code>trgDir</code></link> for the target. The default value for both attributes is
        <code>auto</code>.</para>

    <para>The <link linkend="group"><code>&lt;group></code></link> and <link linkend="unit"><code>&lt;unit></code></link> elements also have the two OPTIONAL
      attributes <link linkend="srcdir"><code>srcDir</code></link> and <link linkend="trgdir"><code>trgDir</code></link>. The default value of the <link linkend="srcdir"><code>srcDir</code></link> is
      inherited from the value of the <link linkend="srcdir"><code>srcDir</code></link> attribute of the respective parent element.
      The default value of the <link linkend="trgdir"><code>trgDir</code></link> attribute is inherited from the value of the <link linkend="trgdir"><code>trgDir</code></link>
      attribute of the respective parent element.</para>

    <para>The <link linkend="pc"><code>&lt;pc></code></link>, <link linkend="sc"><code>&lt;sc></code></link>, and isolated <link linkend="ec"><code>&lt;ec></code></link> elements have an OPTIONAL attribute <link linkend="dir"><code>dir</code></link> with a value
        <code>ltr</code>, <code>rtl</code>, or <code>auto</code>. The default value is inherited
      from the parent <link linkend="pc"><code>&lt;pc></code></link> element. In case the inline element is a child of a
        <link linkend="source"><code>&lt;source></code></link> element, the default value is inherited from the <link linkend="srcdir"><code>srcDir</code></link> value
      of the enclosing <link linkend="unit"><code>&lt;unit></code></link> element. In case the inline element is a child of a
        <link linkend="target"><code>&lt;target></code></link> element, the default value is inherited from the <link linkend="trgdir"><code>trgDir</code></link> value
      of the enclosing <link linkend="unit"><code>&lt;unit></code></link> element.</para>
    <warning>
      <para> While processing isolated <link linkend="ec"><code>&lt;ec></code></link> elements with explicitly set directionality, please beware
        that unlike directionality set on the <link linkend="pc"><code>&lt;pc></code></link> and <link linkend="sc"><code>&lt;sc></code></link> , this
        method decreases the stack level as per [UAX #9].</para>
    </warning>
    <para>In addition, the <link linkend="data"><code>&lt;data></code></link> element has an OPTIONAL attribute <link linkend="dir"><code>dir</code></link> with a value
        <code>ltr</code>, <code>rtl</code>, or <code>auto</code> that is not inherited. The default
      value is <code>auto</code>.</para>

    <para>Directionality of source and target text contained in the <link linkend="source"><code>&lt;source></code></link> and <link linkend="target"><code>&lt;target></code></link> elements is fully governed by <link linkend="uax9">[UAX #9]</link>, whereas explicit XLIFF-defined
      structural and directionality markup is a higher-level protocol in the sense of <link linkend="uax9">[UAX #9]</link>. The XLIFF-defined value
        <code>auto</code> determines the directionality based on the first strong directional
      character in its scope and XLIFF-defined inline directionality markup behaves exactly as
      Explicit Directional Isolate Characters, see <link linkend="uax9">[UAX #9]</link>, <ulink url="http://www.unicode.org/reports/tr9/#Directional_Formatting_Characters">http://www.unicode.org/reports/tr9/#Directional_Formatting_Characters</ulink>.</para>
    <note>
      <para>Note that this specification does not define explicit markup for inline directional
        Overrides or Embeddings; in case those are needed. Extractors and Modifiers will need to use
        [UAX #9] defined Directional Formatting Characters.</para>
      <para>For instance, HTML elements <code>&lt;bdi></code> and <code>&lt;bdo></code> need both
        extracted as a <link linkend="pc"><code>&lt;pc></code></link> or <link linkend="sc"><code>&lt;sc></code></link> / <link linkend="ec"><code>&lt;ec/></code></link> pair with the <link linkend="dir"><code>dir</code></link> attribute set
        respectively.</para>
      <para>All XLIFF defined inline directionality markup isolates and <code>&lt;sc></code> /
          <code>&lt;ec/></code> isolated spans can reach over segment (but not unit) boundaries.
        This needs to be taken into account when splitting or joining segments (see <link linkend="segmentationModification">Segmentation Modification</link>) that contain inline directionality markup. Albeit It
        is not advisable to split segments, so that corresponding inline directionality markup start
        and end would fall into different segments, such a situation is not too confusing. If this
        happens, the "watertight" BiDi box will simply span two or more segments. This is not too
        confusing because no XLIFF defined directionality markup is allowed on <link linkend="source"><code>&lt;source></code></link>, <link linkend="target">&lt;target></link>, or <link linkend="segment">&lt;segment></link>,
        so all higher level protocol inheritance of directionality in such cases is from <link linkend="unit">&lt;unit></link> or higher.
      </para>
    </note>

  </section>

  <section id="contentmodification">
    <title>Target Content Modification</title>

    <para>This section defines the rules Writers need to follow when working with the target content
      of a given segment in order to provide interoperability throughout the whole process.</para>

    <para>The Extractor MAY create the initial target content as it sees fit.</para>

    <para>The Merger is assumed to have the same level of processing and native format knowledge as
      the Extractor. Providing an interoperable way to convert native documents into XLIFF with one
      tool and back to the native format with another tool without the same level of knowledge is
      outside the scope of this specification.</para>

    <para>The Writers modifying the target content of an XLIFF Document between the Extractor and
      the Merger ensure interoperability by applying specific rules. These rules are separated into
      two cases: When there is an existing target and when there is no existing target.</para>

    <section id="contentmodificationwithouttarget">
      <title>Without an Existing Target</title>

      <para>When there is no existing target, the processing requirements for a given segment are
        the following:</para>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para>Writers MAY leave the segment without a target.</para>
        </listitem>

        <listitem>
          <para>Modifiers MAY create a new target as follows:</para>

          <itemizedlist>
            <listitem>
              <para>Modifiers MAY add translation of the source text.</para>
            </listitem>

            <listitem>
              <para>Modifiers MUST put all <link linkend="editinghints">non-removable</link> inline
                codes in the target.</para>
            </listitem>

            <listitem>
              <para>Modifiers MUST preserve the order of all the <link linkend="editinghints">non-reorderable</link> inline codes.</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY put any <link linkend="editinghints">removable</link> inline code
                in the target.</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY add inline codes.</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY add or remove annotations.</para>
            </listitem>
            <listitem>
              <para>Modifiers MAY convert any <link linkend="pc"><code>&lt;pc></code></link> element into a pair of <link linkend="sc"><code>&lt;sc></code></link> and <link linkend="ec"><code>&lt;ec></code></link> elements.</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY convert, if it is possible, any pair of <link linkend="sc"><code>&lt;sc></code></link> and <link linkend="ec"><code>&lt;ec></code></link> elements into a <link linkend="pc"><code>&lt;pc></code></link> element.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>

    <section id="contentmodificationwithtarget">
      <title>With an Existing Target</title>

      <para>When working with a segment with content already in the target, Writers MUST choose one
        of the three behaviors described below:</para>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para>Writers MAY leave the existing target unchanged.</para>
        </listitem>

        <listitem>
          <para>Modifiers MAY modify the existing target as follow:</para>

          <itemizedlist>
            <listitem>
              <para>Modifiers MAY add or modify translatable text.</para>
            </listitem>

            <listitem>
              <para>Writers MUST preserve all <link linkend="editinghints">non-removable</link>
                inline codes, regardless whether or not they exist in the source.</para>
            </listitem>

            <listitem>
              <para>Writers MUST preserve any <link linkend="editinghints">non-reorderable</link>
                inline codes in the existing target.</para>
            </listitem>

            <listitem>
              <para>Writers MUST NOT add any <link linkend="editinghints">non-reorderable</link>
                inline codes to the target.</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY remove any <link linkend="editinghints">removable</link> inline
                codes in the target.</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY add inline codes (including copying any <link linkend="editinghints">cloneable</link> inline codes of the existing
                target).</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY add or remove annotations.</para>
            </listitem>
            <listitem>
              <para>Modifiers MAY convert any <link linkend="pc"><code>&lt;pc></code></link> element into a pair of <link linkend="sc"><code>&lt;sc></code></link> and <link linkend="ec"><code>&lt;ec></code></link> elements.</para>
            </listitem>

            <listitem>
              <para>Modifiers MAY convert, if it is possible, any pair of <link linkend="sc"><code>&lt;sc></code></link> and <link linkend="ec"><code>&lt;ec></code></link> elements into a <link linkend="pc"><code>&lt;pc></code></link> element.</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Modifiers MAY delete the existing target and start over as if working without an
            existing target.</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section>
    <title>Content Comparison</title>

    <para>This specification defines two types of content equality:</para>

    <itemizedlist>
      <listitem>
        <para>Equality type A: Two contents are equal if their normalized forms are equal.</para>
      </listitem>

      <listitem>
        <para>Equality type B: Two contents are equal if, in their normalized forms and with all
          inline code markers replaced by the value of their <link linkend="equiv"><code>equiv</code></link>
          attributes, the resulting strings are equal.</para>
      </listitem>
    </itemizedlist>

    <para>A content is normalized when:</para>

    <itemizedlist>
      <listitem>
        <para>The text nodes are in Unicode Normalized Form C defined in the Unicode Annex #15:
          Unicode Normalization Forms <link linkend="uax15">[UAX            #15]</link>.</para>
      </listitem>

      <listitem>
        <para>All annotation markers are removed.</para>
      </listitem>

      <listitem>
        <para>All pairs of <link linkend="sc"><code>&lt;sc></code></link> and <link linkend="ec"><code>&lt;ec></code></link> elements that can be converted into a
            <link linkend="pc"><code>&lt;pc></code></link> element, are converted.</para>
      </listitem>

      <listitem>
        <para>All adjacent text nodes are merged into a single text node.</para>
      </listitem>

      <listitem>
        <para>For all the text nodes with the white space property set to <code>default</code>, all
          adjacent white spaces are collapsed into a single space.</para>
      </listitem>
    </itemizedlist>
  </section>
</section>
    <section id="segmentation">
  <title>Segmentation</title>

  <para>In the context of XLIFF, a segment is content which is either a unit of extracted text, or
    has been created from a unit of extracted text by means of a segmentation mechanism such as
    sentence boundary detection. For example, a segment can be a title, the text of a menu item, a
    paragraph or a sentence in a paragraph.</para>

  <para>In the context of XLIFF, other types representations sometimes called "segmentation" can be
    represented using annotations. For example: the terms in a segment can be identified and marked
    up using the <link linkend="termAnnotation">term      annotation</link>.</para>

  <para>XLIFF does not specify how segmentation is carried out, only how to represent its result.
    Material provisions regarding segmentation can be found for instance in the Segmentation Rules
    eXchange standard <link linkend="biblio_srx">[SRX]</link> or
      <link linkend="uax29">[UAX #29]</link>.</para>

  <section id="segmentationRepresentation">
    <title>Segments Representation</title>

    <para>In XLIFF each segment of processed content is represented by a <link linkend="segment"><code>&lt;segment></code></link> element.</para>

    <para>A <link linkend="unit"><code>&lt;unit></code></link> can comprise a single <link linkend="segment"><code>&lt;segment></code></link>.</para>

    <para>Each <link linkend="segment"><code>&lt;segment></code></link> element has one <link linkend="source"><code>&lt;source></code></link> element that contains the source content and one
      OPTIONAL <link linkend="target"><code>&lt;target></code></link> element that can be empty or contain the translation
      of the source content at a given state.</para>

    <para>Content parts between segments are represented with the <link linkend="ignorable"><code>&lt;ignorable></code></link> element, which has the same content model as
        <link linkend="segment"><code>&lt;segment></code></link>.</para>

    <para>For example:</para>

    <para><programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>First sentence.&lt;/source>
    &lt;target>Première phrase.&lt;/target>
  &lt;/segment>
  &lt;ignorable>
    &lt;source> &lt;/source>
  &lt;/ignorable>
  &lt;segment>
    &lt;source>Second sentence.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting></para>
  </section>

  <section id="segorder">
    <title>Segments Order</title>

    <para>Some Agents (e.g. aligner tools) can segment content, so that the target segments are not
      in the same order as the source segments.</para>

    <para>To be able to map order differences, the <link linkend="target"><code>&lt;target></code></link> element has an OPTIONAL <link linkend="order"><code>order</code></link> attribute
      that indicates its position in the sequence of segments (and inter-segments). Its value is an
      integer from 1 to N, where N is the sum of the numbers of the <link linkend="segment"><code>&lt;segment></code></link> and <link linkend="ignorable"><code>&lt;ignorable></code></link> elements within the given enclosing <link linkend="unit"><code>&lt;unit></code></link> element.</para>
    <warning>
      <para>When Writers set explicit <code><link linkend="order">order</link></code> on <link linkend="target"><code>&lt;target></code></link> elements, they have to check for conflicts with implicit
            <code><link linkend="order">order</link></code>,
        as <link linkend="target"><code>&lt;target></code></link> elements without explicit <code><link linkend="order">order</link></code> correspond to
        their sibling <link linkend="source"><code>&lt;source></code></link> elements. Beware that moving one <link linkend="target"><code>&lt;target></code></link> element is likely to cause a renumbering domino effect
        throughout the enclosing <link linkend="unit"><code>&lt;unit></code></link> element.</para>
    </warning>

    <para>For example, the following HTML documents have the same paragraph with three sentences in
      different order:<programlisting format="linespecific">
&lt;p lang='en'>Sentence A. Sentence B. Sentence C.&lt;/p>
</programlisting><programlisting format="linespecific">
&lt;p lang='fr'>Phrase B. Phrase C. Phrase A.&lt;/p>
</programlisting>The XLIFF representation of the content, after segmentation and alignment,
      would be:</para>

    <para><programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment id="1">
    &lt;source>Sentence A.&lt;/source>
    &lt;target order="5">Phrase A.&lt;/target>
  &lt;/segment>
  &lt;ignorable>
    &lt;source> &lt;/source>
  &lt;/ignorable>
  &lt;segment id="2">
    &lt;source>Sentence B.&lt;/source>
    &lt;target order="1">Phrase B.&lt;/target>
  &lt;/segment>
  &lt;ignorable>
    &lt;source> &lt;/source>
  &lt;/ignorable>
  &lt;segment id="3">
    &lt;source>Sentence C.&lt;/source>
    &lt;target order="3">Phrase C.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting></para>
  </section>

  <section id="segmentationModification">
    <title>Segmentation Modification</title>
    <para>When modifying segmentation of a <link linkend="unit"><code>&lt;unit></code></link>, Modifiers MUST meet the Constraints and
      follow the Processing Requirements defined below:</para>
    <itemizedlist>
      <title>Constraints</title>
      <listitem>
        <para>Integrity of the inline codes MUST be preserved. See the section on <link linkend="inlineCodes">Inline Codes</link> and on
            <link linkend="annotations">Annotations</link> for
          details.</para>
      </listitem>
      <listitem>
        <para>The entire source content of any one <link linkend="unit"><code>&lt;unit></code></link> element MUST remain logically unchanged: <link linkend="segment"><code>&lt;segment></code></link> elements or their data MUST NOT be moved or
          joined across units.</para>
      </listitem>
    </itemizedlist>
    <warning>
      <para>Note that when splitting or joining segments that have both source and target content it
        is advisable to keep the resulting segments linguistically aligned, which is likely to
        require human linguistic expertise and hence manual re-segmentation. If the linguistically
        correct alignment cannot be guaranteed, discarding the target content and retranslating the
        resulting source segments is worth considering.</para>
    </warning>

    <itemizedlist>
      <title>Processing Requirements</title>

      <listitem id="splittingSegments">
        <para>When the Modifiers perform a split operation:</para>
        <itemizedlist>
          <listitem>
            <para>Only <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> elements that have their <link linkend="canResegment"><code>canResegment</code></link> value resolved to <code>yes</code> MAY be
              split.</para>
          </listitem>
          <listitem>
            <para>All new <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> elements created and their <link linkend="source"><code>&lt;source></code></link> and <link linkend="target"><code>&lt;target></code></link> children MUST have the same attribute values
              as the original elements they were created from, as applicable, except for the <link linkend="id"><code>id</code></link> attributes
              and, possibly, for the <link linkend="order"><code>order</code></link>, <link linkend="state"><code>state</code></link> and <link linkend="substate"><code>subState</code></link> attributes.</para>
          </listitem>
          <listitem>
            <para>Any new <link linkend="id"><code>id</code></link> attributes MUST follow the <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link>
              <link linkend="id"><code>id</code></link>
              constraints.</para>
          </listitem>
          <listitem>
            <para>If there was a target content in the original segment and if the <link linkend="state"><code>state</code></link>
              attribute of the original segment was not <code>initial</code>, the <link linkend="state"><code>state</code></link>
              attributes of the segments resulting from the split (and possibly their corresponding
                <link linkend="substate"><code>subState</code></link> attributes) MAY be changed to reflect the fact that
              the target content MAY need to be verified as the new segmentation MAY have
              desynchronized the alignment between the source and target contents.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem id="joiningSegments">
        <para>When the Modifiers perform a join operation:</para>
        <itemizedlist>
          <listitem>
            <para>Only <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> elements that have their <link linkend="canResegment"><code>canResegment</code></link> value resolved to <code>yes</code> MAY be join
              with other elements.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>When the Modifiers or Mergers perform a join operation:</para>
        <itemizedlist>
          <listitem>
            <para>Two elements (<link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link>) MUST NOT be joined if their <link linkend="target"><code>&lt;target></code></link> have resolved <link linkend="order"><code>order</code></link>
              values that are not consecutive.</para>
          </listitem>
          <listitem>
            <para>The attributes of the elements to be joined (<link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link>) and the attributes of their <link linkend="source"><code>&lt;source></code></link> and <link linkend="target"><code>&lt;target></code></link> MUST be carried over in the resulting joined
              elements.</para>
          </listitem>
          <listitem>
            <para>If attributes of elements to be joined (<link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link>) differ, or if the attributes of their <link linkend="source"><code>&lt;source></code></link> or <link linkend="target"><code>&lt;target></code></link> differ, the resulting joined elements MUST
              comply with following rules:</para>
            <itemizedlist>
              <listitem>
                <para>If the <link linkend="state"><code>state</code></link> attributes of the <link linkend="segment"><code>&lt;segment></code></link> elements differ: the <link linkend="state"><code>state</code></link>
                  attribute of the joined <link linkend="segment"><code>&lt;segment></code></link> MUST be set to the
                  "earliest" of the values specified in the original <link linkend="segment"><code>&lt;segment></code></link> elements. The sequence of <link linkend="state"><code>state</code></link>
                  values are defined in the following order: 1: <code>initial</code>, 2:
                    <code>translated</code>, 3: <code>reviewed</code>, and 4:
                  <code>final</code>.</para>
              </listitem>
              <listitem>
                <para>The <link linkend="substate"><code>subState</code></link> attribute MUST be the one associated with the
                    <link linkend="state"><code>state</code></link> attribute selected to be used in the joined <link linkend="segment"><code>&lt;segment></code></link>. If no <link linkend="substate"><code>subState</code></link> attribute is associated with that <link linkend="state"><code>state</code></link>, the joined <link linkend="segment"><code>&lt;segment></code></link> MUST NOT have a <link linkend="substate"><code>subState</code></link>.</para>
              </listitem>
              <listitem>
                <para>If the <link linkend="xml_space"><code>xml:space</code></link> attributes differ: The <link linkend="source"><code>&lt;source></code></link> and <link linkend="target"><code>&lt;target></code></link> of the joined element MUST be set to
                    <code>xml:space="preserve"</code>.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem id="joiningOrSplittingSegments">
        <para>When the Modifiers or Mergers perform a join or a split operation:</para>
        <itemizedlist>
          <listitem>
            <para>If any <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> element of the <link linkend="unit"><code>&lt;unit></code></link> had a <link linkend="target"><code>&lt;target></code></link> child with an <link linkend="order"><code>order</code></link>
              attribute prior to the segmentation modification, the <link linkend="target"><code>&lt;target></code></link> child of all <link linkend="segment"><code>&lt;segment></code></link> and <link linkend="ignorable"><code>&lt;ignorable></code></link> elements in the <link linkend="unit"><code>&lt;unit></code></link> MUST be examined and if necessary their <link linkend="order"><code>order</code></link>
              attributes updated to preserve the ordering of the target content prior the
              segmentation modification.</para>
          </listitem>
        </itemizedlist>
      </listitem>

    </itemizedlist>


  </section>
  <section role="informative">
    <title>Best Practice for Mergers</title>

    <para>Since a typical simple corporate implementation of XLIFF 2 is a localization tool that is
      at the same time an Extractor and a Merger with the full knowledge of the extraction
      mechanism, the community requested a non-normative best practice for merging after an XLIFF
      Round-trip.</para>
    <para>First of all, it needs to be noted that Mergers are not advised to rely on their knowledge
      of the extraction mechanism in terms of <link linkend="segmentation">segmentation</link>.
      Modifiers are free to <link linkend="segmentationModification">change segmentation</link>
      during the roundtrip and even <link linkend="segorder">to change order of target content held
        in different segments of the same unit</link>. Therefore, it can be advised as a best
      practice before merging to look for all segments within each unit, even and especially when
      the Extractor had created only one segment per unit.</para>
    <para>When joining segments, Mergers need to observe all <emphasis>Processing
        Requirements</emphasis> for <link linkend="joiningSegments">joining segments</link> and
        <link linkend="joiningOrSplittingSegments"> joining or splitting segments</link></para>
    <para>When joining segments it can happen that not all <link linkend="segment"><code>&lt;segment></code></link> or <link linkend="ignorable"><code>&lt;ignorable></code></link> elements actually have their <link linkend="target"><code>&lt;target></code></link> element children. This situation can be legal depending
      on a specific workflow set up. The <link linkend="target"><code>&lt;target></code></link> child within an <link linkend="ignorable"><code>&lt;ignorable></code></link> element is always optional, but at the same can be
      created any time by simply copying the content of the sibling <link linkend="source"><code>&lt;source></code></link>, see <link linkend="contentmodificationwithouttarget">Content Modification Without Target</link>.
      The presence of <link linkend="target"><code>&lt;target></code></link> children can be better governed in <link linkend="segment"><code>&lt;segment></code></link> elements that have the <link linkend="state"><code>state</code></link> attribute.
      The <link linkend="state"><code>state</code></link>
      attribute is strictly optional with the default <code>initial</code>, yet it is advisable for
      a corporate localization operation to request that their service providers progress that
      attribute through <code>translated</code> and <code>reviewed</code> to <code>final</code>.
      This attribute cannot be progressed from the <code>initial</code> state without a <link linkend="target"><code>&lt;target></code></link> child and all violations of <link linkend="editinghints">Editing Hints</link> will become
      validation errors only in the <code>final</code> state. Usage of <link linkend="state"><code>state</code></link> also allows
      for fine-tuning of a specific workflow <emphasis>State Machine</emphasis> with the dependent
        <link linkend="substate"><code>subState</code></link> attribute. With the attribute <link linkend="substate"><code>subState</code></link>,
      implementers can create an arbitrary number of private state machine under their prefix
      authorities. It is advisable to register such authority prefixes with the XLIFF TC and publish
      their documentation.</para>
    <para>When Mergers need to perform the merge in a non-final state, when the presence of targets
      cannot be guaranteed, they are free to create preliminary targets again following the <link linkend="contentmodificationwithouttarget">Processing        Requirements for Content Modification Without Target</link></para>
  </section>

</section>
    <section id="extensions">
    <title>Extension Mechanisms</title>
    <para>XLIFF 2.2 offers two mechanisms for storing custom data in an XLIFF document:</para>
    <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
            <para>Using the <remark>Metadata module</remark> for storing custom data in
                elements defined by the official XLIFF specification.</para>
        </listitem>
        <listitem>
            <para>Using the standard XML namespace mechanism for storing data in elements or
                attributes defined in a custom XML Schema.</para>
        </listitem>
    </orderedlist>
    <para>Both mechanisms can be used simultaneously.</para>
    <section>
        <title>Extension Points</title>
        <para>The following XLIFF Core elements allow storing custom data in <remark><code>&lt;mda:metadata></code></remark> elements or in elements from a custom
            XML namespace:</para>
        <simplelist type="vert">
            <member>- <link linkend="xliff"><code>&lt;xliff></code></link></member>
            <member>- <link linkend="file"><code>&lt;file></code></link></member>
            <member>- <link linkend="group"><code>&lt;group></code></link></member>
            <member>- <link linkend="unit"><code>&lt;unit></code></link></member>
        </simplelist>
        <para>The following XLIFF Core elements accept custom attributes:</para>
        <simplelist type="vert">
            <member>- <link linkend="xliff"><code>&lt;xliff></code></link></member>
            <member>- <link linkend="file"><code>&lt;file></code></link></member>
            <member>- <link linkend="group"><code>&lt;group></code></link></member>
            <member>- <link linkend="unit"><code>&lt;unit></code></link></member>
            <member>- <link linkend="note"><code>&lt;note></code></link></member>
            <member>- <link linkend="mrk"><code>&lt;mrk></code></link></member>
            <member>- <link linkend="sm"><code>&lt;sm></code></link></member>
        </simplelist>
        <section>
            <title>Extensibility of XLIFF Modules</title>
            <para>For extensibility of XLIFF Modules please refer to the relevant Module
                Sections.</para>
        </section>

    </section>

    <section id="ext-constraints">
        <title>Constraints</title>
        <itemizedlist>
            <listitem>
                <para>When using identifiers, an extension MUST use either an attribute named
                        <code>id</code> or the attribute <code>xml:id</code> to specify them.</para>
            </listitem>
            <listitem>
                <para>Extensions identifiers MUST be unique within their immediate <link linkend="file"><code>&lt;file></code></link>, <link linkend="group"><code>&lt;group></code></link> or <link linkend="unit"><code>&lt;unit></code></link> enclosing element.</para>
            </listitem>
            <listitem>
                <para>Identifier values used in extensions MUST be of type <code>xs:NMTOKEN</code>
                    or compatible with <code>xs:NMTOKEN</code> (e.g. <code>xs:NAME</code> and
                        <code>xs:ID</code> are compatible).</para>
            </listitem>
        </itemizedlist>
        <para>These constraints are needed for the <link linkend="fragid">fragment identification mechanism</link>.</para>
    </section>

    <section>
        <title>Processing Requirements</title>
        <itemizedlist>
            <listitem>
                <para>A user extension, whether implemented using <remark><code>&lt;mda:metadata></code></remark> or using a custom namespace,
                    MUST NOT provide the same functionality as an existing XLIFF core or module
                    feature, however it MAY complement an extensible XLIFF core feature or module
                    feature or provide a new functionality at the provided extension points.</para>
            </listitem>

            <listitem>
                <para>Mergers MUST NOT rely on custom namespace extensions, other than the ones
                    possibly defined in <link linkend="skeleton"><code>&lt;skeleton></code></link>, to create the
                    translated version of the original document. </para>
            </listitem>

            <listitem>
                <para>Writers that do not support a given custom namespace based user extension
                    SHOULD preserve that extension without modification.</para>
            </listitem>
        </itemizedlist>
    </section>
</section>

</section>

  <section id="Conformance">
    <title>Conformance</title>

    <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem id="DocumentConformance">
            <orderedlist continuation="restarts" inheritnum="ignore">
                <title> Document Conformance</title>
                <listitem>
                    <para>XLIFF is an XML vocabulary, therefore conformant XLIFF Documents MUST be
                        well formed and valid <link linkend="bib_XML">[XML]</link> documents.</para>
                </listitem>
                <listitem>

                    <para>Conformant XLIFF documents MUST be valid instances of the official Core
                        XML Schema (<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/xliff_core_2.2.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/xliff_core_2.2.xsd</ulink>) that is a part of this
                        multipart Work Product.</para>
                </listitem>
                <listitem>

                    <para> As not all aspects of the XLIFF specification can be expressed in terms
                        of XML Schemas, conformant XLIFF documents MUST also comply with all
                        relevant elements and attributes definitions, normative usage descriptions,
                        and Constraints specified in this specification document.</para>
                </listitem>
                <listitem>
                    <para>XLIFF documents MAY contain custom extensions, as defined in the <link linkend="extensions">Extension Mechanisms</link> section. </para>
                </listitem>
            </orderedlist>
        </listitem>
        <listitem id="ApplicationConformance">
            <orderedlist continuation="restarts" inheritnum="ignore">
                <title> Application Conformance</title>
                <listitem>
                    <para>XLIFF Writers MUST create conformant XLIFF Documents to be considered
                        XLIFF compliant.</para>
                </listitem>
                <listitem>
                    <para> Agents processing conformant XLIFF Documents that contain custom
                        extensions are not REQUIRED to understand and process non-XLIFF elements or
                        attributes. However, conformant applications SHOULD preserve existing custom
                        extensions when processing conformant XLIFF documents, provided that the
                        elements that contain custom extensions are not removed according to XLIFF
                        Processing Requirements or the extension's own processing
                        requirements.</para>
                </listitem>
                <listitem>
                    <para>All Agents MUST comply with Processing Requirements for otherwise
                        unspecified Agents or without a specifically set target Agent.</para>
                </listitem>

                <listitem>
                    <para> Specialized Agents defined in this specification - this is Extractor,
                        Merger, Writer, Modifier, and Enricher Agents - MUST comply with the
                        Processing Requirements targeting their specifically defined type of Agent
                        on top of Processing Requirements targeting all Agents as per point c.
                        above.</para>
                </listitem>
                <listitem>
                    <para>XLIFF is a format explicitly designed for exchanging data among various
                        Agents. Thus, a conformant XLIFF application MUST be able to accept XLIFF
                        Documents it had written after those XLIFF Documents were Modified or
                        Enriched by a different application, provided that:</para>
                    <orderedlist continuation="restarts" inheritnum="ignore">
                        <listitem>
                            <para>The processed files are conformant XLIFF Documents,</para>
                        </listitem>
                        <listitem>
                            <para>in a state compliant with all relevant Processing
                                Requirements.</para>
                        </listitem>
                    </orderedlist>

                </listitem>


            </orderedlist>
        </listitem>
        <listitem>
            <orderedlist continuation="restarts" inheritnum="ignore">
                <title> Backwards Compatibility</title>
                <listitem>
                    <para>Conformant applications are REQUIRED to support XLIFF 2.0, 2.1 and 2.2.</para>
                </listitem>
                <listitem>
                    <para>Conformant applications are NOT REQUIRED to support XLIFF 1.2 or previous
                        versions. </para>
                </listitem>
            </orderedlist>
        </listitem>
    </orderedlist>

    <note>
        <para>XLIFF documents conformant to this specification are not and cannot be conformant to
            XLIFF 1.2 or earlier versions. If an application needs to support for whatever business
            reason both XLIFF 2.x and XLIFF 1.2 or earlier, these will need to be supported as
            separate functionalities. </para>
    </note>
</section>

  
  <appendix id="references">
    <title>References</title>

    <para>This appendix contains the normative and informative references that are used in this
        document. While any hyperlinks included in this appendix were valid at the time of
        publication, OASIS cannot guarantee their long-term validity. </para>

    <section>
        <title>Normative References</title>

        <para>The following documents are referenced in such a way that some or all of their content
            constitutes requirements of this document.</para>

        <bibliography>
            <title/>
            
            <bibliomixed id="rfc2119"><abbrev>RFC 2119</abbrev> (BCP 14) S. Bradner, <title>Key
                words for use in RFCs to Indicate Requirement Levels</title>, <citetitle>
                    <ulink url="https://www.rfc-editor.org/rfc/rfc2119">https://www.rfc-editor.org/rfc/rfc2119</ulink>
                </citetitle> IETF (Internet Engineering Task Force) RFC 2119, March
                1997.</bibliomixed>
            
            <bibliomixed id="rfc8174"><abbrev>RFC 8174</abbrev> B. Leiba, <title>Ambiguity of
                Uppercase vs Lowercase in RFC 2119 Key Words</title>, <citetitle><ulink url="https://www.rfc-editor.org/rfc/rfc8174">https://www.rfc-editor.org/rfc/rfc8174</ulink></citetitle></bibliomixed>
            
            <bibliomixed id="bcp47"><abbrev>BCP 47</abbrev> M. Davis, <title>Tags for Identifying
                    Languages</title>, <citetitle>
                    <ulink url="https://www.rfc-editor.org/info/rfc5646">https://www.rfc-editor.org/info/rfc5646</ulink>
                </citetitle> IETF (Internet Engineering Task Force).</bibliomixed>

            <bibliomixed id="HTML5"><abbrev>HTML5</abbrev> Ian Hickos, Robin Berjon, Steve Faulkner,
                Travis Leithead, Erika Doyle Navara, Edward O'Connor, Silvia Pfeiffer <title>HTML5.
                    A vocabulary and associated APIs for HTML and XHTML</title>, <citetitle>
                    <ulink url="http://www.w3.org/TR/html5/">http://www.w3.org/TR/html5/</ulink>
                </citetitle> W3C Recommendation 28 October 2014.</bibliomixed>

            <bibliomixed id="ITS20"><abbrev>ITS</abbrev> David Filip, Shaun McCance, Dave Lewis,
                Christian Lieske, Arle Lommel, Jirka Kosek, Felix Sasaki, Yves Savourel
                    <title>Internationalization Tag Set (ITS) Version 2.0</title>, <citetitle>
                    <ulink url="http://www.w3.org/TR/its20/">http://www.w3.org/TR/its20/</ulink>
                </citetitle> W3C Recommendation 29 October 2013.</bibliomixed>

            <bibliomixed id="bib_datetime"><abbrev>NOTE-datetime</abbrev> M. Wolf, C. Wicksteed,
                    <title>Date and Time Formats</title>, <citetitle>
                    <ulink url="http://www.w3.org/TR/NOTE-datetime">http://www.w3.org/TR/NOTE-datetime</ulink>
                </citetitle> W3C Note, 15th September 1997.</bibliomixed>

            <bibliomixed id="rfc3987"><abbrev>RFC 3987</abbrev> M. Duerst and M. Suignard,
                    <title>Internationalized Resource Identifiers (IRIs)</title>, <citetitle>
                    <ulink url="https://www.ietf.org/rfc/rfc3987.txt">https://www.ietf.org/rfc/rfc3987.txt</ulink>
                </citetitle> IETF (Internet Engineering Task Force) RFC 3987, January
                2005.</bibliomixed>

            <bibliomixed id="rfc7303"><abbrev>RFC 7303</abbrev> H. Thompson and C. Lilley,
                    <title>XML Media Types</title>, <citetitle>
                    <ulink url="https://www.tools.ietf.org/html/rfc7303">
                        https://www.tools.ietf.org/html/rfc7303</ulink>
                </citetitle> IETF (Internet Engineering Task Force) RFC 7303, July
                2014.</bibliomixed>

            <bibliomixed id="uax9"><abbrev>UAX #9</abbrev> M. Davis, A. Lanin, A. Glass,
                    <title>UNICODE BIDIRECTIONAL ALGORITHM</title>, <citetitle>
                    <ulink url="http://www.unicode.org/reports/tr9/tr9-35.html">http://www.unicode.org/reports/tr9/tr9-35.html</ulink>
                </citetitle> Unicode Bidirectional Algorithm, May 18, 2016.</bibliomixed>

            <bibliomixed id="uax15"><abbrev>UAX #15</abbrev> M. Davis, K. Whistler, <title>UNICODE
                    NORMALIZATION FORMS</title>, <citetitle>
                    <ulink url="http://www.unicode.org/reports/tr15/tr15-44.html">http://www.unicode.org/reports/tr15/tr15-44.html</ulink>
                </citetitle> Unicode Normalization Forms, February 24, 2016.</bibliomixed>

            <bibliomixed id="Unicode"><abbrev>Unicode</abbrev> The Unicode Consortium, <title>The
                    Unicode Standard</title>, <citetitle>
                    <ulink url="http://www.unicode.org/versions/Unicode9.0.0/">http://www.unicode.org/versions/Unicode9.0.0/</ulink>
                </citetitle> Mountain View, CA: The Unicode Consortium, June 21, 2016.</bibliomixed>

            <bibliomixed id="bib_XML"><abbrev>XML</abbrev> W3C, <title>Extensible Markup Language
                    (XML) 1.0</title>, <citetitle>
                    <ulink url="http://www.w3.org/TR/xml/">http://www.w3.org/TR/xml/</ulink>
                </citetitle> (Fifth Edition) W3C Recommendation 26 November 2008.</bibliomixed>
            <bibliomixed id="xml_namespace"><abbrev>XML namespace</abbrev> W3C, <title>Schema
                    document for namespace http://www.w3.org/XML/1998/namespace</title>
                <citetitle><ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink></citetitle> [<edition><ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>]</edition>. at <edition><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink></edition>
                in this distribution</bibliomixed>

            <bibliomixed id="XMLCatalogs"><abbrev>XML Catalogs</abbrev> Norman Walsh, <title>XML
                    Catalogs</title>, <citetitle>
                    <ulink url="https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html">https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html</ulink>
                </citetitle> OASIS Standard V1.1, 07 October 2005.</bibliomixed>


            <bibliomixed id="XMLSchema"><abbrev>XML Schema</abbrev> W3C, <title>XML Schema</title>,
                    <citetitle> refers to the two part standard comprising <link linkend="XMLSchema1">[XML Schema Structures]</link> and <link linkend="XMLSchema2">[XML Schema Datatypes]</link>
                </citetitle> (Second Editions) W3C Recommendations 28 October 2004.</bibliomixed>

            <bibliomixed id="XMLSchema2"><abbrev>XML Schema Datatypes</abbrev> W3C, <title>XML
                    Schema Part 2: Datatypes</title>, <citetitle>
                    <ulink url="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</ulink>
                </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>

            <bibliomixed id="XMLSchema1"><abbrev>XML Schema Structures</abbrev> W3C, <title>XML
                    Schema Part 1: Structures</title>, <citetitle>
                    <ulink url="https://www.w3.org/TR/xmlschema-1/">https://www.w3.org/TR/xmlschema-1/</ulink>
                </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>


        </bibliography>
    </section>

    <section>
        <title>Informative References</title>

        <para>The following referenced documents are not required for the application of this
            document but may assist the reader with regard to a particular subject area.</para>

        <bibliography>
            <title/>

            <bibliomixed id="biblio_ldml"><abbrev>LDML</abbrev>
                <title>Unicode Locale Data Markup Language</title>
                <citetitle>
                    <ulink url="http://unicode.org/reports/tr35/">http://unicode.org/reports/tr35/</ulink>
                </citetitle></bibliomixed>
            
            <bibliomixed id="biblio_srx"><abbrev>SRX</abbrev>
                <title>Segmentation Rules eXchange</title>
                <citetitle>
                    <ulink url="http://www.unicode.org/uli/pas/srx/">http://www.unicode.org/uli/pas/srx/</ulink>
                </citetitle></bibliomixed>

            <bibliomixed id="uax29"><abbrev>UAX #29</abbrev> M. Davis, <title>UNICODE TEXT
                    SEGMENTATION</title>, <citetitle>
                    <ulink url="http://www.unicode.org/reports/tr29/">http://www.unicode.org/reports/tr29/</ulink>
                </citetitle> Unicode text Segmentation.</bibliomixed>

            <bibliomixed id="biblio_xmli18nbp"><abbrev>XML I18N BP</abbrev>
                <title>Best Practices for XML Internationalization</title>, 13 February 2008, <citetitle>
                    <ulink url="http://www.w3.org/TR/xml-i18n-bp/">http://www.w3.org/TR/xml-i18n-bp/</ulink>
                </citetitle> W3C Working Group.</bibliomixed>

            <bibliomixed id="biblio_icu_mf"><abbrev>ICU MessageFormat</abbrev>
                <title>ICU MessageFormat Class</title>
                <citetitle>
                    <ulink url="https://unicode-org.github.io/icu/userguide/format_parse/messages/#messageformat">https://unicode-org.github.io/icu/userguide/format_parse/messages/#messageformat</ulink>
                </citetitle>
            </bibliomixed>

            <bibliomixed id="biblio_wikipedia_genders">
                <abbrev>Grammatical Genders</abbrev>
                <title>List of languages by type of grammatical genders</title>
                <citetitle>
                    <ulink url="https://en.wikipedia.org/wiki/List_of_languages_by_type_of_grammatical_genders#More_than_three_grammatical_genders">https://en.wikipedia.org/wiki/List_of_languages_by_type_of_grammatical_genders#More_than_three_grammatical_genders</ulink>
                </citetitle>
            </bibliomixed>

            <bibliomixed id="biblio_cldr_plural_spec"><abbrev>CLDR Plural Spec</abbrev>
                <title>The CLDR spec for Plural Rules:</title>
                <citetitle>
                    <ulink url="https://cldr.unicode.org/index/cldr-spec/plural-rules">https://cldr.unicode.org/index/cldr-spec/plural-rules</ulink>
                </citetitle>
            </bibliomixed>

            <bibliomixed id="biblio_cldr_plural_lang"><abbrev>CLDR Plural Lang</abbrev>
                <title>Language Plural Rules (all languages):</title>
                <citetitle>
                    <ulink url="http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html">http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html</ulink>
                </citetitle>
            </bibliomixed>

            <bibliomixed id="biblio_cldr_plural"><abbrev>CLDR Plural</abbrev>
                <title>CLDR plural files (<code>plurals.xml</code> &amp; <code>ordinals.xml</code>
                    in <code>core.zip</code>):</title>
                <citetitle>
                    <ulink url="https://www.unicode.org/Public/cldr/44/">https://www.unicode.org/Public/cldr/44/</ulink>
                </citetitle>
            </bibliomixed>

            <bibliomixed id="biblio_icu4c_api"><abbrev>ICU4C API</abbrev>
                <title>ICU4C APIs:</title>
                <citetitle>
                    <ulink url="https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1PluralRules.html">https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1PluralRules.html</ulink>
                </citetitle>
            </bibliomixed>

            <bibliomixed id="biblio_icu4j_api"><abbrev>ICU4J API</abbrev>
                <title>ICU4J APIs:</title>
                <citetitle>
                    <ulink url="https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralRules.html">https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralRules.html</ulink>
                </citetitle>
            </bibliomixed>

        </bibliography>
    </section>

</appendix>
  <appendix id="mediaType" role="normative">
    <title>MIME Type for XLIFF Version 2.0 and Later Releases</title>

    <para>A MIME type (Multipurpose Internet Mail Extensions type) is a two-part identifier for file
        formats and format content transmitted on the Internet. The MIME type is the mechanism used
        to tell a client application the type of document being transferred from a server. It is
        important that servers are set up correctly so that the correct MIME type is transferred
        with each document.</para>

    <para>XLIFF is registered in the <ulink url="https://www.iana.org/assignments/media-types/media-types.xhtml">IANA Media Types
            Registry</ulink> as <code>application/xliff+xml</code>.</para>

</appendix>
  <appendix id="coreValidation">
    <title>XLIFF Grammar Files</title>
    <para>The basic grammar and structure of XLIFF 2.2 is defined using several XML Schemas
        and one XML catalog. The module schemas are specifically referenced from their
        respective modules.</para>

    <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem id="CoreSchema">
            <para>XLIFF Core <link linkend="XMLSchema">[XML Schema]</link>,</para>
            <para><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/xliff_core_2.2.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/xliff_core_2.2.xsd</ulink></para>

        </listitem>
        <listitem id="XLIFFCatalog">
            <para><link linkend="XMLCatalogs">[XML                    Catalog]</link> of XLIFF Defined XML Schemas,</para>
            <para><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/catalog.xml">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/catalog.xml</ulink></para>
        </listitem>

        <listitem>
            <para>XML Schemas of XLIFF Modules are referenced from those modules.</para>
        </listitem>
    </orderedlist>


    <section id="schema_tree">
    <title>XML Schemas Tree</title>

<programlisting format="linespecific">
    
<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/xliff_core_2.2.xsd"><code>Core XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/matches.xsd"><code>Candidates Module XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/glossary.xsd"><code>Glossary Module XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/fs.xsd"><code>Format Style Module XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/metadata.xsd"><code>Metadata Module XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/resource_data.xsd"><code>Resource Data Module XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/size_restriction.xsd"><code>Size and Length Restriction Module XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/validation.xsd"><code>Validation Module XML Schema</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/its.xsd"><code>ITS Module XML Schema (W3C namespace subset)</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/itsm.xsd"><code>ITS Module XML Schema (additional attributes)</code></ulink>
    |
    +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/plural_gender_select.xsd">Plural, Gender, and Select Module</ulink>
  
 
</programlisting>

</section>

    <section>
        <title>Support Schemas</title>
        <para>Third party support schemas that are normatively referenced from this specification or
            from the machine readable artifacts that are a part of this multipart product are
            distributed along with the XLIFF-defined schemas in a subfolder named
                <code>informativeCopiesOf3rdPartySchemas</code> and further subdivided in folders
            according to the owner/maintainer of the schema.</para>
        <warning>
            <para>Schema copies in this sub-folder are provided solely for implementers convenience
                and are NOT a part of the OASIS multipart product. These schemas belong to their
                respective owners and their use is governed by their owners' respective IPR
                policies. The support schemas are organized in folders per owner/maintainer. It is
                the implementer's sole responsibility to ensure that their local copies of all
                schemas are the appropriate up to date versions.</para>
        </warning>

        <para>Currently the only included third party support schema is <ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink> [<ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>]
            at <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/csd02/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink> in this
            distribution.</para>
    </section>
</appendix>
  <appendix id="specChangeTracking" role="informative">
    <title>Specification Change Tracking</title>

    <para>This is to facilitate human tracking of changes between XLIFF Versions 2.2 and
        2.1. </para>


    <orderedlist continuation="restarts" inheritnum="ignore">
        
        <listitem>
            <para>Produced two versions of the specification: </para>
            <simplelist type="vert">
                <member><emphasis>Part 1: Core</emphasis> - simplified version that does not include
                    optional modules.</member>
                <member><emphasis>Part 2: Extended</emphasis> - complete version, including all
                    modules.</member>
            </simplelist>
        </listitem>
        <listitem>
            <para>Changed namespace for the core module to
                    <code>urn:oasis:names:tc:xliff:document:2.2</code>.</para>
        </listitem>
        <listitem>
            <para>Added an optional <link linkend="ref"><code>ref</code></link> attribute to <link linkend="note"><code>&lt;note></code></link> element.</para>
        </listitem>
        <listitem>
            <para>Changed the type of <link linkend="version"><code>version</code></link> attribute to an enumeration
                containing 2.0, 2.1 and 2.2 as valid values.</para>
        </listitem>
        <listitem>
            <para>Allowed an optional <link linkend="notes"><code>&lt;notes></code></link> element at the start of <link linkend="xliff"><code>&lt;xliff></code></link>.</para>
        </listitem>
        <listitem>
            <para>Allowed an optional <remark><code>&lt;mda:metadata></code></remark> element at the start
                of <link linkend="xliff"><code>&lt;xliff></code></link>.</para>
        </listitem>
        <listitem>
            <para>Removed references to Schematron, NVDL and Test Suite from this
                specification.</para>

        </listitem>
        <listitem>
            <para>Updated import references to XLIFF Core Schema in <code>matches.xsd</code>,
                    <code>resource_data.xsd</code> and <code>validation.xsd</code>.</para>
        </listitem>
        <listitem>
            <para>Removed the informative Change Tracking Extension. This module had been already
                demoted in the previous XLIFF version (2.1) but left in the specification for
                informative purposes. During the development of XLIFF 2.2, the TC did not work on
                this item. Therefore a decision was taken to remove it completely from the current
                specification to reduce its volume.</para>
        </listitem>
        <listitem>
            <para>Added new <remark>Plural, Gender, and Select                    Module</remark>. </para>
        </listitem>
        <listitem>
            <para>Updated <link linkend="mediaType">Appendix B</link>
                with the official MIME type listed in IANA Media Type Registry.</para>
        </listitem>
        <listitem>
            <para>Allowed an optional <link linkend="notes"><code>&lt;notes></code></link> element in <remark><code>&lt;res:resourceItem></code></remark>.</para>
        </listitem>
    </orderedlist>
    <para>In spite of the above mentioned changes, fixes, clarifications, and additions, the
        practical workings of the previous versions of the XLIFF Core have not been affected.</para>
    <para>All valid XLIFF 2.0 and 2.1 files are valid XLIFF 2.2 files. The changes introduced in
        version 2.2 are designed to maintain compatibility with versions 2.0 and 2.1.</para>
    <note>
        <para>NVDL and Schematron files used in previous versions of XLIFF are available at <ulink url="https://github.com/oasis-tcs/xliff-xliff-22/tree/master/xliff-21">https://github.com/oasis-tcs/xliff-xliff-22/tree/master/xliff-21</ulink>.</para>
    </note>
</appendix>
  <appendix id="acknowledgements">
    <title>Acknowledgements</title>
    <para>The following individuals have participated in the creation of this specification and are
        gratefully acknowledged:</para>
    
    <itemizedlist spacing="compact">
        <listitem>
            <para>Filip, David - Huawei Technologies Co., Ltd. </para>
        </listitem>
        <listitem>
            <para>Morado Vázquez, Lucía - University of Geneva </para>
        </listitem>
        <listitem>
            <para>Nita, Mihai - Google Inc.</para>
        </listitem>
        <listitem>
            <para>Raya, Rodolfo M. - Individual </para>
        </listitem>
        <listitem>
            <para>Schnabel, Bryan - Individual </para>
        </listitem>
        <listitem>
            <para>Souto Pico, Manuel - cApStAn SA</para>
        </listitem>
        <listitem>
            <para>Umaoka, Yoshito - IBM </para>
        </listitem>
    </itemizedlist>
    
</appendix>
  <appendix id="revisionHistory" role="informative">
    <title>Appendix D. Revision History</title>
    <table>
        <title>Tracking of changes in response to the 1<superscript>st</superscript> Public Review</title>
        <tgroup cols="4">
            <thead>
                <row>
                    <entry>Revision</entry>
                    <entry>Date</entry>
                    <entry>Editor</entry>
                    <entry>Changes Made</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>CSD02</entry>
                    <entry>12 November, 2024</entry>
                    <entry>Rodolfo M. Raya</entry>
                    <entry>
                        <itemizedlist>
                            <listitem>
                                <para>Updated <link linkend="specChangeTracking">Specification Change                                        Tracking</link> appendix with additional information about
                                    the removal of the informative Change Tracking Extension.</para>
                            </listitem>
                            <listitem>
                                <para>Removed compact form (non-XLIFF) examples from <remark>Plural, Gender, and                                        Select Module</remark> module to avoid potential confusions.</para>
                            </listitem>
                            <listitem>
                                <para>Corrected link to grammar file in <remark>Plural, Gender, and                                    Select Module</remark>.</para>
                            </listitem>
                        </itemizedlist>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
</appendix>
  <appendix id="notices">
    <title>Notices</title>
    <para>Copyright © OASIS Open 2024. All Rights Reserved.</para>
    <para>All capitalized terms in the following text have the meanings assigned to them in the
        OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The full <ulink url="https://www.oasis-open.org/policies-guidelines/ipr/">Policy</ulink> may be found at
        the OASIS website: [<ulink url="https://www.oasis-open.org/policies-guidelines/ipr/">https://www.oasis-open.org/policies-guidelines/ipr/</ulink>].</para>
    <para>This document and translations of it may be copied and furnished to others, and derivative
        works that comment on or otherwise explain it or assist in its implementation may be
        prepared, copied, published, and distributed, in whole or in part, without restriction of
        any kind, provided that the above copyright notice and this section are included on all such
        copies and derivative works. However, this document itself may not be modified in any way,
        including by removing the copyright notice or references to OASIS, except as needed for the
        purpose of developing any document or deliverable produced by an OASIS Technical Committee
        (in which case the rules applicable to copyrights, as set forth in the OASIS IPR Policy,
        must be followed) or as required to translate it into languages other than English.</para>
    <para>The limited permissions granted above are perpetual and will not be revoked by OASIS or
        its successors or assigns.</para>
    <para>This document and the information contained herein is provided on an "AS IS" basis and
        OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY
        WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR
        ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. OASIS AND ITS
        MEMBERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES
        ARISING OUT OF ANY USE OF THIS DOCUMENT OR ANY PART THEREOF.</para>
    <para>As stated in the OASIS IPR Policy, the following three paragraphs in brackets apply to
        OASIS Standards Final Deliverable documents (Committee Specifications, OASIS Standards, or
        Approved Errata).</para>
    <para>[OASIS requests that any OASIS Party or any other party that believes it has patent claims
        that would necessarily be infringed by implementations of this OASIS Standards Final
        Deliverable, to notify OASIS TC Administrator and provide an indication of its willingness
        to grant patent licenses to such patent claims in a manner consistent with the IPR Mode of
        the OASIS Technical Committee that produced this deliverable.]</para>
    <para>[OASIS invites any party to contact the OASIS TC Administrator if it is aware of a claim
        of ownership of any patent claims that would necessarily be infringed by implementations of
        this OASIS Standards Final Deliverable by a patent holder that is not willing to provide a
        license to such patent claims in a manner consistent with the IPR Mode of the OASIS
        Technical Committee that produced this OASIS Standards Final Deliverable. OASIS may include
        such claims on its website, but disclaims any obligation to do so.]</para>
    <para>[OASIS takes no position regarding the validity or scope of any intellectual property or
        other rights that might be claimed to pertain to the implementation or use of the technology
        described in this OASIS Standards Final Deliverable or the extent to which any license under
        such rights might or might not be available; neither does it represent that it has made any
        effort to identify any such rights. Information on OASIS' procedures with respect to rights
        in any document or deliverable produced by an OASIS Technical Committee can be found on the
        OASIS website. Copies of claims of rights made available for publication and any assurances
        of licenses to be made available, or the result of an attempt made to obtain a general
        license or permission for the use of such proprietary rights by implementers or users of
        this OASIS Standards Final Deliverable, can be obtained from the OASIS TC Administrator.
        OASIS makes no representation that any information or list of intellectual property rights
        will at any time be complete, or that any claims in such list are, in fact, Essential
        Claims.]</para>
    <para>The name "OASIS" is a trademark of <ulink url="https://www.oasis-open.org/">OASIS</ulink>,
        the owner and developer of this document, and should be used only to refer to the
        organization and its official outputs. OASIS welcomes reference to, and implementation and
        use of, documents, while reserving the right to enforce its marks against misleading uses.
        Please see <ulink url="https://www.oasis-open.org/policies-guidelines/trademark/">https://www.oasis-open.org/policies-guidelines/trademark/</ulink> for above
        guidance.</para>


</appendix>

</article>